{"version":3,"sources":["model/Enums.js","Utils.js","service/GameService.js","service/PlayerService.js","model/Player.js","service/ConfigService.js","components/game/Hand.js","components/game/MiddleSection.js","components/game/FooterSection.js","components/RulesSection.js","components/game/NewstickerSection.js","components/Straight5.js","App.js","reportWebVitals.js","index.js"],"names":["ActionType","PASS","SWAP","CHANGE_TURN","TURN_FACE_UP","CLAIM_TOKEN","REPLACE_CARD","AppMode","START_STATE","GAME","PLAYER_WIN","DrawType","DECK","DISCARD","MoveState","CARD_DRAWN","DISCARD_CHOSEN","TURN_FACE_UP_CHOSEN","TURN_FACE_UP_IN_PROGRESS","SWAP_CHOSEN","SWAP_IN_PROGRESS","PRE_END_STATE","CLAIMING_TOKEN","TokenType","THREE_IN_A_ROW","FOUR_IN_A_ROW","FIVE_IN_A_ROW","THREE_OF_A_KIND","FULL_HOUSE","require","shuffleArray","array","i","length","j","Math","floor","random","getPlayerTextForMoveState","moveState","cardIndex","GameService","playerService","configService","this","deck","discard","swapCardIndex","activeCard","activePlayerIndex","tokenToClaim","repeats","getRepeatsPerNumber","max","getMaxNumberInDeck","push","value","seen","getDeck","setDeck","getDiscard","splice","card","pop","setActiveCard","getTopCardFromDeck","index","console","error","getNumberOfDiscards","setDiscard","getSwapCardIndex","playerCards","getActivePlayersDeck","temp","setSwapCardIndex","getActiveCard","discardIndex","createDeck","dealCardsToPlayers","initializeDiscard","setActivePlayerIndex","setTokenToClaim","canClaimToken","token","getActivePlayersTokens","includes","won","three_map","Object","keys","fh_map","getActivePlayerIndex","getNumberOfPlayers","getTokenToClaim","prev","list","playerDeck","getPlayers","getTokens","Player","PlayerService","players","resetPlayers","tokens","ConfigService","maxNumberInDeck","repeatsPerNumber","numberOfPlayers","numberOfDiscards","classNames","Hand","props","render","className","role","name","id","map","cardCanBePressed","onClick","cardPressedCallback","xmlns","width","height","viewBox","d","TableCanvas","React","createRef","bind","gameService","Component","MiddleSection","highlightDiscard","drawCallback","getTopDiscardValue","highlightDeck","FooterSection","ShowCardActions","ShowTurnUpAction","activePlayerHasAllCardsFaceUp","ShowEndActions","ShowToken","showInitialActions","Fragment","buttonPressedCallback","targetTokens","maxTokens","href","NewstickerSection","Straight5","StartNewGame","startNewGame","setState","deckAndDiscardPressed","type","state","drawCardFromDeck","drawCardFromDiscard","handleDiscard","InterruptedActionType","ReplaceCard","replaceCard","TurnCardFaceUp","turnCardFaceUp","EndMove","SwapCards","swapIsValid","swapCards","activePlayerCanClaimToken","ChangeTurn","ClaimTokenCardPress","isValidIndexForToken","claimToken","checkIfWinner","nextPlayer","handleActionButtonPressed","action","setDiscardChosenState","handlePlayerCardPressed","player","log","discardCard","discardPileHas0Cards","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dfc2d56f.chunk.js","sourcesContent":["export const ActionType = {\n  PASS: 'PASS',\n  SWAP: 'SWAP',\n  CHANGE_TURN: 'CHANGE_TURN',\n  TURN_FACE_UP: 'TURN_FACE_UP',\n  CLAIM_TOKEN: 'CLAIM_TOKEN',\n  REPLACE_CARD: 'REPLACE_CARD'\n}\n\nexport const AppMode = {\n  START_STATE: 'START_STATE',\n  GAME: 'GAME',\n  PLAYER_WIN: 'PLAYER_WIN'\n}\n\nexport const DrawType = {\n  DECK: 'DECK',\n  DISCARD: 'DISCARD'\n}\n\nexport const MoveState = {\n  START_STATE:  'START_STATE',\n  CARD_DRAWN: 'CARD_DRAWN',\n  DISCARD_CHOSEN: 'DISCARD_CHOSEN',\n  TURN_FACE_UP_CHOSEN: 'TURN_FACE_UP_CHOSEN',\n  TURN_FACE_UP_IN_PROGRESS: 'TURN_FACE_UP_IN_PROGRESS',\n  SWAP_CHOSEN: 'SWAP_CHOSEN',\n  SWAP_IN_PROGRESS: 'SWAP_IN_PROGRESS',\n  PRE_END_STATE: 'PRE_END_STATE',\n  CLAIMING_TOKEN: 'CLAIMING_TOKEN'\n}\n\nexport const TokenType = {\n  THREE_IN_A_ROW: 'THREE_IN_A_ROW',\n  FOUR_IN_A_ROW: 'FOUR_IN_A_ROW',\n  FIVE_IN_A_ROW: 'FIVE_IN_A_ROW',\n  THREE_OF_A_KIND: 'THREE_OF_A_KIND',\n  FULL_HOUSE: 'FULL_HOUSE'\n}\n","const {MoveState} = require('./model/Enums.js')\n\nfunction shuffleArray(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n}\n\nfunction getPlayerTextForMoveState(moveState, cardIndex) {\n  switch (moveState) {\n    case MoveState.START_STATE:\n      return 'Please draw a card from Deck or Discard'\n    case MoveState.CARD_DRAWN:\n      return 'Replace card in your hand or choose a discard option';\n    case MoveState.TURN_FACE_UP_CHOSEN:\n      return 'Select the first card to turn face up'\n    case MoveState.TURN_FACE_UP_IN_PROGRESS:\n      return 'Select the second card to turn face up or pass'\n    case MoveState.SWAP_CHOSEN:\n      return 'Select the first card you\\'d like  to swap'\n    case MoveState.SWAP_IN_PROGRESS:\n      return 'Selected ' + cardIndex + '. Please select a second card to swap'\n    case MoveState.PRE_END_STATE:\n      return 'Please select a token to claim or pass'\n    case MoveState.CLAIMING_TOKEN:\n      return 'Please select the first card of your run';\n    case MoveState.DISCARD_CHOSEN:\n      return 'Please select the discard pile you would like to discard the card to';\n    default:\n      return 'UNKONWN STATE DETECTED'\n  }\n}\n\nexport {shuffleArray, getPlayerTextForMoveState};\n","const { shuffleArray } = require('../Utils.js')\nconst { TokenType } = require('../model/Enums.js')\nclass GameService {\n\n  constructor(playerService, configService) {\n      this.playerService = playerService;\n      this.configService = configService;\n\n      this.deck = [];\n      this.discard = [[]];\n      this.swapCardIndex = -1;\n      this.activeCard = {};\n      this.activePlayerIndex = 0;\n      this.tokenToClaim = '';\n  }\n\n  createDeck() {\n    const repeats = this.configService.getRepeatsPerNumber();\n    const max = this.configService.getMaxNumberInDeck();\n    this.deck = [];\n    for (let i = 0; i < repeats; i++) {\n      for (let j = 0; j < max; j++) {\n        this.deck.push({value: j+1, seen: false})\n      }\n    }\n    shuffleArray(this.deck);\n  }\n\n  getTopCardFromDeck() {\n    if (this.getDeck().length === 0) {\n      this.setDeck([]);\n      for(let i = 0; i < this.getDiscard().length; i ++) {\n        this.getDeck().push(...this.getDiscard()[i].splice(0, this.getDiscard()[i].length - 1));\n      }\n      shuffleArray(this.getDeck());\n    }\n    const card = this.getDeck().pop();\n    card.seen = false;\n    return card;\n  }\n\n  drawCardFromDeck() {\n    this.setActiveCard(this.getTopCardFromDeck());\n  }\n\n  drawCardFromDiscard(index) {\n    if (this.getDiscard()[index].length === 0) {\n      console.error('SOMETHING went wrong, discard length = 0')\n    }\n    this.setActiveCard(this.getDiscard()[index].pop());\n  }\n\n  discardPileHas0Cards() {\n    for (let i = 0; i < this.configService.getNumberOfDiscards(); i ++) {\n      if (this.getDiscard()[i].length === 0) {\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  initializeDiscard() {\n    this.setDiscard([]);\n    for (let i = 0; i < this.configService.getNumberOfDiscards(); i ++) {\n      this.getDiscard().push([]);\n      this.getDiscard()[i].push(this.getDeck().pop());\n    }\n  }\n\n  swapIsValid(index) {\n    return this.getSwapCardIndex() > 0 && this.getSwapCardIndex() !== index;\n  }\n\n  swapCards(index) {\n    const playerCards = this.getActivePlayersDeck();\n    const temp = playerCards[index];\n    playerCards[index] = playerCards[this.swapCardIndex];\n    playerCards[this.swapCardIndex] = temp;\n    this.setSwapCardIndex(-1);\n  }\n\n  replaceCard(index) {\n    const temp = this.getActivePlayersDeck()[index];\n    this.getActiveCard().seen = true;\n    this.getActivePlayersDeck()[index] = this.getActiveCard();\n    this.setActiveCard(temp);\n  }\n\n  discardCard(discardIndex) {\n    this.getDiscard()[discardIndex].push(this.getActiveCard());\n    this.setActiveCard({});\n  }\n\n  turnCardFaceUp(index) {\n    const card = this.getActivePlayersDeck()[index];\n    if (this.getActivePlayersDeck()[index].seen === true) {\n      return false;\n    }\n    card.seen = true;\n    return true;\n  }\n\n  startNewGame() {\n    this.createDeck();\n    this.playerService.dealCardsToPlayers(this.getDeck());\n    this.initializeDiscard();\n    this.setSwapCardIndex(-1);\n    this.setActiveCard({});\n    this.setActivePlayerIndex(0);\n    this.setTokenToClaim('');\n  }\n\n  activePlayerCanClaimToken() {\n    return this.canClaimToken(TokenType.THREE_IN_A_ROW) ||\n     this.canClaimToken(TokenType.FOUR_IN_A_ROW) ||\n     this.canClaimToken(TokenType.FIVE_IN_A_ROW) ||\n     this.canClaimToken(TokenType.THREE_OF_A_KIND) ||\n     this.canClaimToken(TokenType.FULL_HOUSE);\n  }\n\n  canClaimToken(token) {\n    const deck = this.getActivePlayersDeck();\n    const existing_tokens = this.getActivePlayersTokens();\n    if (existing_tokens.includes(token)) {\n      return false;\n    }\n\n    switch (token) {\n      case TokenType.THREE_IN_A_ROW:\n        for (let j = 0; j < 3; j ++) {\n          let won = true;\n          if (!deck[j].seen) {\n            continue\n          }\n          for (let i = j+1; i < 3+j; i ++) {\n            if (!deck[i].seen || deck[i].value !== deck[i-1].value + 1) {\n              won = false;\n              break;\n            }\n          }\n          if (won) {\n            return true\n          }\n        }\n        return false;\n      case TokenType.FOUR_IN_A_ROW:\n        for (let j = 0; j < 2; j ++) {\n          let won = true;\n          if (!deck[j].seen) {\n            continue\n          }\n          for (let i = j+1; i < 4+j; i ++) {\n            if (!deck[i].seen || deck[i].value !== deck[i-1].value + 1) {\n              won = false;\n              break;\n            }\n          }\n          if (won) {\n            return true\n          }\n        }\n        return false;\n      case TokenType.FIVE_IN_A_ROW:\n        if (!deck[0].seen) {\n          return false\n        }\n        for (let i = 1; i < 5; i ++) {\n          if (!deck[i].seen || deck[i].value !== deck[i-1].value + 1) {\n            return false\n          }\n        }\n        return true;\n      case TokenType.THREE_OF_A_KIND:\n        let three_map = {};\n        for (let i = 0; i < 5; i++) {\n          if (!deck[i].seen) {\n            continue;\n          }\n          if (!three_map[deck[i].value]) {\n            three_map[deck[i].value] = 0\n          }\n          three_map[deck[i].value] = three_map[deck[i].value] + 1\n        }\n\n        for (let key of Object.keys(three_map)) {\n          if (three_map[key] >= 3) {\n            return true;\n          }\n        }\n        return false;\n      case TokenType.FULL_HOUSE:\n        let fh_map = {};\n        for (let i = 0; i < 5; i++) {\n          if (!deck[i].seen) {\n            continue;\n          }\n          if (!fh_map[deck[i].value]) {\n            fh_map[deck[i].value] = 0\n          }\n          fh_map[deck[i].value] = fh_map[deck[i].value] + 1\n        }\n        const keys = Object.keys(fh_map);\n        if (keys.length !== 2) {\n          return false;\n        }\n        return (fh_map[keys[0]] === 2 && fh_map[keys[1]] === 3) || (fh_map[keys[0]] === 3 && fh_map[keys[1]] === 2)\n    }\n    return false;\n  }\n\n  nextPlayer() {\n    this.setActivePlayerIndex(this.getActivePlayerIndex() + 1 === this.configService.getNumberOfPlayers() ? 0 : this.getActivePlayerIndex() + 1);\n  }\n\n  isValidIndexForToken(index) {\n    const deck = this.getActivePlayersDeck();\n    if ([TokenType.THREE_OF_A_KIND, TokenType.FULL_HOUSE, TokenType.FIVE_IN_A_ROW].includes(this.getTokenToClaim())) {\n      return this.canClaimToken(deck, this.getTokenToClaim(), this.getActivePlayersTokens());\n    }\n    if (this.getTokenToClaim() === TokenType.THREE_IN_A_ROW) {\n      // if index is 3 that is 4th card. 3+4 not enough cards for THREE_IN_A_ROW\n      if (!deck[index].seen || index >= 3) {\n        return false;\n      }\n      let prev = deck[index].value;\n      for (let i = index + 1; i < index + 3; i++) {\n\n        if (!deck[i].seen || deck[i].value !== ++prev)  {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (this.getTokenToClaim() === TokenType.FOUR_IN_A_ROW) {\n      // if index is 2 that is 3rd card. 2+3+4 not enough cards for THREE_IN_A_ROW\n      if (!deck[index].seen || index >= 2) {\n        return false;\n      }\n      let prev = deck[index].value;\n      for (let i = index + 1; i < index + 4; i++) {\n\n        if (!deck[i].seen || deck[i].value !== ++prev)  {\n          return false;\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n\n  claimToken(index) {\n    const deck = this.getActivePlayersDeck();\n    switch (this.getTokenToClaim()) {\n      case TokenType.FIVE_IN_A_ROW:\n      case TokenType.FULL_HOUSE:\n        for (let i = 0; i < deck.length; i ++) {\n          //TODO come back to this to pick discard\n          this.getDiscard()[0].push(deck[i]);\n          deck[i] = this.getTopCardFromDeck();\n        }\n        break;\n      case TokenType.THREE_OF_A_KIND:\n        let three_map = {};\n        for (let i = 0; i < 5; i++) {\n          if (!deck[i].seen) {\n            continue;\n          }\n          if (!three_map[deck[i].value]) {\n            three_map[deck[i].value] = []\n          }\n          three_map[deck[i].value].push(i);\n          if (three_map[deck[i].value].length >= 3) {\n            const list = three_map[deck[i].value];\n            for (let j = 0; j < list.length; j ++) {\n              //TODO come back to this to pick discard\n              this.getDiscard()[0].push(deck[list[j]]);\n              deck[list[j]] = this.getTopCardFromDeck();\n            }\n            break;\n          }\n        }\n        break;\n      case TokenType.THREE_IN_A_ROW:\n      for (let i = index; i < index + 3; i++) {\n        //TODO come back to this to pick discard\n        this.getDiscard()[0].push(deck[i]);\n        deck[i] = this.getTopCardFromDeck();\n        deck[i].seen = false;\n      }\n        break;\n      case TokenType.FOUR_IN_A_ROW:\n      for (let i = index; i < index + 4; i++) {\n        //TODO come back to this to pick discard\n        this.getDiscard()[0].push(deck[i]);\n        deck[i] = this.getTopCardFromDeck();\n      }\n        break;\n      default:\n        console.error('something went wrong');\n        return\n    }\n    this.getActivePlayersTokens().push(this.getTokenToClaim());\n    this.setTokenToClaim('');\n  }\n\n  activePlayerHasAllCardsFaceUp() {\n    const playerDeck = this.getActivePlayersDeck()\n    for (let i = 0; i < playerDeck.length; i++) {\n      if (!playerDeck[i].seen) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  getActivePlayersTokens() {\n    return this.playerService.getPlayers()[this.getActivePlayerIndex()].getTokens();\n  }\n\n  getActivePlayersDeck() {\n    return this.playerService.getPlayers()[this.getActivePlayerIndex()].getDeck();\n  }\n\n  getDeck() {\n    return this.deck;\n  }\n\n  getDiscard() {\n    return this.discard;\n  }\n\n  getSwapCardIndex() {\n    return this.swapCardIndex;\n  }\n\n  getActiveCard() {\n    return this.activeCard;\n  }\n\n  getActivePlayerIndex() {\n    return this.activePlayerIndex;\n  }\n\n  getTokenToClaim() {\n    return this.tokenToClaim;\n  }\n\n  setDeck(deck) {\n    this.deck = deck;\n  }\n\n  setDiscard(discard) {\n    this.discard = discard;\n  }\n\n  setSwapCardIndex(swapCardIndex) {\n    this.swapCardIndex = swapCardIndex;\n  }\n\n  setActiveCard(activeCard) {\n    this.activeCard = activeCard;\n  }\n\n  setActivePlayerIndex(activePlayerIndex) {\n    this.activePlayerIndex = activePlayerIndex;\n  }\n\n  setTokenToClaim(tokenToClaim) {\n    this.tokenToClaim = tokenToClaim;\n  }\n}\n\nexport {GameService};\n","const {Player} = require('../model/Player.js');\n\nclass PlayerService {\n\n  constructor(configService) {\n    this.configService = configService;\n    this.players = [];\n    this.resetPlayers();\n  }\n\n  resetPlayers() {\n    this.players = [];\n    for (let i = 0; i < this.configService.getNumberOfPlayers(); i ++) {\n      this.players.push(new Player([], []));\n    }\n  }\n\n  dealCardsToPlayers(deck) {\n    for (let j = 0; j < 5; j++) {\n      for (let i = 0; i < this.getPlayers().length; i ++) {\n        this.players[i].getDeck().push(deck.pop());\n      }\n    }\n  }\n\n  getPlayers() {\n    return this.players;\n  }\n\n  setPlayers(players) {\n    this.players = players;\n  }\n\n}\n\nexport {PlayerService};\n","class Player {\n\n  constructor(deck, tokens) {\n      this.deck = deck;\n      this.tokens = tokens; // THREE_IN_A_ROW, FOUR_IN_A_ROW, FIVE_IN_A_ROW, THREE_OF_A_KIND, FULL_HOUSE\n  }\n\n  getDeck() {\n    return this.deck;\n  }\n\n  getTokens() {\n    return this.tokens;\n  }\n\n  setDeck(deck) {\n    this.deck = deck;\n  }\n\n  setTokens(tokens) {\n    this.tokens = tokens;\n  }\n}\n\nexport {Player};\n","class ConfigService {\n\n  constructor(maxNumberInDeck, repeatsPerNumber, numberOfPlayers, numberOfDiscards) {\n    this.maxNumberInDeck = maxNumberInDeck;\n    this.repeatsPerNumber = repeatsPerNumber;\n    this.numberOfPlayers = numberOfPlayers;\n    this.numberOfDiscards = numberOfDiscards;\n  }\n\n  getMaxNumberInDeck() {\n    return this.maxNumberInDeck;\n  }\n\n  getRepeatsPerNumber() {\n    return this.repeatsPerNumber;\n  }\n\n  getNumberOfPlayers() {\n    return this.numberOfPlayers;\n  }\n\n  getNumberOfDiscards() {\n    return this.numberOfDiscards;\n  }\n\n}\n\nexport {ConfigService};\n","import React, { Component } from 'react';\nimport './Hand.css';\nconst classNames = require('classnames');\nconst {MoveState} = require('../../model/Enums.js')\n\nclass Hand extends Component {\n  constructor(props) {\n    super(props);\n    this.TableCanvas = React.createRef();\n    this.render.bind(this);\n    this.deck = this.props.playerService.getPlayers()[this.props.id].getDeck();\n    this.tokens = this.props.playerService.getPlayers()[this.props.id].getTokens();\n  }\n\n  // TODO maybe add this for claimToken logic. Think too much\n  // TODO the 0/4 win tracking should be done dynamically and pass in rather than hard-coded\n   // TODO testing lol!\n  cardCanBePressed(card, index) {\n    return this.props.id === this.props.gameService.getActivePlayerIndex()\n     && (\n       ([MoveState.TURN_FACE_UP_CHOSEN, MoveState.TURN_FACE_UP_IN_PROGRESS].includes(this.props.moveState) && !card.seen)\n           ||\n       (MoveState.SWAP_IN_PROGRESS === this.props.moveState && this.props.gameService.getSwapCardIndex() !== index)\n           ||\n       [MoveState.CARD_DRAWN, MoveState.SWAP_CHOSEN,  MoveState.CLAIMING_TOKEN].includes(this.props.moveState));\n  }\n\n  render = () => {\n    return (\n      <div className=\"PlayerHand\" data-testid=\"hand\">\n        <div role=\"header\" className=\"PlayerHeader\" name=\"Player1\">\n          <p className=\"playerTag\">Player {this.props.id+1}</p>\n        </div>\n        <div className=\"PlayerTokenHeader\">\n          <p className=\"playerTag\">Tokens [{this.tokens.length}/4]</p>\n        </div>\n        {this.deck.map((card, index) => (\n          <div className=\"PlayerCardWrapper\" key={index}>\n          <div className={classNames('PlayerCard', {'PlayerCardBack': !card.seen}, {'PlayerCardFront': card.seen}, {\"PlayerCardIsActive\" : this.cardCanBePressed(card, index)})} role='playerCard' onClick={() => this.props.cardPressedCallback(this.props.id, index)}>\n            {card.seen ? card.value : <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M12 2c5.514 0 10 4.486 10 10s-4.486 10-10 10-10-4.486-10-10 4.486-10 10-10zm0-2c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm1.25 17c0 .69-.559 1.25-1.25 1.25-.689 0-1.25-.56-1.25-1.25s.561-1.25 1.25-1.25c.691 0 1.25.56 1.25 1.25zm1.393-9.998c-.608-.616-1.515-.955-2.551-.955-2.18 0-3.59 1.55-3.59 3.95h2.011c0-1.486.829-2.013 1.538-2.013.634 0 1.307.421 1.364 1.226.062.847-.39 1.277-.962 1.821-1.412 1.343-1.438 1.993-1.432 3.468h2.005c-.013-.664.03-1.203.935-2.178.677-.73 1.519-1.638 1.536-3.022.011-.924-.284-1.719-.854-2.297z\"/></svg> }\n          </div>\n          </div>\n        ))}\n        <div className='PlayerTokens'>\n        {this.tokens.map((token, index) => (\n          <div className='PlayerToken' role='playerToken' key={index}>\n            {token}\n          </div>\n        ))}\n        </div>\n      </div>\n  )}\n}\n\nexport default Hand;\n","import React, { Component } from 'react';\nimport './MiddleSection.css';\nconst {DrawType, MoveState} = require('../../model/Enums.js')\nconst classNames = require('classnames');\n\nclass MiddleSection extends Component {\n  constructor(props) {\n    super(props);\n    this.TableCanvas = React.createRef();\n    this.render.bind(this);\n    this.gameService = props.gameService;\n  }\n\n  getTopDiscardValue(index) {\n    const discard = this.gameService.getDiscard()[index];\n    return discard.length > 0 ? discard[discard.length-1].value : '';\n  }\n\n  highlightDeck() {\n    return this.props.moveState === MoveState.START_STATE;\n  }\n\n  highlightDiscard() {\n    return [MoveState.START_STATE, MoveState.DISCARD_CHOSEN].includes(this.props.moveState);\n  }\n\n  // TODO - move this.state.MoveState to a dedicated service.\n  // Now MOVE STATE IS HERE DO WE WANT TO MOVE THE DRAW LOGIC DOWN OR  KEEP IT HIGHER?\n  // TODO mobile playable\n  render = () => {\n    return (\n      <div className=\"MiddleSection\" data-testid=\"middle-section\">\n      {this.gameService.getDiscard().map((discard, index) => (\n        <div className=\"DiscardSection\" key={index}>\n          <div className=\"FullWidth\" role=\"header\">\n            Discard {index + 1}\n          </div>\n          <div className=\"PlayerCardWrapper\">\n            <div className={classNames('PlayerCard', 'PlayerCardFront', {\"PlayerCardIsActive\" : this.highlightDiscard()})} data-testid={'middle-section-discard-' + index} onClick={() => {this.props.drawCallback(DrawType.DISCARD, index)}}>\n              {this.getTopDiscardValue(index)}\n            </div>\n          </div>\n        </div>\n      ))}\n        <div className=\"DeckSection\">\n          <div className=\"FullWidth\" role=\"header\">\n            Deck\n          </div>\n          <div className={classNames('PlayerCard', 'PlayerCardBack', {\"PlayerCardIsActive\" : this.highlightDeck()})} data-testid=\"middle-section-deck\" onClick={() => {this.props.drawCallback(DrawType.DECK)}}>\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M12 2c5.514 0 10 4.486 10 10s-4.486 10-10 10-10-4.486-10-10 4.486-10 10-10zm0-2c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm1.25 17c0 .69-.559 1.25-1.25 1.25-.689 0-1.25-.56-1.25-1.25s.561-1.25 1.25-1.25c.691 0 1.25.56 1.25 1.25zm1.393-9.998c-.608-.616-1.515-.955-2.551-.955-2.18 0-3.59 1.55-3.59 3.95h2.011c0-1.486.829-2.013 1.538-2.013.634 0 1.307.421 1.364 1.226.062.847-.39 1.277-.962 1.821-1.412 1.343-1.438 1.993-1.432 3.468h2.005c-.013-.664.03-1.203.935-2.178.677-.73 1.519-1.638 1.536-3.022.011-.924-.284-1.719-.854-2.297z\"/></svg>\n              </div>\n            </div>\n      </div>\n  )}\n}\n\nexport default MiddleSection;\n","import React, { Component } from 'react';\nimport './FooterSection.css';\nconst { ActionType, MoveState, TokenType } = require('../../model/Enums.js')\n\nclass FooterSection extends Component {\n  constructor(props) {\n    super(props);\n    this.gameService = props.gameService;\n    this.TableCanvas = React.createRef();\n    this.render.bind(this);\n  }\n\n  ShowCardActions = () => {\n    return [MoveState.CARD_DRAWN, MoveState.TURN_FACE_UP_CHOSEN, MoveState.TURN_FACE_UP_IN_PROGRESS, MoveState.SWAP_CHOSEN, MoveState.SWAP_IN_PROGRESS, MoveState.DISCARD_CHOSEN].includes(this.props.moveState)\n  }\n\n  ShowTurnUpAction = () => {\n    return !this.gameService.activePlayerHasAllCardsFaceUp();\n  }\n\n  ShowEndActions = () => {\n    return this.props.moveState === MoveState.PRE_END_STATE;\n  }\n\n  ShowToken = token => {\n    return this.gameService.canClaimToken(token);\n  }\n  showInitialActions = () => {\n    return this.props.moveState !== MoveState.DISCARD_CHOSEN;\n  }\n\n  render = () => {\n    return (\n      <React.Fragment>\n      <div className=\"CardTableFooter\" data-testid=\"footer-section\">\n        {this.ShowCardActions() &&\n          <React.Fragment>\n              {(!!this.gameService.getActiveCard() && !!this.gameService.getActiveCard().value) &&\n              <React.Fragment>\n                <div className=\"PlayerCard PlayerCardFront\" role=\"activeCard\">\n                  {this.gameService.getActiveCard().value}\n                </div>\n                {this.showInitialActions() &&\n                <div>\n                <button className=\"swapButton\" onClick={() => {this.props.buttonPressedCallback(ActionType.SWAP)}}> Discard to swap two </button>\n                {this.ShowTurnUpAction() && <button className=\"turnFaceUpButton\" data-testid='turn-face-up-button' onClick={() => {this.props.buttonPressedCallback(ActionType.TURN_FACE_UP)}}> Discard to turn two face up </button>}\n                </div>}\n            </React.Fragment>}\n        {this.showInitialActions() &&  <div className=\"FullWidth\"><button className=\"mb-2 FullWidth\" onClick={() => {this.props.buttonPressedCallback(ActionType.PASS)}}> Pass </button></div>}\n\n          </React.Fragment>}\n\n          {this.ShowEndActions() &&\n            <React.Fragment>\n                {this.ShowToken(TokenType.THREE_IN_A_ROW) && <div><button onClick={() => this.props.buttonPressedCallback(ActionType.CLAIM_TOKEN, TokenType.THREE_IN_A_ROW)}> THREE IN A ROW </button></div>}\n                {this.ShowToken(TokenType.FOUR_IN_A_ROW) && <div><button onClick={() => this.props.buttonPressedCallback(ActionType.CLAIM_TOKEN, TokenType.FOUR_IN_A_ROW)}> FOUR IN A ROW </button></div>}\n                {this.ShowToken(TokenType.FIVE_IN_A_ROW) && <div><button onClick={() => this.props.buttonPressedCallback(ActionType.CLAIM_TOKEN, TokenType.FIVE_IN_A_ROW)}> FIVE IN A ROW </button></div>}\n                {this.ShowToken(TokenType.THREE_OF_A_KIND) && <div><button onClick={() => this.props.buttonPressedCallback(ActionType.CLAIM_TOKEN, TokenType.THREE_OF_A_KIND)}> THREE OF A KIND </button></div>}\n                {this.ShowToken(TokenType.FULL_HOUSE) && <div><button onClick={() => this.props.buttonPressedCallback(ActionType.CLAIM_TOKEN, TokenType.FULL_HOUSE)}> FULL HOUSE </button></div>}\n                <div className=\"FullWidth\"><button className=\"mb-2 FullWidth\" onClick={() => {this.props.buttonPressedCallback(ActionType.CHANGE_TURN)}}> Pass </button></div>\n            </React.Fragment>}\n      </div>\n      </React.Fragment>\n  )}\n}\n\nexport default FooterSection;\n","import React, { Component } from 'react';\nimport './RulesSection.css';\n\nclass Hand extends Component {\n  constructor(props) {\n    super(props);\n    this.render.bind(this);\n    this.targetTokens = 4;\n    this.maxTokens = 5;\n  }\n\n  // TODO ability to show rules anytime? (Maybe pop-up)\n  // TODO Ability to change some core settings\n\n  render = () => {\n    return (\n      <div className=\"rulesSection\" data-testid=\"rules-section\">\n        <div className=\"secondary-background\">\n          <h3 className=\"rules-header\">Rules</h3>\n        </div>\n        <div className=\"secondary-background\">\n          <h4 className=\"rules-header\">Introduction</h4>\n          <p className=\"rules-p\">Welcome to Straight 5, a rummy-like, yahtzee-like card game! This is the (work-in-progress) digitial version of the (hopefully future) Straight 5 game. </p>\n        </div>\n\n        <div className=\"primary-background\">\n          <h4 className=\"rules-header\">Winning</h4>\n          <p className=\"rules-p\">\n          The first player to claim {this.targetTokens} out of {this.maxTokens} tokens below wins.</p>\n          <ul>\n            <li>Three in a row</li>\n            <li>Four in a row</li>\n            <li>Five in a row</li>\n            <li>Three of a kind</li>\n            <li>Full House</li>\n          </ul>\n        </div>\n        <div className=\"secondary-background\">\n          <h4 className=\"rules-header\">Set up</h4>\n          <p className=\"rules-p\">Each player begins with 5 cards face-down in front of them.\n          The top card of the deck will be turned over as a discard</p>\n        </div>\n        <div className=\"primary-background\">\n          <h4 className=\"rules-header\">Turn Order</h4>\n          <p className=\"rules-p\">Each consists of three phases:</p>\n          <ol>\n            <li><h4 className=\"phaseHeader\">Draw Phase:</h4> draw the top card of the deck or discard piles</li>\n            <li><h4 className=\"phaseHeader\">Play Phase:</h4>\n              <ul>\n                <li> Place card in front of you (and discard existing card), or; </li>\n                <li> Discard the drawn card (to any discard pile) and:  </li>\n                <ul>\n                  <li> Turn up to two cards face-up</li>\n                  <li> Swap any two cards </li>\n                </ul>\n              </ul>\n            </li>\n            <li><h4 className=\"phaseHeader\">Claim Token Phase</h4>: Claim a token by discarding the required cards (e.g. 1 2 3 4 for Four In a Row).</li>\n          </ol>\n        </div>\n        <div className=\"secondary-background\">\n          <h4 className=\"rules-header\">Rule Clarifications</h4>\n          <p className=\"rules-p\">Here are some clarifications on rules above:</p>\n          <ol>\n            <li>When you place the drawn card in front of you, you do not get to take another action</li>\n            <li>When you discard a card, you get to choose which discard pile it goes into <b>UNLESS</b> a discard pile has 0 cards, in which case you must discard it there (and the app will do this automatically)</li>\n            <li>If you have only one card face-up and choose to take the \"turn up to two cards face up\" action. You only get to turn one card face up. </li>\n            <li>You can only claim each token once</li>\n            <li>You can only claim one token per turn</li>\n            <li>The cards to claim the tokens for the straights (3/4/5 in a row) must be adjacent and in ascending order (e.g. 1 2 3 not 3 2 1 or 1 3 2)</li>\n            <li>The cards to claim the tokens for three of a kind and full house can be anywhere</li>\n          </ol>\n        </div>\n        <div className=\"primary-background\">\n          <h4 className=\"rules-header\">Final notes</h4>\n          <p className=\"rules-p\">If you find any bugs or issues with Straight 5 please submit an issue by <a href=\"https://github.com/andyrewwer/straight5/issues\">clicking here</a> or you can email me at <a href=\"mailto:a.andyrewwer@gmail.com?subject = Feedback on Straight 5\">a.andyrewwer@gmail.com.</a> Also feel free to email me with other thoughts/feedback/concerns (about the game or otherwise)!</p>\n        </div>\n\n      </div>\n  )}\n}\n\nexport default Hand;\n","import React, { Component } from 'react';\nimport './NewstickerSection.css';\nconst { getPlayerTextForMoveState } = require('../../Utils.js')\n\nclass NewstickerSection extends Component {\n  constructor(props) {\n    super(props);\n    this.gameService = props.gameService;\n    this.TableCanvas = React.createRef();\n    this.render.bind(this);\n  }\n\n  render = () => {\n    return (\n      <React.Fragment>\n      <div className=\"newsTicker\" data-testid=\"newsticker\">\n        <div className=\"newsTickerTriangleLeft\"/>\n        <div className=\"newsTickerMain\">\n          {getPlayerTextForMoveState(this.props.moveState, this.gameService.getSwapCardIndex() + 1)}\n        </div>\n        <div className=\"newsTickerTriangleRight\"/>\n      </div>\n      </React.Fragment>\n  )}\n}\n\nexport default NewstickerSection;\n","import React, { Component } from 'react';\nimport Hand from './game/Hand.js';\nimport MiddleSection from './game/MiddleSection.js';\nimport FooterSection from './game/FooterSection.js';\nimport RulesSection from './RulesSection.js';\nimport NewstickerSection from './game/NewstickerSection.js';\nimport './Straight5.css';\nconst {ActionType, AppMode, DrawType, MoveState, TokenType} = require('../model/Enums.js')\nconst classNames = require('classnames');\n\nclass Straight5 extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      AppMode: AppMode.START_STATE,\n      MoveState: MoveState.START_STATE,\n    };\n    this.playerService = props.playerService;\n    this.gameService = props.gameService;\n    this.configService = props.configService;\n  }\n\n  StartNewGame = () => {\n    this.playerService.resetPlayers();\n    this.gameService.startNewGame();\n    this.setState({\n      MoveState: MoveState.START_STATE,\n      AppMode: AppMode.GAME\n    });\n  }\n\n\n  handleDiscard(index, action) {\n    this.gameService.discardCard(index);\n    if (action === ActionType.PASS) {\n      return this.EndMove();\n    } else if (action === ActionType.SWAP) {\n      return this.setState({MoveState: MoveState.SWAP_CHOSEN});\n    } else if (action ===  ActionType.TURN_FACE_UP) {\n      return this.setState({MoveState: MoveState.TURN_FACE_UP_CHOSEN});\n    } else if (action === ActionType.REPLACE_CARD) {\n      this.EndMove();\n    }\n  }\n  //TODO animation\n  deckAndDiscardPressed = (type, index) => {\n    if (this.state.MoveState !== MoveState.START_STATE) {\n      if (this.state.MoveState === MoveState.DISCARD_CHOSEN &&\n           type === DrawType.DISCARD) {\n             this.handleDiscard(index, this.state.InterruptedActionType);\n      }\n      return;\n    }\n    if (type === DrawType.DECK) {\n      this.gameService.drawCardFromDeck();\n    } else if (type === DrawType.DISCARD) {\n\n      this.gameService.drawCardFromDiscard(index);\n    } else {\n      console.error('draw card failed', type);\n    }\n    this.setState({\n      MoveState: MoveState.CARD_DRAWN\n    });\n\n  }\n\n  ReplaceCard = index => {\n    this.gameService.replaceCard(index);\n  }\n\n  TurnCardFaceUp = index => {\n    if (!this.gameService.turnCardFaceUp(index)) {\n      return;\n    }\n    if (this.state.MoveState === MoveState.TURN_FACE_UP_IN_PROGRESS) {\n      this.EndMove();\n      return;\n    }\n    if (this.gameService.activePlayerHasAllCardsFaceUp()) {\n      this.EndMove();\n      return;\n    }\n    this.setState({\n      MoveState: MoveState.TURN_FACE_UP_IN_PROGRESS,\n    });\n  }\n\n  SwapCards = index => {\n    if (this.gameService.swapIsValid(index)) {\n      this.gameService.swapCards(index);\n      this.EndMove();\n      return\n    }\n    this.gameService.setSwapCardIndex(index);\n    this.setState({\n      MoveState: MoveState.SWAP_IN_PROGRESS\n    })\n  }\n\n  EndMove = () => {\n    if (this.gameService.activePlayerCanClaimToken()) {\n      this.setState({MoveState: MoveState.PRE_END_STATE});\n      return;\n    }\n    this.ChangeTurn();\n\n  }\n\n  checkIfWinner() {\n    if (this.gameService.getActivePlayersTokens().length >= 4) {\n      this.setState({\n        AppMode: AppMode.PLAYER_WIN\n      });\n      return true;\n    }\n    return false;\n  }\n\n  ClaimTokenCardPress = index => {\n    if (this.gameService.isValidIndexForToken(index)) {\n      this.gameService.claimToken(index);\n      if (!this.checkIfWinner()) {\n        return this.ChangeTurn();\n      }\n    } else {\n      console.error('invalid index :(')\n    }\n  }\n\n  ChangeTurn = () => {\n    this.gameService.nextPlayer();\n    return this.setState({\n      MoveState: MoveState.START_STATE\n    });\n  }\n\n  setDiscardChosenState(action) {\n    const index = this.gameService.discardPileHas0Cards();\n    if (index >= 0) {\n      this.handleDiscard(index, action);\n      return\n    }\n    this.setState({\n      MoveState: MoveState.DISCARD_CHOSEN,\n      InterruptedActionType: action\n    });\n  }\n\n  handleActionButtonPressed = (action, token) => {\n    if (action === ActionType.PASS) {\n      if (this.state.MoveState === MoveState.CARD_DRAWN) {\n        return this.setDiscardChosenState(action);\n      }\n      return this.EndMove();\n    }\n    if ([ActionType.SWAP, ActionType.TURN_FACE_UP].includes(action)) {\n        return this.setDiscardChosenState(action);\n    }\n    if (action === ActionType.CHANGE_TURN) {\n      return this.ChangeTurn()\n    }\n    if (action === ActionType.CLAIM_TOKEN) {\n      this.gameService.setTokenToClaim(token);\n      if([TokenType.THREE_OF_A_KIND, TokenType.FULL_HOUSE, TokenType.FIVE_IN_A_ROW].includes(token)) {\n        // this could be smarter if only one option for three / four in a row\n        this.gameService.claimToken();\n        if (!this.checkIfWinner()) {\n          return this.ChangeTurn();\n        }\n      }\n      // TODO COME BACK TO THIS LATER, would like more auto-claim for 3/4 in a row\n      // TODO Less autoclaim if multiple options for three of a\n      this.setState({\n        MoveState: MoveState.CLAIMING_TOKEN\n      });\n    }\n  }\n\n  handlePlayerCardPressed = (player, index)  =>  {\n    if (player !== this.gameService.getActivePlayerIndex()) {\n      console.log('card from wrong player clicked')\n      return;\n    }\n    switch (this.state.MoveState) {\n      case MoveState.CARD_DRAWN:\n        this.ReplaceCard(index);\n        return this.setDiscardChosenState(ActionType.REPLACE_CARD);\n      case MoveState.TURN_FACE_UP_CHOSEN:\n      case MoveState.TURN_FACE_UP_IN_PROGRESS:\n        this.TurnCardFaceUp(index);\n        break\n      case MoveState.SWAP_CHOSEN:\n      case MoveState.SWAP_IN_PROGRESS:\n        this.SwapCards(index)\n        break\n      case MoveState.CLAIMING_TOKEN:\n        this.ClaimTokenCardPress(index);\n        break;\n      default:\n        console.log('No action for this status', this.state.MoveState)\n    }\n  }\n  // TODO SHOW ACTIVE PLAYER\n  // TODO ADD joker\n  // TODO ADD AI\n  // TODO  state service instead of this.state\n\n  // TODO MUM gap between hands and footer sectoin. Maybe footsection has constant size.\n  render = () => {\n    return (\n      <React.Fragment>\n  <div className={classNames('CardTable', {'CardTableGame': this.state.AppMode !== AppMode.START_STATE})}>\n    <h2 className=\"startHeader\" data-testid=\"start-header\">\n      Straight 5\n    </h2>\n    {this.state.AppMode === AppMode.START_STATE &&\n    <React.Fragment>\n        <RulesSection/>\n        <div className=\"mb-4 mt-2\">\n          <button className=\"small-width-button\" onClick={this.StartNewGame}>Start New Game</button>\n        </div>\n\n    </React.Fragment>}\n\n    {this.state.AppMode  === AppMode.GAME &&\n    <React.Fragment>\n      <Hand gameService={this.gameService} moveState={this.state.MoveState} playerService={this.playerService} id={0} cardPressedCallback={this.handlePlayerCardPressed} />\n      <MiddleSection gameService={this.gameService} drawCallback={this.deckAndDiscardPressed} moveState={this.state.MoveState}/>\n      <Hand gameService={this.gameService} moveState={this.state.MoveState} playerService={this.playerService} id={1} cardPressedCallback={this.handlePlayerCardPressed} />\n    </React.Fragment>}\n\n    {this.state.AppMode === AppMode.PLAYER_WIN &&\n    <React.Fragment>\n        <div className=\"mb-4\" data-testid=\"win-header\">\n        Congratulations to Player {this.gameService.getActivePlayerIndex()+1}\n        <button data-testid=\"win-startNewGame\" className=\"mt-2\" onClick={this.StartNewGame}>Start a new Game</button>\n        </div>\n    </React.Fragment>}\n  </div>\n    {this.state.AppMode  === AppMode.GAME && <NewstickerSection gameService={this.gameService} moveState={this.state.MoveState}/>}\n    {this.state.AppMode  === AppMode.GAME && <FooterSection gameService={this.gameService} moveState={this.state.MoveState} buttonPressedCallback={this.handleActionButtonPressed} />}\n  </React.Fragment>\n  )}\n}\n\nexport default Straight5;\n","import React from 'react';\nimport './App.css';\nimport Straight5 from './components/Straight5.js';\nconst { GameService } = require('./service/GameService.js')\nconst { PlayerService } = require('./service/PlayerService.js')\nconst { ConfigService } = require('./service/ConfigService.js')\n\nfunction App() {\n  const configService = new ConfigService(6, 9, 2, 3);\n  const playerService = new PlayerService(configService)\n  const gameService = new GameService(playerService, configService);\n  return (\n    <div className=\"App\">\n      <header>\n      <div className=\"Container\">\n\n        <Straight5 playerService={playerService} gameService={gameService} configService={configService}></Straight5>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
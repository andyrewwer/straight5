{"version":3,"sources":["model/Enums.js","Utils.js","service/GameService.js","service/PlayerService.js","model/Player.js","service/ConfigService.js","service/TokenService.js","components/game/Hand.js","components/game/MiddleSection.js","components/game/FooterSection.js","components/RulesSection.js","components/game/NewstickerSection.js","components/Straight5.js","App.js","reportWebVitals.js","index.js"],"names":["ActionType","PASS","SWAP","CHANGE_TURN","TURN_FACE_UP","CLAIM_TOKEN","REPLACE_CARD","AppMode","START_STATE","GAME","PLAYER_WIN","DrawType","DECK","DISCARD","MoveState","CARD_DRAWN","DISCARD_CHOSEN","TURN_FACE_UP_CHOSEN","TURN_FACE_UP_IN_PROGRESS","SWAP_CHOSEN","SWAP_IN_PROGRESS","PRE_END_STATE","CLAIMING_TOKEN","TokenType","THREE_IN_A_ROW","FOUR_IN_A_ROW","FIVE_IN_A_ROW","THREE_OF_A_KIND","FULL_HOUSE","require","shuffleArray","array","i","length","j","Math","floor","random","getPlayerTextForMoveState","moveState","cardIndex","GameService","playerService","tokenService","configService","this","deck","discard","swapCardIndex","activeCard","activePlayerIndex","tokenToClaim","repeats","getRepeatsPerNumber","max","getMaxNumberInDeck","push","value","seen","getDeck","setDeck","getDiscard","splice","card","pop","setActiveCard","getTopCardFromDeck","index","console","error","getNumberOfDiscards","setDiscard","getSwapCardIndex","playerCards","getActivePlayersDeck","temp","setSwapCardIndex","getActiveCard","discardIndex","createDeck","dealCardsToPlayers","initializeDiscard","setActivePlayerIndex","setTokenToClaim","getActivePlayerIndex","getNumberOfPlayers","getTokenToClaim","indeces","getAllIndecesForSets","getActivePlayersTokens","playerDeck","getPlayers","getTokens","Player","PlayerService","players","resetPlayers","tokens","ConfigService","maxNumberInDeck","repeatsPerNumber","numberOfPlayers","numberOfDiscards","TokenService","player","canClaimToken","token","existing_tokens","includes","getAllIndecesForStraight","indecesForFullHouse","possibleIndeces","straight_length","count_options_to_make_straight_length","possible_combinations","set_length","returnArray","map","Object","keys","key","classNames","Hand","props","render","className","role","name","id","cardCanBePressed","onClick","cardPressedCallback","xmlns","width","height","viewBox","d","TableCanvas","React","createRef","bind","gameService","Component","MiddleSection","highlightDiscard","drawCallback","getTopDiscardValue","highlightDeck","FooterSection","ShowCardActions","ShowTurnUpAction","activePlayerHasAllCardsFaceUp","ShowEndActions","ShowToken","showInitialActions","Fragment","buttonPressedCallback","targetTokens","maxTokens","href","NewstickerSection","Straight5","StartNewGame","startNewGame","setState","deckAndDiscardPressed","type","state","drawCardFromDeck","drawCardFromDiscard","handleDiscard","InterruptedActionType","ReplaceCard","replaceCard","TurnCardFaceUp","turnCardFaceUp","EndMove","SwapCards","swapIsValid","swapCards","playerCanClaimToken","ChangeTurn","ClaimTokenCardPress","isValidIndexForToken","claimToken","checkIfWinner","nextPlayer","handleActionButtonPressed","action","setDiscardChosenState","getAllIndecesForToken","handlePlayerCardPressed","log","discardCard","discardPileHas0Cards","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.25995b53.chunk.js","sourcesContent":["export const ActionType = {\n  PASS: 'PASS',\n  SWAP: 'SWAP',\n  CHANGE_TURN: 'CHANGE_TURN',\n  TURN_FACE_UP: 'TURN_FACE_UP',\n  CLAIM_TOKEN: 'CLAIM_TOKEN',\n  REPLACE_CARD: 'REPLACE_CARD'\n}\n\nexport const AppMode = {\n  START_STATE: 'START_STATE',\n  GAME: 'GAME',\n  PLAYER_WIN: 'PLAYER_WIN'\n}\n\nexport const DrawType = {\n  DECK: 'DECK',\n  DISCARD: 'DISCARD'\n}\n\nexport const MoveState = {\n  START_STATE:  'START_STATE',\n  CARD_DRAWN: 'CARD_DRAWN',\n  DISCARD_CHOSEN: 'DISCARD_CHOSEN',\n  TURN_FACE_UP_CHOSEN: 'TURN_FACE_UP_CHOSEN',\n  TURN_FACE_UP_IN_PROGRESS: 'TURN_FACE_UP_IN_PROGRESS',\n  SWAP_CHOSEN: 'SWAP_CHOSEN',\n  SWAP_IN_PROGRESS: 'SWAP_IN_PROGRESS',\n  PRE_END_STATE: 'PRE_END_STATE',\n  CLAIMING_TOKEN: 'CLAIMING_TOKEN'\n}\n\nexport const TokenType = {\n  THREE_IN_A_ROW: 'THREE_IN_A_ROW',\n  FOUR_IN_A_ROW: 'FOUR_IN_A_ROW',\n  FIVE_IN_A_ROW: 'FIVE_IN_A_ROW',\n  THREE_OF_A_KIND: 'THREE_OF_A_KIND',\n  FULL_HOUSE: 'FULL_HOUSE'\n}\n","const {MoveState} = require('./model/Enums.js')\n\nfunction shuffleArray(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n}\n\nfunction getPlayerTextForMoveState(moveState, cardIndex) {\n  switch (moveState) {\n    case MoveState.START_STATE:\n      return 'Please draw a card from Deck or Discard'\n    case MoveState.CARD_DRAWN:\n      return 'Replace card in your hand or choose a discard option';\n    case MoveState.TURN_FACE_UP_CHOSEN:\n      return 'Select the first card to turn face up'\n    case MoveState.TURN_FACE_UP_IN_PROGRESS:\n      return 'Select the second card to turn face up or pass'\n    case MoveState.SWAP_CHOSEN:\n      return 'Select the first card you\\'d like  to swap'\n    case MoveState.SWAP_IN_PROGRESS:\n      return 'Selected ' + cardIndex + '. Please select a second card to swap'\n    case MoveState.PRE_END_STATE:\n      return 'Please select a token to claim or pass'\n    case MoveState.CLAIMING_TOKEN:\n      return 'Please select the first card of your run';\n    case MoveState.DISCARD_CHOSEN:\n      return 'Please select the discard pile you would like to discard the card to';\n    default:\n      return 'UNKONWN STATE DETECTED'\n  }\n}\n\nexport {shuffleArray, getPlayerTextForMoveState};\n","const { shuffleArray } = require('../Utils.js')\nconst { TokenType } = require('../model/Enums.js')\nclass GameService {\n\n  constructor(playerService, tokenService, configService) {\n      this.playerService = playerService;\n      this.tokenService = tokenService;\n      this.configService = configService;\n\n      this.deck = [];\n      this.discard = [[]];\n      this.swapCardIndex = -1;\n      this.activeCard = {};\n      this.activePlayerIndex = 0;\n      this.tokenToClaim = '';\n  }\n\n  createDeck() {\n    const repeats = this.configService.getRepeatsPerNumber();\n    const max = this.configService.getMaxNumberInDeck();\n    this.deck = [];\n    for (let i = 0; i < repeats; i++) {\n      for (let j = 0; j < max; j++) {\n        this.deck.push({value: j+1, seen: false})\n      }\n    }\n    shuffleArray(this.deck);\n  }\n\n  getTopCardFromDeck() {\n    if (this.getDeck().length === 0) {\n      this.setDeck([]);\n      for(let i = 0; i < this.getDiscard().length; i ++) {\n        this.getDeck().push(...this.getDiscard()[i].splice(0, this.getDiscard()[i].length - 1));\n      }\n      shuffleArray(this.getDeck());\n    }\n    const card = this.getDeck().pop();\n    card.seen = false;\n    return card;\n  }\n\n  drawCardFromDeck() {\n    this.setActiveCard(this.getTopCardFromDeck());\n  }\n\n  drawCardFromDiscard(index) {\n    if (this.getDiscard()[index].length === 0) {\n      console.error('SOMETHING went wrong, discard length = 0')\n    }\n    this.setActiveCard(this.getDiscard()[index].pop());\n  }\n\n  discardPileHas0Cards() {\n    for (let i = 0; i < this.configService.getNumberOfDiscards(); i ++) {\n      if (this.getDiscard()[i].length === 0) {\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  initializeDiscard() {\n    this.setDiscard([]);\n    for (let i = 0; i < this.configService.getNumberOfDiscards(); i ++) {\n      this.getDiscard().push([]);\n      this.getDiscard()[i].push(this.getDeck().pop());\n    }\n  }\n\n  swapIsValid(index) {\n    return this.getSwapCardIndex() > 0 && this.getSwapCardIndex() !== index;\n  }\n\n  swapCards(index) {\n    const playerCards = this.getActivePlayersDeck();\n    const temp = playerCards[index];\n    playerCards[index] = playerCards[this.swapCardIndex];\n    playerCards[this.swapCardIndex] = temp;\n    this.setSwapCardIndex(-1);\n  }\n\n  replaceCard(index) {\n    const temp = this.getActivePlayersDeck()[index];\n    this.getActiveCard().seen = true;\n    this.getActivePlayersDeck()[index] = this.getActiveCard();\n    this.setActiveCard(temp);\n  }\n\n  discardCard(discardIndex) {\n    this.getDiscard()[discardIndex].push(this.getActiveCard());\n    this.setActiveCard({});\n  }\n\n  turnCardFaceUp(index) {\n    const card = this.getActivePlayersDeck()[index];\n    if (this.getActivePlayersDeck()[index].seen === true) {\n      return false;\n    }\n    card.seen = true;\n    return true;\n  }\n\n  startNewGame() {\n    this.createDeck();\n    this.playerService.dealCardsToPlayers(this.getDeck());\n    this.initializeDiscard();\n    this.setSwapCardIndex(-1);\n    this.setActiveCard({});\n    this.setActivePlayerIndex(0);\n    this.setTokenToClaim('');\n  }\n\n  nextPlayer() {\n    this.setActivePlayerIndex(this.getActivePlayerIndex() + 1 === this.configService.getNumberOfPlayers() ? 0 : this.getActivePlayerIndex() + 1);\n  }\n\n//TODO call token token service directly from above?\n  claimToken(index) {\n    //TODO come back to this to pick discard\n    //TODO come back to this to pick top card\n    const deck = this.getActivePlayersDeck();\n    switch (this.getTokenToClaim()) {\n      case TokenType.FIVE_IN_A_ROW:\n      case TokenType.FULL_HOUSE:\n        for (let i = 0; i < deck.length; i ++) {\n          this.getDiscard()[0].push(deck[i]);\n          deck[i] = this.getTopCardFromDeck();\n        }\n        break;\n      case TokenType.THREE_OF_A_KIND:\n        let indeces = this.tokenService.getAllIndecesForSets(deck, 3)[0];\n        for (let i = 0; i < 3; i++) {\n            this.getDiscard()[0].push(deck[indeces[i]]);\n            deck[indeces[i]] = this.getTopCardFromDeck();\n          }\n        break;\n      case TokenType.THREE_IN_A_ROW:\n      for (let i = index; i < index + 3; i++) {\n        this.getDiscard()[0].push(deck[i]);\n        deck[i] = this.getTopCardFromDeck();\n        deck[i].seen = false;\n      }\n        break;\n      case TokenType.FOUR_IN_A_ROW:\n      for (let i = index; i < index + 4; i++) {\n        this.getDiscard()[0].push(deck[i]);\n        deck[i] = this.getTopCardFromDeck();\n      }\n        break;\n      default:\n        console.error('something went wrong');\n        return\n    }\n    this.getActivePlayersTokens().push(this.getTokenToClaim());\n    this.setTokenToClaim('');\n  }\n\n  activePlayerHasAllCardsFaceUp() {\n    const playerDeck = this.getActivePlayersDeck()\n    for (let i = 0; i < playerDeck.length; i++) {\n      if (!playerDeck[i].seen) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  getActivePlayersTokens() {\n    return this.playerService.getPlayers()[this.getActivePlayerIndex()].getTokens();\n  }\n\n  getActivePlayersDeck() {\n    return this.playerService.getPlayers()[this.getActivePlayerIndex()].getDeck();\n  }\n\n  getDeck() {\n    return this.deck;\n  }\n\n  getDiscard() {\n    return this.discard;\n  }\n\n  getSwapCardIndex() {\n    return this.swapCardIndex;\n  }\n\n  getActiveCard() {\n    return this.activeCard;\n  }\n\n  getActivePlayerIndex() {\n    return this.activePlayerIndex;\n  }\n\n  getTokenToClaim() {\n    return this.tokenToClaim;\n  }\n\n  setDeck(deck) {\n    this.deck = deck;\n  }\n\n  setDiscard(discard) {\n    this.discard = discard;\n  }\n\n  setSwapCardIndex(swapCardIndex) {\n    this.swapCardIndex = swapCardIndex;\n  }\n\n  setActiveCard(activeCard) {\n    this.activeCard = activeCard;\n  }\n\n  setActivePlayerIndex(activePlayerIndex) {\n    this.activePlayerIndex = activePlayerIndex;\n  }\n\n  setTokenToClaim(tokenToClaim) {\n    this.tokenToClaim = tokenToClaim;\n  }\n}\n\nexport {GameService};\n","const {Player} = require('../model/Player.js');\n\nclass PlayerService {\n\n  constructor(configService) {\n    this.configService = configService;\n    this.players = [];\n    this.resetPlayers();\n  }\n\n  resetPlayers() {\n    this.players = [];\n    for (let i = 0; i < this.configService.getNumberOfPlayers(); i ++) {\n      this.players.push(new Player([], []));\n    }\n  }\n\n  dealCardsToPlayers(deck) {\n    for (let j = 0; j < 5; j++) {\n      for (let i = 0; i < this.getPlayers().length; i ++) {\n        this.players[i].getDeck().push(deck.pop());\n      }\n    }\n  }\n\n  getPlayers() {\n    return this.players;\n  }\n\n  setPlayers(players) {\n    this.players = players;\n  }\n\n}\n\nexport {PlayerService};\n","class Player {\n\n  constructor(deck, tokens) {\n      this.deck = deck;\n      this.tokens = tokens; // THREE_IN_A_ROW, FOUR_IN_A_ROW, FIVE_IN_A_ROW, THREE_OF_A_KIND, FULL_HOUSE\n  }\n\n  getDeck() {\n    return this.deck;\n  }\n\n  getTokens() {\n    return this.tokens;\n  }\n\n  setDeck(deck) {\n    this.deck = deck;\n  }\n\n  setTokens(tokens) {\n    this.tokens = tokens;\n  }\n}\n\nexport {Player};\n","class ConfigService {\n\n  constructor(maxNumberInDeck, repeatsPerNumber, numberOfPlayers, numberOfDiscards) {\n    this.maxNumberInDeck = maxNumberInDeck;\n    this.repeatsPerNumber = repeatsPerNumber;\n    this.numberOfPlayers = numberOfPlayers;\n    this.numberOfDiscards = numberOfDiscards;\n  }\n\n  getMaxNumberInDeck() {\n    return this.maxNumberInDeck;\n  }\n\n  getRepeatsPerNumber() {\n    return this.repeatsPerNumber;\n  }\n\n  getNumberOfPlayers() {\n    return this.numberOfPlayers;\n  }\n\n  getNumberOfDiscards() {\n    return this.numberOfDiscards;\n  }\n\n}\n\nexport {ConfigService};\n","const { shuffleArray } = require('../Utils.js')\nconst { TokenType } = require('../model/Enums.js')\n\nclass TokenService {\n\n  constructor() {\n  }\n\n  playerCanClaimToken(player) {\n    return this.canClaimToken(TokenType.THREE_IN_A_ROW, player.getDeck(), player.getTokens()) ||\n    this.canClaimToken(TokenType.FOUR_IN_A_ROW, player.getDeck(), player.getTokens()) ||\n    this.canClaimToken(TokenType.FIVE_IN_A_ROW, player.getDeck(), player.getTokens()) ||\n    this.canClaimToken(TokenType.THREE_OF_A_KIND, player.getDeck(), player.getTokens()) ||\n    this.canClaimToken(TokenType.FULL_HOUSE, player.getDeck(), player.getTokens());\n  }\n\n  canClaimToken(token, deck, existing_tokens) {\n    //TODO does this logic belong here?\n    if (existing_tokens.includes(token)) {\n      return false;\n    }\n\n    switch (token) {\n      case TokenType.THREE_IN_A_ROW:\n        return this.getAllIndecesForStraight(deck, 3).length > 0\n      case TokenType.FOUR_IN_A_ROW:\n        return this.getAllIndecesForStraight(deck, 4).length > 0\n      case TokenType.FIVE_IN_A_ROW:\n        return this.getAllIndecesForStraight(deck, 5).length > 0\n      case TokenType.THREE_OF_A_KIND:\n        return this.getAllIndecesForSets(deck, 3).length > 0\n      case TokenType.FULL_HOUSE:\n        const indecesForFullHouse = this.getAllIndecesForSets(deck, 2);\n        return indecesForFullHouse.length === 2 && (indecesForFullHouse[0].length + indecesForFullHouse[1].length) === 5\n   }\n    return false;\n  }\n\n  //TODO Refactor away?\n  //TODO refactor for three/four/five in a row can be simpler. Maybe change on ENUM side\n  isValidIndexForToken(token, deck, index) {\n    let possibleIndeces = [];\n    switch (token) {\n      case TokenType.THREE_IN_A_ROW:\n        possibleIndeces = this.getAllIndecesForStraight(deck, 3);\n        //get all the possible straights for 3 in a row\n        for (let i = 0; i < possibleIndeces.length; i++) {\n          if(index === possibleIndeces[i][0]) {\n            return true\n          }\n        }\n        return false\n      case TokenType.FOUR_IN_A_ROW:\n        possibleIndeces = this.getAllIndecesForStraight(deck, 4);\n        for (let i = 0; i < possibleIndeces.length; i++) {\n          if(index === possibleIndeces[i][0]) {\n            return true\n          }\n        }\n        return false\n      case TokenType.FIVE_IN_A_ROW:\n        possibleIndeces = this.getAllIndecesForStraight(deck, 5);\n        for (let i = 0; i < possibleIndeces.length; i++) {\n          if(index === possibleIndeces[i][0]) {\n            return true\n          }\n        }\n        return false\n      case TokenType.THREE_OF_A_KIND:\n        possibleIndeces = this.getAllIndecesForSets(deck, 3);\n        for (let i = 0; i < possibleIndeces.length; i++) {\n          if(possibleIndeces[i].includes(index)) {\n            return true\n          }\n        }\n        return false\n      case TokenType.FULL_HOUSE:\n        const indecesForFullHouse = this.getAllIndecesForSets(deck, 2);\n        //no logic here yet\n        return indecesForFullHouse.length === 2 && (indecesForFullHouse[0].length + indecesForFullHouse[1].length) === 5\n   }\n\n    return false;\n  }\n\n  getAllIndecesForToken(deck, token) {\n    if (token === TokenType.THREE_IN_A_ROW) {\n      return this.getAllIndecesForStraight(deck, 3);\n    }\n    if (token === TokenType.FOUR_IN_A_ROW) {\n      return this.getAllIndecesForStraight(deck, 4);\n    }\n    if (token === TokenType.FIVE_IN_A_ROW) {\n      return this.getAllIndecesForStraight(deck, 5);\n    }\n    if (token === TokenType.THREE_OF_A_KIND) {\n      return this.getAllIndecesForSets(deck, 3);\n    }\n    if (token === TokenType.FULL_HOUSE) {\n      if (this.canClaimToken(TokenType.FULL_HOUSE, deck, []))  {\n        return [[0,1,2,3,4]];\n      }\n    }\n    return []\n  }\n\n  getAllIndecesForStraight(deck, straight_length) {\n    //assumes hand size of 5. If 4 in a row 6 - 4 = 2, 1234 or 2345 so ✅\n    const count_options_to_make_straight_length = 6 - straight_length;\n    let possible_combinations = []\n    for (let i = 0; i < count_options_to_make_straight_length; i ++) {\n      let indeces = []\n      if (!deck[i].seen) {\n        continue\n      }\n      indeces.push(i)\n      for (let j = i + 1; j < straight_length + i; j ++) {\n        if (!deck[j].seen || deck[j].value !== deck[j-1].value + 1) {\n          break;\n        }\n        indeces.push(j)\n      }\n      if (indeces.length === straight_length) {\n        possible_combinations.push(indeces)\n      }\n    }\n    return possible_combinations;\n  }\n\n  getAllIndecesForSets(deck, set_length) {\n    //assumes hand size of 5. for 11112 return [1,2,3,4]\n    let returnArray = []\n    let map = {};\n    for (let i = 0; i < 5; i++) {\n      if (!deck[i].seen) {\n        continue;\n      }\n      if (!map[deck[i].value]) {\n        map[deck[i].value] = []\n      }\n      map[deck[i].value].push(i)\n    }\n\n    for (let key of Object.keys(map)) {\n      if (map[key].length >= set_length) {\n        returnArray.push(map[key]);\n      }\n    }\n    return returnArray\n  }\n}\n\nexport {TokenService};\n","import React, { Component } from 'react';\nimport './Hand.css';\nconst classNames = require('classnames');\nconst {MoveState} = require('../../model/Enums.js')\n\nclass Hand extends Component {\n  constructor(props) {\n    super(props);\n    this.TableCanvas = React.createRef();\n    this.render.bind(this);\n    this.deck = this.props.playerService.getPlayers()[this.props.id].getDeck();\n    this.tokens = this.props.playerService.getPlayers()[this.props.id].getTokens();\n  }\n\n  // TODO maybe add this for claimToken logic. Think too much\n  // TODO the 0/4 win tracking should be done dynamically and pass in rather than hard-coded\n   // TODO testing lol!\n  cardCanBePressed(card, index) {\n    return this.props.id === this.props.gameService.getActivePlayerIndex()\n     && (\n       ([MoveState.TURN_FACE_UP_CHOSEN, MoveState.TURN_FACE_UP_IN_PROGRESS].includes(this.props.moveState) && !card.seen)\n           ||\n       (MoveState.SWAP_IN_PROGRESS === this.props.moveState && this.props.gameService.getSwapCardIndex() !== index)\n           ||\n       [MoveState.CARD_DRAWN, MoveState.SWAP_CHOSEN,  MoveState.CLAIMING_TOKEN].includes(this.props.moveState));\n  }\n\n  render = () => {\n    return (\n      <div className=\"PlayerHand\" data-testid=\"hand\">\n        <div role=\"header\" className=\"PlayerHeader\" name=\"Player1\">\n          <p className=\"playerTag\">Player {this.props.id+1}</p>\n        </div>\n        <div className=\"PlayerTokenHeader\">\n          <p className=\"playerTag\">Tokens [{this.tokens.length}/4]</p>\n        </div>\n        {this.deck.map((card, index) => (\n          <div className=\"PlayerCardWrapper\" key={index}>\n          <div className={classNames('PlayerCard', {'PlayerCardBack': !card.seen}, {'PlayerCardFront': card.seen}, {\"PlayerCardIsActive\" : this.cardCanBePressed(card, index)})} role='playerCard' onClick={() => this.props.cardPressedCallback(this.props.id, index)}>\n            {card.seen ? card.value : <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M12 2c5.514 0 10 4.486 10 10s-4.486 10-10 10-10-4.486-10-10 4.486-10 10-10zm0-2c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm1.25 17c0 .69-.559 1.25-1.25 1.25-.689 0-1.25-.56-1.25-1.25s.561-1.25 1.25-1.25c.691 0 1.25.56 1.25 1.25zm1.393-9.998c-.608-.616-1.515-.955-2.551-.955-2.18 0-3.59 1.55-3.59 3.95h2.011c0-1.486.829-2.013 1.538-2.013.634 0 1.307.421 1.364 1.226.062.847-.39 1.277-.962 1.821-1.412 1.343-1.438 1.993-1.432 3.468h2.005c-.013-.664.03-1.203.935-2.178.677-.73 1.519-1.638 1.536-3.022.011-.924-.284-1.719-.854-2.297z\"/></svg> }\n          </div>\n          </div>\n        ))}\n        <div className='PlayerTokens'>\n        {this.tokens.map((token, index) => (\n          <div className='PlayerToken' role='playerToken' key={index}>\n            {token}\n          </div>\n        ))}\n        </div>\n      </div>\n  )}\n}\n\nexport default Hand;\n","import React, { Component } from 'react';\nimport './MiddleSection.css';\nconst {DrawType, MoveState} = require('../../model/Enums.js')\nconst classNames = require('classnames');\n\nclass MiddleSection extends Component {\n  constructor(props) {\n    super(props);\n    this.TableCanvas = React.createRef();\n    this.render.bind(this);\n    this.gameService = props.gameService;\n  }\n\n  getTopDiscardValue(index) {\n    const discard = this.gameService.getDiscard()[index];\n    return discard.length > 0 ? discard[discard.length-1].value : '';\n  }\n\n  highlightDeck() {\n    return this.props.moveState === MoveState.START_STATE;\n  }\n\n  highlightDiscard() {\n    return [MoveState.START_STATE, MoveState.DISCARD_CHOSEN].includes(this.props.moveState);\n  }\n\n  // TODO - move this.state.MoveState to a dedicated service.\n  // Now MOVE STATE IS HERE DO WE WANT TO MOVE THE DRAW LOGIC DOWN OR  KEEP IT HIGHER?\n  // TODO mobile playable\n  render = () => {\n    return (\n      <div className=\"MiddleSection\" data-testid=\"middle-section\">\n      {this.gameService.getDiscard().map((discard, index) => (\n        <div className=\"DiscardSection\" key={index}>\n          <div className=\"FullWidth\" role=\"header\">\n            Discard {index + 1}\n          </div>\n          <div className=\"PlayerCardWrapper\">\n            <div className={classNames('PlayerCard', 'PlayerCardFront', {\"PlayerCardIsActive\" : this.highlightDiscard()})} data-testid={'middle-section-discard-' + index} onClick={() => {this.props.drawCallback(DrawType.DISCARD, index)}}>\n              {this.getTopDiscardValue(index)}\n            </div>\n          </div>\n        </div>\n      ))}\n        <div className=\"DeckSection\">\n          <div className=\"FullWidth\" role=\"header\">\n            Deck\n          </div>\n          <div className={classNames('PlayerCard', 'PlayerCardBack', {\"PlayerCardIsActive\" : this.highlightDeck()})} data-testid=\"middle-section-deck\" onClick={() => {this.props.drawCallback(DrawType.DECK)}}>\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M12 2c5.514 0 10 4.486 10 10s-4.486 10-10 10-10-4.486-10-10 4.486-10 10-10zm0-2c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm1.25 17c0 .69-.559 1.25-1.25 1.25-.689 0-1.25-.56-1.25-1.25s.561-1.25 1.25-1.25c.691 0 1.25.56 1.25 1.25zm1.393-9.998c-.608-.616-1.515-.955-2.551-.955-2.18 0-3.59 1.55-3.59 3.95h2.011c0-1.486.829-2.013 1.538-2.013.634 0 1.307.421 1.364 1.226.062.847-.39 1.277-.962 1.821-1.412 1.343-1.438 1.993-1.432 3.468h2.005c-.013-.664.03-1.203.935-2.178.677-.73 1.519-1.638 1.536-3.022.011-.924-.284-1.719-.854-2.297z\"/></svg>\n              </div>\n            </div>\n      </div>\n  )}\n}\n\nexport default MiddleSection;\n","import React, { Component } from 'react';\nimport './FooterSection.css';\nconst { ActionType, MoveState, TokenType } = require('../../model/Enums.js')\n\nclass FooterSection extends Component {\n  constructor(props) {\n    super(props);\n    this.gameService = props.gameService;\n    this.tokenService = props.tokenService;\n    this.TableCanvas = React.createRef();\n    this.render.bind(this);\n  }\n\n  ShowCardActions = () => {\n    return [MoveState.CARD_DRAWN, MoveState.TURN_FACE_UP_CHOSEN, MoveState.TURN_FACE_UP_IN_PROGRESS, MoveState.SWAP_CHOSEN, MoveState.SWAP_IN_PROGRESS, MoveState.DISCARD_CHOSEN].includes(this.props.moveState)\n  }\n\n  ShowTurnUpAction = () => {\n    return !this.gameService.activePlayerHasAllCardsFaceUp();\n  }\n\n  ShowEndActions = () => {\n    return this.props.moveState === MoveState.PRE_END_STATE;\n  }\n\n  ShowToken = token => {\n    return this.tokenService.canClaimToken(token, this.gameService.getActivePlayersDeck(), this.gameService.getActivePlayersTokens());\n  }\n\n  showInitialActions = () => {\n    return this.props.moveState !== MoveState.DISCARD_CHOSEN;\n  }\n\n  render = () => {\n    return (\n      <React.Fragment>\n      <div className=\"CardTableFooter\" data-testid=\"footer-section\">\n        {this.ShowCardActions() &&\n          <React.Fragment>\n              {(!!this.gameService.getActiveCard() && !!this.gameService.getActiveCard().value) &&\n              <React.Fragment>\n                <div className=\"PlayerCard PlayerCardFront\" role=\"activeCard\">\n                  {this.gameService.getActiveCard().value}\n                </div>\n                {this.showInitialActions() &&\n                <div>\n                <button className=\"swapButton\" onClick={() => {this.props.buttonPressedCallback(ActionType.SWAP)}}> Discard to swap two </button>\n                {this.ShowTurnUpAction() && <button className=\"turnFaceUpButton\" data-testid='turn-face-up-button' onClick={() => {this.props.buttonPressedCallback(ActionType.TURN_FACE_UP)}}> Discard to turn two face up </button>}\n                </div>}\n            </React.Fragment>}\n        {this.showInitialActions() &&  <div className=\"FullWidth\"><button className=\"mb-2 FullWidth\" onClick={() => {this.props.buttonPressedCallback(ActionType.PASS)}}> Pass </button></div>}\n\n          </React.Fragment>}\n\n          {this.ShowEndActions() &&\n            <React.Fragment>\n                {this.ShowToken(TokenType.THREE_IN_A_ROW) && <div><button onClick={() => this.props.buttonPressedCallback(ActionType.CLAIM_TOKEN, TokenType.THREE_IN_A_ROW)}> THREE IN A ROW </button></div>}\n                {this.ShowToken(TokenType.FOUR_IN_A_ROW) && <div><button onClick={() => this.props.buttonPressedCallback(ActionType.CLAIM_TOKEN, TokenType.FOUR_IN_A_ROW)}> FOUR IN A ROW </button></div>}\n                {this.ShowToken(TokenType.FIVE_IN_A_ROW) && <div><button onClick={() => this.props.buttonPressedCallback(ActionType.CLAIM_TOKEN, TokenType.FIVE_IN_A_ROW)}> FIVE IN A ROW </button></div>}\n                {this.ShowToken(TokenType.THREE_OF_A_KIND) && <div><button onClick={() => this.props.buttonPressedCallback(ActionType.CLAIM_TOKEN, TokenType.THREE_OF_A_KIND)}> THREE OF A KIND </button></div>}\n                {this.ShowToken(TokenType.FULL_HOUSE) && <div><button onClick={() => this.props.buttonPressedCallback(ActionType.CLAIM_TOKEN, TokenType.FULL_HOUSE)}> FULL HOUSE </button></div>}\n                <div className=\"FullWidth\"><button className=\"mb-2 FullWidth\" onClick={() => {this.props.buttonPressedCallback(ActionType.CHANGE_TURN)}}> Pass </button></div>\n            </React.Fragment>}\n      </div>\n      </React.Fragment>\n  )}\n}\n\nexport default FooterSection;\n","import React, { Component } from 'react';\nimport './RulesSection.css';\n\nclass Hand extends Component {\n  constructor(props) {\n    super(props);\n    this.render.bind(this);\n    this.targetTokens = 4;\n    this.maxTokens = 5;\n  }\n\n  // TODO ability to show rules anytime? (Maybe pop-up)\n  // TODO Ability to change some core settings\n\n  render = () => {\n    return (\n      <div className=\"rulesSection\" data-testid=\"rules-section\">\n        <div className=\"secondary-background\">\n          <h3 className=\"rules-header\">Rules</h3>\n        </div>\n        <div className=\"secondary-background\">\n          <h4 className=\"rules-header\">Introduction</h4>\n          <p className=\"rules-p\">Welcome to Straight 5, a rummy-like, yahtzee-like card game! This is the (work-in-progress) digitial version of the (hopefully future) Straight 5 game. </p>\n        </div>\n\n        <div className=\"primary-background\">\n          <h4 className=\"rules-header\">Winning</h4>\n          <p className=\"rules-p\">\n          The first player to claim {this.targetTokens} out of {this.maxTokens} tokens below wins.</p>\n          <ul>\n            <li>Three in a row</li>\n            <li>Four in a row</li>\n            <li>Five in a row</li>\n            <li>Three of a kind</li>\n            <li>Full House</li>\n          </ul>\n        </div>\n        <div className=\"secondary-background\">\n          <h4 className=\"rules-header\">Set up</h4>\n          <p className=\"rules-p\">Each player begins with 5 cards face-down in front of them.\n          The top card of the deck will be turned over as a discard</p>\n        </div>\n        <div className=\"primary-background\">\n          <h4 className=\"rules-header\">Turn Order</h4>\n          <p className=\"rules-p\">Each consists of three phases:</p>\n          <ol>\n            <li><h4 className=\"phaseHeader\">Draw Phase:</h4> draw the top card of the deck or discard piles</li>\n            <li><h4 className=\"phaseHeader\">Play Phase:</h4>\n              <ul>\n                <li> Place card in front of you (and discard existing card), or; </li>\n                <li> Discard the drawn card (to any discard pile) and:  </li>\n                <ul>\n                  <li> Turn up to two cards face-up</li>\n                  <li> Swap any two cards </li>\n                </ul>\n              </ul>\n            </li>\n            <li><h4 className=\"phaseHeader\">Claim Token Phase</h4>: Claim a token by discarding the required cards (e.g. 1 2 3 4 for Four In a Row).</li>\n          </ol>\n        </div>\n        <div className=\"secondary-background\">\n          <h4 className=\"rules-header\">Rule Clarifications</h4>\n          <p className=\"rules-p\">Here are some clarifications on rules above:</p>\n          <ol>\n            <li>When you place the drawn card in front of you, you do not get to take another action</li>\n            <li>When you discard a card, you get to choose which discard pile it goes into <b>UNLESS</b> a discard pile has 0 cards, in which case you must discard it there (and the app will do this automatically)</li>\n            <li>If you have only one card face-up and choose to take the \"turn up to two cards face up\" action. You only get to turn one card face up. </li>\n            <li>You can only claim each token once</li>\n            <li>You can only claim one token per turn</li>\n            <li>The cards to claim the tokens for the straights (3/4/5 in a row) must be adjacent and in ascending order (e.g. 1 2 3 not 3 2 1 or 1 3 2)</li>\n            <li>The cards to claim the tokens for three of a kind and full house can be anywhere</li>\n          </ol>\n        </div>\n        <div className=\"primary-background\">\n          <h4 className=\"rules-header\">Final notes</h4>\n          <p className=\"rules-p\">If you find any bugs or issues with Straight 5 please submit an issue by <a href=\"https://github.com/andyrewwer/straight5/issues\">clicking here</a> or you can email me at <a href=\"mailto:a.andyrewwer@gmail.com?subject = Feedback on Straight 5\">a.andyrewwer@gmail.com.</a> Also feel free to email me with other thoughts/feedback/concerns (about the game or otherwise)!</p>\n        </div>\n\n      </div>\n  )}\n}\n\nexport default Hand;\n","import React, { Component } from 'react';\nimport './NewstickerSection.css';\nconst { getPlayerTextForMoveState } = require('../../Utils.js')\n\nclass NewstickerSection extends Component {\n  constructor(props) {\n    super(props);\n    this.gameService = props.gameService;\n    this.TableCanvas = React.createRef();\n    this.render.bind(this);\n  }\n\n  render = () => {\n    return (\n      <React.Fragment>\n      <div className=\"newsTicker\" data-testid=\"newsticker\">\n        <div className=\"newsTickerTriangleLeft\"/>\n        <div className=\"newsTickerMain\">\n          {getPlayerTextForMoveState(this.props.moveState, this.gameService.getSwapCardIndex() + 1)}\n        </div>\n        <div className=\"newsTickerTriangleRight\"/>\n      </div>\n      </React.Fragment>\n  )}\n}\n\nexport default NewstickerSection;\n","import React, { Component } from 'react';\nimport Hand from './game/Hand.js';\nimport MiddleSection from './game/MiddleSection.js';\nimport FooterSection from './game/FooterSection.js';\nimport RulesSection from './RulesSection.js';\nimport NewstickerSection from './game/NewstickerSection.js';\nimport './Straight5.css';\nconst {ActionType, AppMode, DrawType, MoveState, TokenType} = require('../model/Enums.js')\nconst classNames = require('classnames');\n\n// TODO should discard card at the END of your TURN instead of START\n// TODO maybe pop-up when turn changes\n// TODO only highlight options that can be clicked when claiming a token\nclass Straight5 extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      AppMode: AppMode.START_STATE,\n      MoveState: MoveState.START_STATE,\n    };\n    this.playerService = props.playerService;\n    this.gameService = props.gameService;\n    this.configService = props.configService;\n    this.tokenService = props.tokenService;\n  }\n\n  StartNewGame = () => {\n    this.playerService.resetPlayers();\n    this.gameService.startNewGame();\n    this.setState({\n      MoveState: MoveState.START_STATE,\n      AppMode: AppMode.GAME\n    });\n  }\n\n\n  handleDiscard(index, action) {\n    this.gameService.discardCard(index);\n    if (action === ActionType.PASS) {\n      return this.EndMove();\n    } else if (action === ActionType.SWAP) {\n      return this.setState({MoveState: MoveState.SWAP_CHOSEN});\n    } else if (action ===  ActionType.TURN_FACE_UP) {\n      return this.setState({MoveState: MoveState.TURN_FACE_UP_CHOSEN});\n    } else if (action === ActionType.REPLACE_CARD) {\n      this.EndMove();\n    }\n  }\n  //TODO animation\n  deckAndDiscardPressed = (type, index) => {\n    if (this.state.MoveState !== MoveState.START_STATE) {\n      if (this.state.MoveState === MoveState.DISCARD_CHOSEN &&\n           type === DrawType.DISCARD) {\n             this.handleDiscard(index, this.state.InterruptedActionType);\n      }\n      return;\n    }\n    if (type === DrawType.DECK) {\n      this.gameService.drawCardFromDeck();\n    } else if (type === DrawType.DISCARD) {\n\n      this.gameService.drawCardFromDiscard(index);\n    } else {\n      console.error('draw card failed', type);\n    }\n    this.setState({\n      MoveState: MoveState.CARD_DRAWN\n    });\n\n  }\n\n  ReplaceCard = index => {\n    this.gameService.replaceCard(index);\n  }\n\n  TurnCardFaceUp = index => {\n    if (!this.gameService.turnCardFaceUp(index)) {\n      return;\n    }\n    if (this.state.MoveState === MoveState.TURN_FACE_UP_IN_PROGRESS) {\n      this.EndMove();\n      return;\n    }\n    if (this.gameService.activePlayerHasAllCardsFaceUp()) {\n      this.EndMove();\n      return;\n    }\n    this.setState({\n      MoveState: MoveState.TURN_FACE_UP_IN_PROGRESS,\n    });\n  }\n\n  SwapCards = index => {\n    if (this.gameService.swapIsValid(index)) {\n      this.gameService.swapCards(index);\n      this.EndMove();\n      return\n    }\n    this.gameService.setSwapCardIndex(index);\n    this.setState({\n      MoveState: MoveState.SWAP_IN_PROGRESS\n    })\n  }\n\n  EndMove = () => {\n    if (this.tokenService.playerCanClaimToken(this.playerService.getPlayers()[this.gameService.getActivePlayerIndex()])) {\n      this.setState({MoveState: MoveState.PRE_END_STATE});\n      return;\n    }\n    this.ChangeTurn();\n\n  }\n\n  checkIfWinner() {\n    if (this.gameService.getActivePlayersTokens().length >= 4) {\n      this.setState({\n        AppMode: AppMode.PLAYER_WIN\n      });\n      return true;\n    }\n    return false;\n  }\n\n  ClaimTokenCardPress = index => {\n    if (this.tokenService.isValidIndexForToken(this.gameService.getTokenToClaim(), this.gameService.getActivePlayersDeck(), index)) {\n      this.gameService.claimToken(index);\n      if (!this.checkIfWinner()) {\n        return this.ChangeTurn();\n      }\n    } else {\n      console.error('invalid index :(')\n    }\n  }\n\n  ChangeTurn = () => {\n    this.gameService.nextPlayer();\n    return this.setState({\n      MoveState: MoveState.START_STATE\n    });\n  }\n\n  setDiscardChosenState(action) {\n    const index = this.gameService.discardPileHas0Cards();\n    if (index >= 0) {\n      this.handleDiscard(index, action);\n      return\n    }\n    this.setState({\n      MoveState: MoveState.DISCARD_CHOSEN,\n      InterruptedActionType: action\n    });\n  }\n\n  handleActionButtonPressed = (action, token) => {\n    if (action === ActionType.PASS) {\n      if (this.state.MoveState === MoveState.CARD_DRAWN) {\n        return this.setDiscardChosenState(action);\n      }\n      return this.EndMove();\n    }\n    if ([ActionType.SWAP, ActionType.TURN_FACE_UP].includes(action)) {\n        return this.setDiscardChosenState(action);\n    }\n    if (action === ActionType.CHANGE_TURN) {\n      return this.ChangeTurn()\n    }\n    if (action === ActionType.CLAIM_TOKEN) {\n      this.gameService.setTokenToClaim(token);\n\n      const indeces = this.tokenService.getAllIndecesForToken(this.gameService.getActivePlayersDeck(), token);\n      if (indeces.length === 1 || token === TokenType.FULL_HOUSE || token === TokenType.THREE_OF_A_KIND) {\n        this.gameService.claimToken(indeces[0][0]); //TODO TEST\n        if (!this.checkIfWinner()) {\n          return this.ChangeTurn();\n        }\n      }\n\n      // TODO Less autoclaim if multiple options for three of a\n      this.setState({\n        MoveState: MoveState.CLAIMING_TOKEN\n      });\n    }\n  }\n\n  handlePlayerCardPressed = (player, index)  =>  {\n    if (player !== this.gameService.getActivePlayerIndex()) {\n      console.log('card from wrong player clicked')\n      return;\n    }\n    switch (this.state.MoveState) {\n      case MoveState.CARD_DRAWN:\n        this.ReplaceCard(index);\n        this.setDiscardChosenState(ActionType.REPLACE_CARD);\n        return\n      case MoveState.TURN_FACE_UP_CHOSEN:\n      case MoveState.TURN_FACE_UP_IN_PROGRESS:\n        this.TurnCardFaceUp(index);\n        break\n      case MoveState.SWAP_CHOSEN:\n      case MoveState.SWAP_IN_PROGRESS:\n        this.SwapCards(index)\n        break\n      case MoveState.CLAIMING_TOKEN:\n        this.ClaimTokenCardPress(index);\n        break;\n      default:\n        console.log('No action for this status', this.state.MoveState)\n    }\n  }\n  // TODO SHOW ACTIVE PLAYER\n  // TODO ADD joker\n  // TODO ADD AI\n  // TODO state service instead of this.state -- this is on wip-stateService but doesn't work because to update the UI you need to update the state\n\n  render = () => {\n    return (\n      <React.Fragment>\n  <div className={classNames('CardTable', {'CardTableGame': this.state.AppMode !== AppMode.START_STATE})}>\n    <h2 className=\"startHeader\" data-testid=\"start-header\">\n      Straight 5\n    </h2>\n    {this.state.AppMode === AppMode.START_STATE &&\n    <React.Fragment>\n        <RulesSection/>\n        <div className=\"mb-4 mt-2\">\n          <button className=\"small-width-button\" onClick={this.StartNewGame}>Start New Game</button>\n        </div>\n\n    </React.Fragment>}\n\n    {this.state.AppMode  === AppMode.GAME &&\n    <React.Fragment>\n      <Hand gameService={this.gameService} moveState={this.state.MoveState} playerService={this.playerService} id={0} cardPressedCallback={this.handlePlayerCardPressed} />\n      <MiddleSection gameService={this.gameService} drawCallback={this.deckAndDiscardPressed} moveState={this.state.MoveState}/>\n      <Hand gameService={this.gameService} moveState={this.state.MoveState} playerService={this.playerService} id={1} cardPressedCallback={this.handlePlayerCardPressed} />\n    </React.Fragment>}\n\n    {this.state.AppMode === AppMode.PLAYER_WIN &&\n    <React.Fragment>\n        <div className=\"mb-4\" data-testid=\"win-header\">\n        Congratulations to Player {this.gameService.getActivePlayerIndex()+1}\n        <button data-testid=\"win-startNewGame\" className=\"mt-2\" onClick={this.StartNewGame}>Start a new Game</button>\n        </div>\n    </React.Fragment>}\n  </div>\n    {this.state.AppMode  === AppMode.GAME && <NewstickerSection gameService={this.gameService} moveState={this.state.MoveState}/>}\n    {this.state.AppMode  === AppMode.GAME && <FooterSection gameService={this.gameService} moveState={this.state.MoveState} tokenService={this.tokenService} buttonPressedCallback={this.handleActionButtonPressed} />}\n  </React.Fragment>\n  )}\n}\n\nexport default Straight5;\n","import React from 'react';\nimport './App.css';\nimport Straight5 from './components/Straight5.js';\nconst { GameService } = require('./service/GameService.js')\nconst { PlayerService } = require('./service/PlayerService.js')\nconst { ConfigService } = require('./service/ConfigService.js')\nconst { TokenService } = require('./service/TokenService.js')\n\nfunction App() {\n  const configService = new ConfigService(6, 9, 2, 3);\n  const playerService = new PlayerService(configService)\n  const tokenService = new TokenService();\n  const gameService = new GameService(playerService, tokenService, configService);\n  return (\n    <div className=\"App\">\n      <header>\n      <div className=\"Container\">\n\n        <Straight5 playerService={playerService} gameService={gameService} configService={configService} tokenService={tokenService}></Straight5>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["model/Enums.js","Utils.js","model/GameState.js","service/GameService.js","service/PlayerService.js","model/Player.js","service/ConfigService.js","service/TokenService.js","components/game/Hand.js","components/game/DeckAndDiscardSection.js","components/game/player-action/ClaimTokenSection.js","components/game/player-action/PlayerTurnActionsSection.js","components/game/player-action/FooterSection.js","components/RulesSection.js","Styles.js","components/RulesSectionWrapper.js","components/HeaderSection.js","components/generic/Slider.js","components/game/start/GameConfigurationSection.js","components/game/start/StartSection.js","components/game/player-action/NewstickerSection.js","components/Straight5.js","App.js","reportWebVitals.js","index.js"],"names":["ActionType","PASS","SWAP","CHANGE_TURN","TURN_FACE_UP","CLAIM_TOKEN","REPLACE_CARD","AppMode","START_STATE","GAME","PLAYER_WIN","DrawType","DECK","DISCARD","MoveState","CARD_DRAWN","DISCARD_CHOSEN","TURN_FACE_UP_CHOSEN","TURN_FACE_UP_IN_PROGRESS","SWAP_CHOSEN","SWAP_IN_PROGRESS","PRE_END_STATE","CLAIMING_TOKEN","CHANGE_TURN_STATE","TokenSetType","STRAIGHT","SET","FULL_HOUSE","TokenType","THREE_IN_A_ROW","value","viewValue","type","length","FOUR_IN_A_ROW","FIVE_IN_A_ROW","THREE_OF_A_KIND","CardValues","WILD","require","shuffleArray","array","i","j","Math","floor","random","getPlayerTextForMoveState","moveState","cardIndex","GameState","this","deck","discard","swapCardIndex","activeCard","activePlayerIndex","tokenToClaim","GameService","playerService","tokenService","configService","gameState","repeats","getRepeatsPerNumber","max","getMaxNumberInDeck","jokers","getNumberOfJokers","getGameState","setDeck","getDeck","push","seen","getDiscard","splice","card","pop","setActiveCard","getTopCardFromDeck","index","console","error","getNumberOfDiscards","setDiscard","getSwapCardIndex","playerCards","getActivePlayersDeck","temp","setSwapCardIndex","getActiveCard","discardIndex","createDeck","dealCardsToPlayers","initializeDiscard","setActivePlayerIndex","setTokenToClaim","getActivePlayerIndex","getNumberOfPlayers","hand","getTokenToClaim","indeces","getAllIndecesForSets","getActivePlayersTokens","playerDeck","getPlayers","getTokens","Player","PlayerService","players","resetPlayers","tokens","ConfigService","maxNumberInDeck","repeatsPerNumber","numberOfPlayers","numberOfDiscards","numberOfJokers","numberOfTokensNeededToWin","setMaxNumberInDeck","setRepeatsPerNumber","setNumberOfPlayers","setNumberOfDiscards","setNumberOfJokers","setNumberOfTokensNeededToWin","TokenService","player","canClaimToken","token","existing_tokens","includes","getAllIndecesForToken","isFullHouse","possibleIndeces","getAllIndecesForStraight","Error","straight_length","count_options_to_make_straight_length","possible_combinations","prev_value","set_length","returnArray","map","wildMap","Object","keys","key","concat","numFirstDigit","numSecondDigit","classNames","Hand","props","render","className","name","id","getNumberOfTokensNeededToWin","cardCanBePressed","onClick","cardPressedCallback","xmlns","width","height","viewBox","d","TableCanvas","React","createRef","bind","gameService","Component","DeckAndDiscardSection","highlightDiscard","drawCallback","getTopDiscardValue","highlightDeck","ClaimTokenSection","ShowToken","buttonPressedCallback","PlayerTurnActionsSection","showActiveCard","showCardActionButtons","showTurnUpAction","activePlayerHasAllCardsFaceUp","showPassActions","FooterSection","ShowCardActionsSection","ShowEndActions","RulesSection","maxTokens","customStyles","content","top","left","right","bottom","marginRight","transform","maxWidth","maxHeight","changeTurnStyles","RulesSectionWrapper","state","closeModal","setState","isOpen","modalIsOpen","onRequestClose","style","ariaHideApp","HeaderSection","PrettySlider","withStyles","root","color","thumb","backgroundColor","border","marginTop","marginLeft","boxShadow","active","valueLabel","markLabel","track","borderRadius","rail","Slider","Straight5Slider","valueLabelDisplay","min","step","marks","onChange","disabled","GameConfigurationSection","marks1","label","marks2","Typography","gutterBottom","onCardRangeChanged","onRepeatChanged","onPlayerNumberChanged","onDiscardNumberChanged","onJokerNumberChanged","onNumberOfTokensNeededToWinChanged","reset","event","forceUpdate","StartSection","startNewGameCallback","NewstickerSection","Fragment","Straight5","StartNewGame","startNewGame","deckAndDiscardPressed","drawCardFromDeck","drawCardFromDiscard","handleDiscard","ReplaceCard","replaceCard","TurnCardFaceUp","turnCardFaceUp","setDiscardChosenState","SwapCards","swapIsValid","swapCards","EndMove","playerCanClaimToken","ChangeTurn","ClaimTokenCardPress","isValidIndexForToken","claimToken","checkIfWinner","nextPlayer","handleActionButtonPressed","action","handlePlayerCardPressed","log","hidden","discardCard","discardPileHas0Cards","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f9dac82f.chunk.js","sourcesContent":["export const ActionType = {\n  PASS: 'PASS',\n  SWAP: 'SWAP',\n  CHANGE_TURN: 'CHANGE_TURN',\n  TURN_FACE_UP: 'TURN_FACE_UP',\n  CLAIM_TOKEN: 'CLAIM_TOKEN',\n  REPLACE_CARD: 'REPLACE_CARD'\n}\n\nexport const AppMode = {\n  START_STATE: 'START_STATE',\n  GAME: 'GAME',\n  PLAYER_WIN: 'PLAYER_WIN'\n}\n\nexport const DrawType = {\n  DECK: 'DECK',\n  DISCARD: 'DISCARD'\n}\n\nexport const MoveState = {\n  START_STATE:  'START_STATE',\n  CARD_DRAWN: 'CARD_DRAWN',\n  DISCARD_CHOSEN: 'DISCARD_CHOSEN',\n  TURN_FACE_UP_CHOSEN: 'TURN_FACE_UP_CHOSEN',\n  TURN_FACE_UP_IN_PROGRESS: 'TURN_FACE_UP_IN_PROGRESS',\n  SWAP_CHOSEN: 'SWAP_CHOSEN',\n  SWAP_IN_PROGRESS: 'SWAP_IN_PROGRESS',\n  PRE_END_STATE: 'PRE_END_STATE',\n  CLAIMING_TOKEN: 'CLAIMING_TOKEN',\n  CHANGE_TURN_STATE: 'CHANGE_TURN_STATE',\n}\n\nexport const TokenSetType = {\n  STRAIGHT: 'STRAIGHT',\n  SET: 'SET',\n  FULL_HOUSE: 'FULL_HOUSE'\n}\n\nexport const TokenType = {\n  THREE_IN_A_ROW: {\n    value: 'THREE_IN_A_ROW',\n    viewValue: 'THREE IN A ROW',\n    type: TokenSetType.STRAIGHT,\n    length: 3\n  },\n  FOUR_IN_A_ROW: {\n    value: 'FOUR_IN_A_ROW',\n    viewValue: 'FOUR IN A ROW',\n    type: TokenSetType.STRAIGHT,\n    length: 4\n  },\n  FIVE_IN_A_ROW: {\n    value: 'FIVE_IN_A_ROW',\n    viewValue: 'FIVE IN A ROW',\n    type: TokenSetType.STRAIGHT,\n    length: 5\n  },\n  THREE_OF_A_KIND: {\n    value: 'THREE_OF_A_KIND',\n    viewValue: 'THREE OF A KIND',\n    type: TokenSetType.SET,\n    length: 3\n  },\n  FULL_HOUSE: {\n    value: 'FULL_HOUSE',\n    viewValue: 'FULL HOUSE',\n    type: TokenSetType.FULL_HOUSE,\n    length: 5\n  }\n}\n\nexport const CardValues = {\n  WILD: 'WILD'\n}\n","const {MoveState} = require('./model/Enums.js')\n\nfunction shuffleArray(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n}\n\nfunction getPlayerTextForMoveState(moveState, cardIndex) {\n  switch (moveState) {\n    case MoveState.START_STATE:\n      return 'Please draw a card from Deck or Discard'\n    case MoveState.CARD_DRAWN:\n      return 'Replace card in your hand or choose a discard option';\n    case MoveState.TURN_FACE_UP_CHOSEN:\n      return 'Select the first card to turn face up'\n    case MoveState.TURN_FACE_UP_IN_PROGRESS:\n      return 'Select the second card to turn face up or pass'\n    case MoveState.SWAP_CHOSEN:\n      return 'Select the first card you\\'d like  to swap'\n    case MoveState.SWAP_IN_PROGRESS:\n      return 'Selected ' + cardIndex + '. Please select a second card to swap'\n    case MoveState.PRE_END_STATE:\n      return 'Please select a token to claim or pass'\n    case MoveState.CLAIMING_TOKEN:\n      return 'Please select the first card of your run';\n    case MoveState.DISCARD_CHOSEN:\n      return 'Please select the discard pile you would like to discard the card to';\n    case MoveState.CHANGE_TURN_STATE:\n      return 'Click anywhere to start your turn';\n    default:\n      return 'UNKONWN STATE DETECTED'\n  }\n}\n\nexport {shuffleArray, getPlayerTextForMoveState};\n","class GameState {\n\n  constructor() {\n    this.deck = [];\n    this.discard = [[]];\n    this.swapCardIndex = -1;\n    this.activeCard = {};\n    this.activePlayerIndex = 0;\n    this.tokenToClaim = '';\n  }\n\n  getDeck() {\n    return this.deck;\n  }\n\n  getDiscard() {\n    return this.discard;\n  }\n\n  getSwapCardIndex() {\n    return this.swapCardIndex;\n  }\n\n  getActiveCard() {\n    return this.activeCard;\n  }\n\n  getActivePlayerIndex() {\n    return this.activePlayerIndex;\n  }\n\n  getTokenToClaim() {\n    return this.tokenToClaim;\n  }\n\n  setDeck(deck) {\n    this.deck = deck;\n  }\n\n  setDiscard(discard) {\n    this.discard = discard;\n  }\n\n  setSwapCardIndex(swapCardIndex) {\n    this.swapCardIndex = swapCardIndex;\n  }\n\n  setActiveCard(activeCard) {\n    this.activeCard = activeCard;\n  }\n\n  setActivePlayerIndex(activePlayerIndex) {\n    this.activePlayerIndex = activePlayerIndex;\n  }\n\n  setTokenToClaim(tokenToClaim) {\n    this.tokenToClaim = tokenToClaim;\n  }\n}\n\nexport {GameState};\n","const { shuffleArray } = require('../Utils.js')\nconst { CardValues, TokenType } = require('../model/Enums.js')\nclass GameService {\n\n  constructor(playerService, tokenService, configService, gameState) {\n      this.playerService = playerService;\n      this.tokenService = tokenService;\n      this.configService = configService;\n      this.gameState =  gameState;\n  }\n\n  createDeck() {\n    const repeats = this.configService.getRepeatsPerNumber();\n    const max = this.configService.getMaxNumberInDeck();\n    const jokers = this.configService.getNumberOfJokers();\n    this.getGameState().setDeck([]);\n    for (let i = 0; i < repeats; i++) {\n      for (let j = 0; j < max; j++) {\n        this.getGameState().getDeck().push({value: j+1, seen: false})\n      }\n    }\n    for (let i = 0; i < jokers; i++) {\n      this.getGameState().getDeck().push({value: CardValues.WILD, seen:false})\n    }\n    shuffleArray(this.getGameState().getDeck());\n  }\n\n  getTopCardFromDeck() {\n    if (this.getGameState().getDeck().length === 0) {\n      this.getGameState().setDeck([]);\n      for(let i = 0; i < this.getGameState().getDiscard().length; i ++) {\n        this.getGameState().getDeck().push(...this.getGameState().getDiscard()[i].splice(0, this.getGameState().getDiscard()[i].length - 1));\n      }\n      shuffleArray(this.getGameState().getDeck());\n    }\n    const card = this.getGameState().getDeck().pop();\n    card.seen = false;\n    return card;\n  }\n\n  drawCardFromDeck() {\n    this.getGameState().setActiveCard(this.getTopCardFromDeck());\n  }\n\n  drawCardFromDiscard(index) {\n    if (this.getGameState().getDiscard()[index].length === 0) {\n      console.error('SOMETHING went wrong, discard length = 0')\n    }\n    this.getGameState().setActiveCard(this.getGameState().getDiscard()[index].pop());\n  }\n\n  discardPileHas0Cards() {\n    for (let i = 0; i < this.configService.getNumberOfDiscards(); i ++) {\n      if (this.getGameState().getDiscard()[i].length === 0) {\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  initializeDiscard() {\n    this.getGameState().setDiscard([]);\n    for (let i = 0; i < this.configService.getNumberOfDiscards(); i ++) {\n      this.getGameState().getDiscard().push([]);\n      this.getGameState().getDiscard()[i].push(this.getGameState().getDeck().pop());\n    }\n  }\n\n  swapIsValid(index) {\n    return this.getGameState().getSwapCardIndex() > 0 && this.getGameState().getSwapCardIndex() !== index;\n  }\n\n  swapCards(index) {\n    const playerCards = this.getActivePlayersDeck();\n    const temp = playerCards[index];\n    playerCards[index] = playerCards[this.getGameState().getSwapCardIndex()];\n    playerCards[this.getGameState().getSwapCardIndex()] = temp;\n    this.getGameState().setSwapCardIndex(-1);\n  }\n\n  replaceCard(index) {\n    const temp = this.getActivePlayersDeck()[index];\n    this.getGameState().getActiveCard().seen = true;\n    this.getActivePlayersDeck()[index] = this.getGameState().getActiveCard();\n    this.getGameState().setActiveCard(temp);\n  }\n\n  discardCard(discardIndex) {\n    this.getGameState().getDiscard()[discardIndex].push(this.getGameState().getActiveCard());\n    this.getGameState().setActiveCard({});\n  }\n\n  turnCardFaceUp(index) {\n    const card = this.getActivePlayersDeck()[index];\n    if (this.getActivePlayersDeck()[index].seen === true) {\n      return false;\n    }\n    card.seen = true;\n    return true;\n  }\n\n  startNewGame() {\n    this.createDeck();\n    this.playerService.dealCardsToPlayers(this.getGameState().getDeck());\n    this.initializeDiscard();\n    this.getGameState().setSwapCardIndex(-1);\n    this.getGameState().setActiveCard({});\n    this.getGameState().setActivePlayerIndex(0);\n    this.getGameState().setTokenToClaim('');\n  }\n\n  nextPlayer() {\n    const activePlayerIndex = this.getGameState().getActivePlayerIndex();\n    this.getGameState().setActivePlayerIndex(activePlayerIndex + 1 === this.configService.getNumberOfPlayers() ? 0 : activePlayerIndex + 1);\n  }\n\n//TODO call token token service directly from above?\n  claimToken(index) {\n    //TODO come back to this to pick discard\n    //TODO come back to this to pick top card that goes to discard\n    const hand = this.getActivePlayersDeck();\n    switch (this.getGameState().getTokenToClaim()) {\n      case TokenType.FIVE_IN_A_ROW:\n      case TokenType.FULL_HOUSE:\n        for (let i = 0; i < hand.length; i ++) {\n          this.getGameState().getDiscard()[0].push(hand[i]);\n          hand[i] = this.getTopCardFromDeck();\n        }\n        break;\n      case TokenType.THREE_OF_A_KIND:\n        let indeces = this.tokenService.getAllIndecesForSets(hand, 3)[0];\n        for (let i = 0; i < 3; i++) {\n            this.getGameState().getDiscard()[0].push(hand[indeces[i]]);\n            hand[indeces[i]] = this.getTopCardFromDeck();\n          }\n        break;\n      case TokenType.THREE_IN_A_ROW:\n      for (let i = index; i < index + 3; i++) {\n        this.getGameState().getDiscard()[0].push(hand[i]);\n        hand[i] = this.getTopCardFromDeck();\n        hand[i].seen = false;\n      }\n        break;\n      case TokenType.FOUR_IN_A_ROW:\n      for (let i = index; i < index + 4; i++) {\n        this.getGameState().getDiscard()[0].push(hand[i]);\n        hand[i] = this.getTopCardFromDeck();\n      }\n        break;\n      default:\n        console.error('something went wrong');\n        return\n    }\n    this.getActivePlayersTokens().push(this.getGameState().getTokenToClaim());\n    this.getGameState().setTokenToClaim('');\n  }\n\n  activePlayerHasAllCardsFaceUp() {\n    const playerDeck = this.getActivePlayersDeck()\n    for (let i = 0; i < playerDeck.length; i++) {\n      if (!playerDeck[i].seen) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  getGameState()  {\n    return this.gameState;\n  }\n\n  setGameState(gameState) {\n    this.gameState = gameState;\n  }\n\n  getActivePlayersTokens() {\n    return this.playerService.getPlayers()[this.getGameState().getActivePlayerIndex()].getTokens();\n  }\n\n  getActivePlayersDeck() {\n    return this.playerService.getPlayers()[this.getGameState().getActivePlayerIndex()].getDeck();\n  }\n}\n\nexport {GameService};\n","const {Player} = require('../model/Player.js');\n\nclass PlayerService {\n\n  constructor(configService) {\n    this.configService = configService;\n    this.players = [];\n    this.resetPlayers();\n  }\n\n  resetPlayers() {\n    this.players = [];\n    for (let i = 0; i < this.configService.getNumberOfPlayers(); i ++) {\n      this.players.push(new Player([], []));\n    }\n  }\n\n  dealCardsToPlayers(deck) {\n    for (let j = 0; j < 5; j++) {\n      for (let i = 0; i < this.getPlayers().length; i ++) {\n        this.players[i].getDeck().push(deck.pop());\n      }\n    }\n  }\n\n  getPlayers() {\n    return this.players;\n  }\n\n  setPlayers(players) {\n    this.players = players;\n  }\n\n}\n\nexport {PlayerService};\n","class Player {\n\n  constructor(deck, tokens) {\n      this.deck = deck;\n      this.tokens = tokens;\n  }\n\n  getDeck() {\n    return this.deck;\n  }\n\n  getTokens() {\n    return this.tokens;\n  }\n\n  setDeck(deck) {\n    this.deck = deck;\n  }\n\n  setTokens(tokens) {\n    this.tokens = tokens;\n  }\n}\n\nexport {Player};\n","class ConfigService {\n\n  constructor(maxNumberInDeck, repeatsPerNumber, numberOfPlayers, numberOfDiscards, numberOfJokers, numberOfTokensNeededToWin) {\n    this.maxNumberInDeck = maxNumberInDeck;\n    this.repeatsPerNumber = repeatsPerNumber;\n    this.numberOfPlayers = numberOfPlayers;\n    this.numberOfDiscards = numberOfDiscards;\n    this.numberOfJokers = numberOfJokers;\n    this.numberOfTokensNeededToWin = numberOfTokensNeededToWin;\n  }\n\n  getMaxNumberInDeck() {\n    return this.maxNumberInDeck;\n  }\n\n  getRepeatsPerNumber() {\n    return this.repeatsPerNumber;\n  }\n\n  getNumberOfPlayers() {\n    return this.numberOfPlayers;\n  }\n\n  getNumberOfDiscards() {\n    return this.numberOfDiscards;\n  }\n\n  getNumberOfJokers() {\n    return this.numberOfJokers;\n  }\n\n  getNumberOfTokensNeededToWin() {\n    return this.numberOfTokensNeededToWin;\n  }\n\n  setMaxNumberInDeck(maxNumberInDeck) {\n    this.maxNumberInDeck = maxNumberInDeck;\n  }\n\n  setRepeatsPerNumber(repeatsPerNumber) {\n    this.repeatsPerNumber = repeatsPerNumber;\n  }\n\n  setNumberOfPlayers(numberOfPlayers) {\n    this.numberOfPlayers = numberOfPlayers;\n  }\n\n  setNumberOfDiscards(numberOfDiscards) {\n    this.numberOfDiscards = numberOfDiscards;\n  }\n\n  setNumberOfJokers(numberOfJokers) {\n    this.numberOfJokers = numberOfJokers;\n  }\n\n  setNumberOfTokensNeededToWin(numberOfTokensNeededToWin) {\n    this.numberOfTokensNeededToWin = numberOfTokensNeededToWin;\n  }\n\n  reset() {\n    this.setMaxNumberInDeck(9);\n    this.setRepeatsPerNumber(6);\n    this.setNumberOfPlayers(2);\n    this.setNumberOfDiscards(3);\n    this.setNumberOfJokers(2);\n    this.setNumberOfTokensNeededToWin(4);\n  }\n\n}\n\nexport {ConfigService};\n","const { TokenType, TokenSetType, CardValues } = require('../model/Enums.js')\n\nclass TokenService {\n\n// TODO checkonly active tokenService\n  playerCanClaimToken(player) {\n    return this.canClaimToken(player.getDeck(), TokenType.THREE_IN_A_ROW, player.getTokens()) ||\n    this.canClaimToken(player.getDeck(), TokenType.FOUR_IN_A_ROW, player.getTokens()) ||\n    this.canClaimToken(player.getDeck(), TokenType.FIVE_IN_A_ROW, player.getTokens()) ||\n    this.canClaimToken(player.getDeck(), TokenType.THREE_OF_A_KIND, player.getTokens()) ||\n    this.canClaimToken(player.getDeck(), TokenType.FULL_HOUSE, player.getTokens());\n  }\n\n  canClaimToken(deck, token, existing_tokens) {\n    //TODO does this logic belong here?\n    return !existing_tokens.includes(token) && this.getAllIndecesForToken(deck, token).length > 0\n  }\n\n  isValidIndexForToken(deck, token, index) {\n    if (token.type === TokenSetType.FULL_HOUSE) {\n      return this.isFullHouse(deck)\n    }\n    let possibleIndeces = this.getAllIndecesForToken(deck, token);\n    for (let i = 0; i < possibleIndeces.length; i++) {\n      if (token.type === TokenSetType.STRAIGHT) {\n        if(index === possibleIndeces[i][0]) {\n          return true\n        }\n      }\n      if (token.type === TokenSetType.SET) {\n        if(possibleIndeces[i].includes(index)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  getAllIndecesForToken(deck, token) {\n    switch (token.type) {\n      case TokenSetType.STRAIGHT:\n        return this.getAllIndecesForStraight(deck, token.length);\n      case TokenSetType.SET:\n        return this.getAllIndecesForSets(deck, token.length);\n      case TokenSetType.FULL_HOUSE:\n        if (this.isFullHouse(deck))  {\n          return [[0,1,2,3,4]];\n        }\n        return []\n      default:\n      // TODO Test this exception\n        throw new Error('Invalid TokenSetType')\n    }\n  }\n\n  getAllIndecesForStraight(deck, straight_length) {\n    //assumes hand size of 5. If 4 in a row 6 - 4 = 2, 1234 or 2345 so ✅\n    const count_options_to_make_straight_length = 6 - straight_length;\n    let possible_combinations = []\n    for (let i = 0; i < count_options_to_make_straight_length; i ++) {\n      let indeces = []\n      if (!deck[i].seen) {\n        continue\n      }\n      indeces.push(i)\n      let prev_value = deck[i].value;\n      if (deck[i].value === CardValues.WILD) {\n        prev_value = deck[i+1].value - 1\n      }\n\n      for (let j = i + 1; j < straight_length + i; j ++) {\n        if (!deck[j].seen) {\n          break;\n        }\n        if (deck[j].value === prev_value + 1 || deck[j].value === CardValues.WILD) {\n          indeces.push(j)\n          prev_value++;\n        }\n      }\n      if (indeces.length === straight_length) {\n        possible_combinations.push(indeces)\n      }\n    }\n    return possible_combinations;\n  }\n\n  getAllIndecesForSets(deck, set_length) {\n    let returnArray = []\n    let map = {};\n    for (let i = 0; i < 5; i++) {\n      if (!deck[i].seen) {\n        continue;\n      }\n      if (!map[deck[i].value]) {\n        map[deck[i].value] = []\n      }\n      map[deck[i].value].push(i)\n    }\n    let wildMap = [];\n    if (!!map[CardValues.WILD]) {\n      wildMap = map[CardValues.WILD];\n    }\n    for (let key of Object.keys(map)) {\n      if (key === CardValues.WILD) {\n        if (map[key].length>= set_length) {\n          returnArray.push(map[key]);\n        }\n      } else {\n        if (map[key].length + wildMap.length >= set_length) {\n          returnArray.push(map[key].concat(wildMap));\n        }\n      }\n    }\n    return returnArray\n  }\n\n  isFullHouse(deck) {\n    let map = {};\n    for (let i = 0; i < 5; i++) {\n      // with hand size 5, all cards need to be seen\n      if (!deck[i].seen) {\n        return false;\n      }\n      if (!map[deck[i].value]) {\n        map[deck[i].value] = []\n      }\n      // Full House has to be 2 cards + WILDS possible\n      if ((Object.keys(map).length > 3) || (Object.keys(map).length === 3 && !Object.keys(map).includes(CardValues.WILD))) {\n        return false;\n      }\n      map[deck[i].value].push(i)\n    }\n    // at this point only 3 cards, 2 values + wild.\n    if (!!map[CardValues.WILD]) {\n      // if two wilds, its FH no matter what (e.g. W W 1 1 2, or W W 1 1 1)\n      if (map[CardValues.WILD].length >= 2) {\n        return true;\n      }\n      // if one wilds, and two other numbers its FH no matter what (e.g. W 2 1 1 2, or W 2 1 1 1)\n      if (map[CardValues.WILD].length === 1 && Object.keys(map).length === 3) {\n        return true;\n      }\n      // case where there one wild but then four of another value e.g. W 1 1 1 1 ->\n      return false;\n    }\n    const numFirstDigit = map[Object.keys(map)[0]].length;\n    const numSecondDigit = map[Object.keys(map)[1]].length;\n    return (numFirstDigit === 3 && numSecondDigit === 2)  ||\n              (numFirstDigit === 2 && numSecondDigit === 3);\n  }\n}\n\nexport {TokenService};\n","import React, { Component } from 'react';\nimport './Hand.css';\nconst classNames = require('classnames');\nconst {MoveState} = require('../../model/Enums.js')\n\nclass Hand extends Component {\n  constructor(props) {\n    super(props);\n    this.TableCanvas = React.createRef();\n    this.render.bind(this);\n    this.deck = this.props.playerService.getPlayers()[this.props.id].getDeck();\n    this.tokens = this.props.playerService.getPlayers()[this.props.id].getTokens();\n  }\n\n   // TODO testing lol!\n  cardCanBePressed(card, index) {\n    return this.props.id === this.props.gameService.getGameState().getActivePlayerIndex()\n     && (\n       ([MoveState.TURN_FACE_UP_CHOSEN, MoveState.TURN_FACE_UP_IN_PROGRESS].includes(this.props.moveState) && !card.seen)\n           ||\n       (MoveState.SWAP_IN_PROGRESS === this.props.moveState && this.props.gameService.getGameState().getSwapCardIndex() !== index)\n           ||\n       [MoveState.CARD_DRAWN, MoveState.SWAP_CHOSEN,  MoveState.CLAIMING_TOKEN].includes(this.props.moveState));\n  }\n\n  render = () => {\n    return (\n      <div className=\"PlayerHand\" data-testid=\"hand\">\n        <div data-testid=\"player-header\" className=\"PlayerHeader\" name=\"Player1\">\n          <p className=\"playerTag\">Player {this.props.id+1}</p>\n        </div>\n        <div className=\"PlayerTokenHeader\">\n          <p className=\"playerTag\" data-testid='hand-player-tokens'>Tokens [{this.tokens.length}/{this.props.configService.getNumberOfTokensNeededToWin()}]</p>\n        </div>\n        {this.deck.map((card, index) => (\n          <div className=\"PlayerCardWrapper\" key={index}>\n          <div className={classNames('PlayerCard', {'PlayerCardBack': !card.seen}, {'PlayerCardFront': card.seen}, {\"PlayerCardIsActive\" : this.cardCanBePressed(card, index)})} data-testid='player-card' onClick={() => this.props.cardPressedCallback(this.props.id, index)}>\n            {card.seen ? card.value : <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M12 2c5.514 0 10 4.486 10 10s-4.486 10-10 10-10-4.486-10-10 4.486-10 10-10zm0-2c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm1.25 17c0 .69-.559 1.25-1.25 1.25-.689 0-1.25-.56-1.25-1.25s.561-1.25 1.25-1.25c.691 0 1.25.56 1.25 1.25zm1.393-9.998c-.608-.616-1.515-.955-2.551-.955-2.18 0-3.59 1.55-3.59 3.95h2.011c0-1.486.829-2.013 1.538-2.013.634 0 1.307.421 1.364 1.226.062.847-.39 1.277-.962 1.821-1.412 1.343-1.438 1.993-1.432 3.468h2.005c-.013-.664.03-1.203.935-2.178.677-.73 1.519-1.638 1.536-3.022.011-.924-.284-1.719-.854-2.297z\"/></svg> }\n          </div>\n          </div>\n        ))}\n        <div className='PlayerTokens'>\n        {this.tokens.map((token, index) => (\n          <div className='PlayerToken' data-testid='player-token' key={index}>\n            {token.viewValue}\n          </div>\n        ))}\n        </div>\n      </div>\n  )}\n}\n\nexport default Hand;\n","import React, { Component } from 'react';\nimport './DeckAndDiscardSection.css';\nconst {DrawType, MoveState} = require('../../model/Enums.js')\nconst classNames = require('classnames');\n\nclass DeckAndDiscardSection extends Component {\n  constructor(props) {\n    super(props);\n    this.TableCanvas = React.createRef();\n    this.render.bind(this);\n    this.gameService = props.gameService;\n  }\n\n  getTopDiscardValue(index) {\n    const discard = this.gameService.getGameState().getDiscard()[index];\n    return discard.length > 0 ? discard[discard.length-1].value : '';\n  }\n\n  highlightDeck() {\n    return this.props.moveState === MoveState.START_STATE;\n  }\n\n  highlightDiscard() {\n    return [MoveState.START_STATE, MoveState.DISCARD_CHOSEN].includes(this.props.moveState);\n  }\n\n  // TODO Now MOVE STATE IS HERE DO WE WANT TO MOVE THE DRAW LOGIC DOWN OR KEEP IT HIGHER?\n  render = () => {\n     return (\n      <div className=\"DeckAndDiscardSection\" data-testid=\"deck-and-discard-section\">\n      {this.gameService.getGameState().getDiscard().map((discard, index) => (\n        <div className=\"DiscardSection\" key={index}>\n          <div className=\"FullWidth\" data-testid=\"discard-header\">\n            Discard\n          </div>\n          <div className=\"PlayerCardWrapper\">\n            <div className={classNames('PlayerCard', 'PlayerCardFront', {\"PlayerCardIsActive\" : this.highlightDiscard()})} data-testid={'discard-pile-' + index} onClick={() => {this.props.drawCallback(DrawType.DISCARD, index)}}>\n              {this.getTopDiscardValue(index)}\n            </div>\n          </div>\n        </div>\n      ))}\n        <div className=\"DeckSection\">\n          <div className=\"FullWidth\" data-testid=\"deck-header\">\n            Deck\n          </div>\n          <div className={classNames('PlayerCard', 'PlayerCardBack', {\"PlayerCardIsActive\" : this.highlightDeck()})} data-testid=\"deck-pile-0\" onClick={() => {this.props.drawCallback(DrawType.DECK)}}>\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M12 2c5.514 0 10 4.486 10 10s-4.486 10-10 10-10-4.486-10-10 4.486-10 10-10zm0-2c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm1.25 17c0 .69-.559 1.25-1.25 1.25-.689 0-1.25-.56-1.25-1.25s.561-1.25 1.25-1.25c.691 0 1.25.56 1.25 1.25zm1.393-9.998c-.608-.616-1.515-.955-2.551-.955-2.18 0-3.59 1.55-3.59 3.95h2.011c0-1.486.829-2.013 1.538-2.013.634 0 1.307.421 1.364 1.226.062.847-.39 1.277-.962 1.821-1.412 1.343-1.438 1.993-1.432 3.468h2.005c-.013-.664.03-1.203.935-2.178.677-.73 1.519-1.638 1.536-3.022.011-.924-.284-1.719-.854-2.297z\"/></svg>\n              </div>\n            </div>\n      </div>\n  )}\n}\n\nexport default DeckAndDiscardSection;\n","import React, { Component } from 'react';\nimport './ClaimTokenSection.css';\nconst { ActionType, TokenType } = require('../../../model/Enums.js')\n\nclass ClaimTokenSection extends Component {\n  constructor(props) {\n    super(props);\n    this.gameService = props.gameService;\n    this.tokenService = props.tokenService;\n    this.TableCanvas = React.createRef();\n    this.render.bind(this);\n  }\n\n  ShowToken = token => {\n    return this.tokenService.canClaimToken(this.gameService.getActivePlayersDeck(), token, this.gameService.getActivePlayersTokens());\n  }\n\n// TODO dynamic button using funky enums a list\n  render = () => {\n    return (\n        <div className=\"claim-token-section\" data-testid=\"claim-token-section\">\n        {this.ShowToken(TokenType.THREE_IN_A_ROW) && <div><button onClick={() => this.props.buttonPressedCallback(ActionType.CLAIM_TOKEN, TokenType.THREE_IN_A_ROW)}> {TokenType.THREE_IN_A_ROW.viewValue} </button></div>}\n        {this.ShowToken(TokenType.FOUR_IN_A_ROW) && <div><button onClick={() => this.props.buttonPressedCallback(ActionType.CLAIM_TOKEN, TokenType.FOUR_IN_A_ROW)}> {TokenType.FOUR_IN_A_ROW.viewValue} </button></div>}\n        {this.ShowToken(TokenType.FIVE_IN_A_ROW) && <div><button onClick={() => this.props.buttonPressedCallback(ActionType.CLAIM_TOKEN, TokenType.FIVE_IN_A_ROW)}> {TokenType.FIVE_IN_A_ROW.viewValue} </button></div>}\n        {this.ShowToken(TokenType.THREE_OF_A_KIND) && <div><button onClick={() => this.props.buttonPressedCallback(ActionType.CLAIM_TOKEN, TokenType.THREE_OF_A_KIND)}> {TokenType.THREE_OF_A_KIND.viewValue} </button></div>}\n        {this.ShowToken(TokenType.FULL_HOUSE) && <div><button onClick={() => this.props.buttonPressedCallback(ActionType.CLAIM_TOKEN, TokenType.FULL_HOUSE)}> {TokenType.FULL_HOUSE.viewValue} </button></div>}\n        <div className=\"FullWidth\"><button className=\"mb-2 FullWidth\" onClick={() => {this.props.buttonPressedCallback(ActionType.CHANGE_TURN)}}> Pass </button></div>\n        </div>\n      )\n    }\n}\n\nexport default ClaimTokenSection;\n","import React, { Component } from 'react';\nimport './PlayerTurnActionsSection.css';\nconst { ActionType, MoveState } = require('../../../model/Enums.js')\n\nclass PlayerTurnActionsSection extends Component {\n  constructor(props) {\n    super(props);\n    this.gameService = props.gameService;\n    this.TableCanvas = React.createRef();\n    this.render.bind(this);\n  }\n\n  showActiveCard = () => {\n    return !!this.gameService.getGameState().getActiveCard() && !!this.gameService.getGameState().getActiveCard().value\n  }\n\n  showCardActionButtons = () => {\n    return this.props.moveState === MoveState.CARD_DRAWN;\n  }\n\n  showTurnUpAction = () => {\n    return !this.gameService.activePlayerHasAllCardsFaceUp();\n  }\n\n  showPassActions = () => {\n    return this.props.moveState !== MoveState.DISCARD_CHOSEN;\n  }\n\n  render = () => {\n    return (\n      <div className=\"player-turn-action-section\" data-testid=\"player-turn-action-section\">\n      {this.showActiveCard() &&\n        <div className=\"PlayerCard PlayerCardFront\" data-testid=\"footer-active-card\">\n          {this.gameService.getGameState().getActiveCard().value}\n        </div>\n      }\n      {this.showCardActionButtons() &&\n        <div>\n          <button className=\"swapButton\" onClick={() => {this.props.buttonPressedCallback(ActionType.SWAP)}}> Discard to swap two </button>\n          {this.showTurnUpAction() && <button className=\"turnFaceUpButton\" data-testid='turn-face-up-button' onClick={() => {this.props.buttonPressedCallback(ActionType.TURN_FACE_UP)}}> Discard to turn two face up </button>}\n        </div>\n      }\n      {this.showPassActions() && <div className=\"FullWidth\"><button className=\"mb-2 FullWidth\" onClick={() => {this.props.buttonPressedCallback(ActionType.PASS)}}> Pass </button></div>}\n      </div>\n      )\n    }\n}\n\nexport default PlayerTurnActionsSection;\n","import React, { Component } from 'react';\nimport './FooterSection.css';\nimport ClaimTokenSection from './ClaimTokenSection.js'\nimport PlayerTurnActionsSection from './PlayerTurnActionsSection.js'\nconst { MoveState } = require('../../../model/Enums.js')\n\n\nclass FooterSection extends Component {\n  constructor(props) {\n    super(props);\n    this.gameService = props.gameService;\n    this.tokenService = props.tokenService;\n    this.TableCanvas = React.createRef();\n    this.render.bind(this);\n  }\n\n  ShowCardActionsSection = () => {\n    return [MoveState.CARD_DRAWN, MoveState.TURN_FACE_UP_CHOSEN, MoveState.TURN_FACE_UP_IN_PROGRESS, MoveState.SWAP_CHOSEN, MoveState.SWAP_IN_PROGRESS, MoveState.DISCARD_CHOSEN].includes(this.props.moveState)\n  }\n\n  ShowEndActions = () => {\n    return this.props.moveState === MoveState.PRE_END_STATE;\n  }\n\n  render = () => {\n    return (\n      <div className=\"CardTableFooter\" data-testid=\"footer-section\">\n      {this.ShowCardActionsSection() &&\n        <PlayerTurnActionsSection gameService={this.props.gameService} moveState={this.props.moveState} buttonPressedCallback={this.props.buttonPressedCallback}/>\n      }\n\n      {this.ShowEndActions() &&\n        <ClaimTokenSection gameService={this.props.gameService} tokenService={this.props.tokenService} buttonPressedCallback={this.props.buttonPressedCallback}/>\n      }\n        </div>\n      )\n    }\n}\nexport default FooterSection;\n","import React, { Component } from 'react';\nimport './RulesSection.css';\n\nclass RulesSection extends Component {\n  constructor(props) {\n    super(props);\n    this.render.bind(this);\n    this.numberOfTokensNeededToWin = this.props.numberOfTokensNeededToWin;\n    this.maxTokens = this.props.maxTokens;\n  }\n  render () {\n    return (\n  <div>\n    <div className=\"scroll-component\">\n      <div className=\"scroll-content\">\n\n      <div className=\"rulesSection\" data-testid=\"rules-section\">\n        <div className=\"secondary-background rulesSectionContent\">\n          <h3 className=\"rules-header\">Rules</h3>\n        </div>\n        <div className=\"secondary-background rulesSectionContent\">\n          <h4 className=\"rules-header\">Introduction</h4>\n          <p className=\"rules-p\">Welcome to Straight 5, a rummy-like, yahtzee-like card game! This is the (work-in-progress) digitial version of the (hopefully future) Straight 5 game. </p>\n        </div>\n\n        <div className=\"primary-background rulesSectionContent\">\n          <h4 className=\"rules-header\">Winning</h4>\n          <p className=\"rules-p\" data-testid=\"tokens-to-win\">\n            The first player to claim {this.numberOfTokensNeededToWin} out of {this.maxTokens} tokens below wins.</p>\n          <ul>\n            <li>Three in a row</li>\n            <li>Four in a row</li>\n            <li>Five in a row</li>\n            <li>Three of a kind</li>\n            <li>Full House</li>\n          </ul>\n        </div>\n        <div className=\"secondary-background rulesSectionContent\">\n          <h4 className=\"rules-header\">Set up</h4>\n          <p className=\"rules-p\">Each player begins with 5 cards face-down in front of them.\n          The top card of the deck will be turned over as a discard</p>\n        </div>\n        <div className=\"primary-background rulesSectionContent\">\n          <h4 className=\"rules-header\">Turn Order</h4>\n          <p className=\"rules-p\">Each consists of four phases:</p>\n          <ol>\n            <li><h4 className=\"phaseHeader\">Draw Phase:</h4> draw the top card of the deck or discard piles</li>\n            <li><h4 className=\"phaseHeader\">Play Phase:</h4>\n              <ul>\n                <li> Place card in front of you or; </li>\n                <li> Take one of the following actions:  </li>\n                <ul>\n                  <li> Turn up to two cards face-up</li>\n                  <li> Swap any two cards </li>\n                </ul>\n              </ul>\n            </li>\n            <li><h4 className=\"phaseHeader\">Discard Phase:</h4> discard active card to one of the discard piles (your choice)</li>\n            <li><h4 className=\"phaseHeader\">Claim Token Phase</h4>: Claim a token by discarding the required cards (e.g. 1 2 3 4 for Four In a Row).</li>\n          </ol>\n        </div>\n        <div className=\"secondary-background rulesSectionContent\">\n          <h4 className=\"rules-header\">Rule Clarifications</h4>\n          <p className=\"rules-p\">Here are some clarifications on rules above:</p>\n          <ol>\n            <li>When you place the drawn card in front of you, you do not get to take another action</li>\n            <li>When you discard a card, you get to choose which discard pile it goes into <b>UNLESS</b> a discard pile has 0 cards, in which case you must discard it there (and the app will do this automatically)</li>\n            <li>If you have only one card face-up and choose to take the \"turn up to two cards face up\" action. You only get to turn one card face up. </li>\n            <li>You can only claim each token once</li>\n            <li>You can only claim one token per turn</li>\n            <li>The cards to claim the tokens for the straights (3/4/5 in a row) must be adjacent and in ascending order (e.g. 1 2 3 not 3 2 1 or 1 3 2)</li>\n            <li>The cards to claim the tokens for three of a kind and full house can be anywhere</li>\n          </ol>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n  )}\n}\n\nexport default RulesSection;\n","export const customStyles = {\n    content: {\n      top: '50%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      marginRight: '-50%',\n      transform: 'translate(-50%, -50%)',\n      maxWidth: '400px',\n      maxHeight: '80vh'\n    }\n};\n\n\nexport const changeTurnStyles = {\n    content: {\n      top: '35%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      marginRight: '-50%',\n      transform: 'translate(-50%, -50%)',\n      maxWidth: '400px',\n      maxHeight: '80vh'\n    }\n};\n","import React, { Component } from 'react';\nimport './RulesSectionWrapper.css';\nimport RulesSection from './RulesSection.js';\nimport Modal from 'react-modal';\nimport {customStyles} from '../Styles.js'\n\nclass RulesSectionWrapper extends Component {\n  constructor(props) {\n    super(props);\n    this.maxTokens = 5; //TODO tokens to select and count should be a config\n    this.state = {\n      'modalIsOpen': false\n    }\n    this.render.bind(this);\n  }\n\n  render () {\n    const openModal = () => {\n      this.setState({'modalIsOpen': true})\n    }\n\n    const closeModal = () => {\n      this.setState({'modalIsOpen': false})\n    }\n    // TODO maybe have two sections to show these rules and also configuration\n    return (\n      <div>\n        <div className=\"open-modal-container\" id=\"modal-div\">\n          <div className=\"open-modal-content\">\n            <button className=\"small-width-button\" data-testid=\"open-modal-button\" onClick={openModal}>Rules</button>\n          </div>\n        </div>\n        <Modal\n          isOpen={this.state.modalIsOpen}\n          onRequestClose={closeModal}\n          style={customStyles}\n          ariaHideApp={false}\n          >\n          <RulesSection numberOfTokensNeededToWin={this.props.configService.getNumberOfTokensNeededToWin()} maxTokens={this.maxTokens}></RulesSection>\n          <div className=\"close-modal-container\">\n            <div className=\"close-modal-content\">\n              <button className=\"open-modal-button\" data-testid=\"close-modal-button\" onClick={closeModal}>close</button>\n            </div>\n          </div>\n        </Modal>\n      </div>\n    )}\n  }\n\n  export default RulesSectionWrapper;\n","import React, { Component } from 'react';\nimport './HeaderSection.css';\nimport RulesSectionWrapper from './RulesSectionWrapper.js';\n\nclass HeaderSection extends Component {\n  constructor(props) {\n    super(props);\n    this.render.bind(this);\n  }\n\n  render () {\n    return (\n  <div className=\"straight5-header-container\" data-testid=\"header-section\">\n    <div className=\"straight5-header-header\">\n      <h2 className=\"startHeader\" data-testid=\"start-header\">\n        Straight 5\n      </h2>\n    </div>\n    <div className=\"straight5-header-rulesSection\">\n      <RulesSectionWrapper configService={this.props.configService}></RulesSectionWrapper>\n    </div>\n  </div>\n  )}\n}\n\nexport default HeaderSection;\n","import React, { Component } from 'react';\nimport { Slider } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\n\nexport const PrettySlider = withStyles({\nroot: {\n  color: '#52af77',\n  height: 8,\n},\nthumb: {\n  height: 24,\n  width: 24,\n  backgroundColor: '#fff',\n  border: '2px solid currentColor',\n  marginTop: -8,\n  marginLeft: -12,\n  '&:focus, &:hover, &$active': {\n    boxShadow: 'inherit',\n  },\n},\nactive: {},\nvalueLabel: {\n  left: 'calc(-50% + 4px)',\n},\nmarkLabel: {\n  color: 'white'\n},\ntrack: {\n  height: 8,\n  borderRadius: 4,\n},\nrail: {\n  height: 8,\n  borderRadius: 4\n},\n})(Slider);\n\nexport class Straight5Slider extends Component {\n  constructor(props) {\n    super(props);\n    this.TableCanvas = React.createRef();\n    this.render.bind(this);\n  }\n  render = () => {\n    return (\n\n      <PrettySlider valueLabelDisplay=\"on\" aria-label=\"pretty slider\"\n        min={this.props.min} step={this.props.step} max={this.props.max} value={this.props.value}\n        marks={this.props.marks}\n        onChange={this.props.onChange}\n        disabled={this.props.disabled}\n        />\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport './GameConfigurationSection.css';\nimport Typography from '@material-ui/core/Typography';\nimport {Straight5Slider} from '../../generic/Slider.js'\n\n// TODO figure out a way to test\nclass GameConfigurationSection extends Component {\n  constructor(props) {\n    super(props);\n    this.TableCanvas = React.createRef();\n    this.render.bind(this);\n    this.configService = this.props.configService;\n    this.onCardRangeChanged = this.onCardRangeChanged.bind(this);\n    this.onRepeatChanged = this.onRepeatChanged.bind(this);\n    this.onPlayerNumberChanged = this.onPlayerNumberChanged.bind(this);\n    this.onDiscardNumberChanged = this.onDiscardNumberChanged.bind(this);\n    this.onJokerNumberChanged = this.onJokerNumberChanged.bind(this);\n    this.onNumberOfTokensNeededToWinChanged = this.onNumberOfTokensNeededToWinChanged.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n\n  marks1 = [\n    {\n      value: 5,\n      label: '5',\n    },\n    {\n      value: 6,\n      label: '',\n    },\n    {\n      value: 7,\n      label: '',\n    },\n    {\n      value: 8,\n      label: '',\n    },\n    {\n      value: 9,\n      label: '9',\n    },\n    {\n      value: 10,\n      label: '',\n    },\n    {\n      value: 11,\n      label: '',\n    },\n    {\n      value: 12,\n      label: '',\n    },\n    {\n      value: 13,\n      label: '13',\n    },\n  ];\n\n  marks2 = [\n    {\n      value: 3,\n      label: '3',\n    },\n    {\n      value: 4,\n      label: '',\n    },\n    {\n      value: 5,\n      label: '',\n    },\n    {\n      value: 6,\n      label: '6',\n    },\n    {\n      value: 7,\n      label: '',\n    },\n    {\n      value: 8,\n      label: '',\n    },\n    {\n      value: 9,\n      label: '9',\n    }\n  ];\n\n  onCardRangeChanged(event, value)  {\n    this.configService.setMaxNumberInDeck(value);\n    this.forceUpdate();\n  }\n\n  onRepeatChanged(event, value)  {\n    this.configService.setRepeatsPerNumber(value);\n    this.forceUpdate();\n  }\n\n  onPlayerNumberChanged(event, value)  {\n    this.configService.setNumberOfPlayers(value);\n    this.forceUpdate();\n  }\n\n  onDiscardNumberChanged(event, value)  {\n    this.configService.setNumberOfDiscards(value);\n    this.forceUpdate();\n  }\n\n  onJokerNumberChanged(event, value)  {\n    this.configService.setNumberOfJokers(value);\n    this.forceUpdate();\n  }\n  onNumberOfTokensNeededToWinChanged(event, value)  {\n    this.configService.setNumberOfTokensNeededToWin(value);\n    this.forceUpdate();\n  }\n\n  reset() {\n    this.configService.reset();\n    this.forceUpdate()\n  }\n  render = () => {\n    return (\n      <div className=\"configuration-container\">\n        <Typography id=\"discrete-card-range\" gutterBottom>\n          Card Range\n        </Typography>\n        <Straight5Slider min={5} step={1} max={13} value={this.configService.getMaxNumberInDeck()}\n        marks={this.marks1}\n        onChange={this.onCardRangeChanged}/>\n\n        <Typography id=\"discrete-repeats\" gutterBottom>\n          Number of repeats\n        </Typography>\n        <Straight5Slider min={3} step={1} max={9} value={this.configService.getRepeatsPerNumber()}\n          marks={this.marks2}\n          onChange={this.onRepeatChanged}\n          />\n\n        <Typography id=\"discrete-num-players\" gutterBottom>\n          Number of Players\n        </Typography>\n        <Straight5Slider min={2} step={1} max={5} value={this.configService.getNumberOfPlayers()}\n          disabled={true}\n          marks\n          onChange={this.onPlayerNumberChanged}\n          />\n\n        <Typography id=\"discrete-num-discard-piles\" gutterBottom>\n          Number of Discard Piles\n        </Typography>\n        <Straight5Slider min={1} step={1} max={4} value={this.configService.getNumberOfDiscards()}\n          marks\n          onChange={this.onDiscardNumberChanged}\n          />\n\n        <Typography id=\"discrete-num-jokers\" gutterBottom>\n          Number of Jokers\n        </Typography>\n        <Straight5Slider min={0} step={1} max={9} value={this.configService.getNumberOfJokers()}\n          marks\n          onChange={this.onJokerNumberChanged}\n          />\n\n        <Typography id=\"discrete-num-tokens-to-win\" gutterBottom>\n          Number of Tokens Needed to win\n        </Typography>\n        <Straight5Slider min={1} step={1} max={5} value={this.configService.getNumberOfTokensNeededToWin()}\n          marks\n          onChange={this.onNumberOfTokensNeededToWinChanged}\n          />\n        <div className=\"reset-configuration-button\">\n            <button onClick={this.reset}>Reset</button>\n          </div>\n      </div>\n    )\n  }\n}\n\nexport default GameConfigurationSection;\n","import React, { Component } from 'react';\nimport './StartSection.css';\nimport GameConfigurationSection from './GameConfigurationSection.js';\nimport {customStyles} from '../../../Styles.js'\nimport Modal from 'react-modal';\n\nclass StartSection extends Component {\n  constructor(props) {\n    super(props);\n    this.TableCanvas = React.createRef();\n    this.state = {\n      modalIsOpen: false\n    }\n    this.render.bind(this);\n  }\n\n  render = () => {\n    const openModal = () => {\n      this.setState({modalIsOpen: true})\n    }\n\n    const closeModal = () => {\n      this.setState({modalIsOpen: false})\n    }\n    return (\n      <div className=\"start-section-container\">\n        <div>\n          <button data-testid=\"start-section-hide-show-configuration-button\" onClick={openModal}>Show Configuration</button>\n        </div>\n        <Modal\n          isOpen={this.state.modalIsOpen}\n          onRequestClose={closeModal}\n          style={customStyles}\n          ariaHideApp={false}>\n          <div className=\"configuration-modal-container\">\n            <h2 className=\"mb-4\">Configuration Settings</h2>\n            <div className=\"start-section-slider-container\" data-testid=\"start-section-slider-container\">\n              <GameConfigurationSection configService={this.props.configService}/>\n            </div>\n            <div className=\"close-modal-container\">\n              <div className=\"close-modal-content\">\n                <button className=\"open-modal-button\" data-testid=\"close-modal-button\" onClick={this.props.startNewGameCallback}>Start New Game</button>\n              </div>\n            </div>\n          </div>\n        </Modal>\n        <div className=\"mb-4 mt-2\">\n          <button className=\"small-width-button\" data-testid=\"startButton\" onClick={this.props.startNewGameCallback}>Start New Game</button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default StartSection;\n","import React, { Component } from 'react';\nimport './NewstickerSection.css';\nconst { getPlayerTextForMoveState } = require('../../../Utils.js')\n\nclass NewstickerSection extends Component {\n  constructor(props) {\n    super(props);\n    this.TableCanvas = React.createRef();\n    this.render.bind(this);\n  }\n\n  render = () => {\n    return (\n      <React.Fragment>\n      <div className=\"newsTicker\" data-testid=\"newsticker\">\n        <div className=\"newsTickerTriangleLeft\"/>\n        <div className=\"newsTickerMain\">\n          {getPlayerTextForMoveState(this.props.moveState, this.props.gameState.getSwapCardIndex() + 1)}\n        </div>\n        <div className=\"newsTickerTriangleRight\"/>\n      </div>\n      </React.Fragment>\n  )}\n}\n\nexport default NewstickerSection;\n","import React, { Component } from 'react';\nimport Hand from './game/Hand.js';\nimport DeckAndDiscardSection from './game/DeckAndDiscardSection.js';\nimport FooterSection from './game/player-action/FooterSection.js';\nimport HeaderSection from './HeaderSection.js';\nimport StartSection from './game/start/StartSection.js';\nimport NewstickerSection from './game/player-action/NewstickerSection.js';\nimport './Straight5.css';\nimport {changeTurnStyles} from '../Styles.js'\nimport Modal from 'react-modal';\n\nconst {ActionType, AppMode, DrawType, MoveState, TokenType} = require('../model/Enums.js')\nconst classNames = require('classnames');\n\n// TODO undo move\n// TODO keep track of number of moves etc\n// TODO only highlight options that can be clicked when claiming a token\nclass Straight5 extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      AppMode: AppMode.START_STATE,\n      MoveState: MoveState.START_STATE,\n    };\n    this.playerService = props.playerService;\n    this.gameService = props.gameService;\n    this.gameState = props.gameState;\n    this.configService = props.configService;\n    this.tokenService = props.tokenService;\n  }\n\n  StartNewGame = () => {\n    this.playerService.resetPlayers();\n    this.gameService.startNewGame();\n    this.setState({\n      MoveState: MoveState.START_STATE,\n      AppMode: AppMode.GAME\n    });\n  }\n\n\n  handleDiscard(index, action) {\n    this.gameService.discardCard(index);\n    this.EndMove();\n  }\n  //TODO animation\n  deckAndDiscardPressed = (type, index) => {\n    if (this.state.MoveState !== MoveState.START_STATE) {\n      if (this.state.MoveState === MoveState.DISCARD_CHOSEN &&\n           type === DrawType.DISCARD) {\n             this.handleDiscard(index);\n      }\n      return;\n    }\n    if (type === DrawType.DECK) {\n      this.gameService.drawCardFromDeck();\n    } else if (type === DrawType.DISCARD) {\n\n      this.gameService.drawCardFromDiscard(index);\n    } else {\n      console.error('draw card failed', type);\n    }\n    this.setState({\n      MoveState: MoveState.CARD_DRAWN\n    });\n\n  }\n\n  ReplaceCard = index => {\n    this.gameService.replaceCard(index);\n  }\n\n  TurnCardFaceUp = index => {\n    if (!this.gameService.turnCardFaceUp(index)) {\n      return;\n    }\n    if (this.state.MoveState === MoveState.TURN_FACE_UP_IN_PROGRESS || this.gameService.activePlayerHasAllCardsFaceUp()) {\n      return this.setDiscardChosenState();\n    }\n    this.setState({\n      MoveState: MoveState.TURN_FACE_UP_IN_PROGRESS,\n    });\n  }\n\n  SwapCards = index => {\n    if (this.gameService.swapIsValid(index)) {\n      this.gameService.swapCards(index);\n      return this.setDiscardChosenState();\n    }\n    this.gameState.setSwapCardIndex(index);\n    this.setState({\n      MoveState: MoveState.SWAP_IN_PROGRESS\n    })\n  }\n\n  EndMove = () => {\n    if (this.tokenService.playerCanClaimToken(this.playerService.getPlayers()[this.gameState.getActivePlayerIndex()])) {\n      this.setState({MoveState: MoveState.PRE_END_STATE});\n      return;\n    }\n  this.ChangeTurn();\n\n  }\n\n  checkIfWinner() {\n    if (this.gameService.getActivePlayersTokens().length >= this.configService.getNumberOfTokensNeededToWin()) {\n      this.setState({\n        AppMode: AppMode.PLAYER_WIN\n      });\n      return true;\n    }\n    return false;\n  }\n\n  ClaimTokenCardPress = index => {\n    if (this.tokenService.isValidIndexForToken(this.gameService.getActivePlayersDeck(), this.gameState.getTokenToClaim(), index)) {\n      this.gameService.claimToken(index);\n      if (!this.checkIfWinner()) {\n      return this.ChangeTurn();\n      }\n    } else {\n      console.error('invalid index :(')\n    }\n  }\n\n  ChangeTurn = () => {\n    this.gameService.nextPlayer();\n    return this.setState({\n      MoveState: MoveState.CHANGE_TURN_STATE\n    });\n  }\n\n  setDiscardChosenState() {\n    const index = this.gameService.discardPileHas0Cards();\n    if (index >= 0) {\n      this.handleDiscard(index);\n      return\n    }\n    this.setState({MoveState: MoveState.DISCARD_CHOSEN});\n  }\n\n  handleActionButtonPressed = (action, token) => {\n    if (action === ActionType.PASS) {\n      if (this.state.MoveState === MoveState.CARD_DRAWN) {\n        return this.setDiscardChosenState();\n      }\n      return this.EndMove();\n    } else if (action === ActionType.SWAP) {\n      return this.setState({MoveState: MoveState.SWAP_CHOSEN});\n    } else if (action ===  ActionType.TURN_FACE_UP) {\n      return this.setState({MoveState: MoveState.TURN_FACE_UP_CHOSEN});\n    }\n    if (action === ActionType.CHANGE_TURN) {\n      return this.ChangeTurn()\n    }\n    if (action === ActionType.CLAIM_TOKEN) {\n      this.gameState.setTokenToClaim(token);\n\n      const indeces = this.tokenService.getAllIndecesForToken(this.gameService.getActivePlayersDeck(), token);\n      if (indeces.length === 1 || token === TokenType.FULL_HOUSE || token === TokenType.THREE_OF_A_KIND) {\n        this.gameService.claimToken(indeces[0][0]); //TODO TEST\n        if (!this.checkIfWinner()) {\n          return this.ChangeTurn();\n        }\n      }\n      // TODO Less autoclaim if multiple options for three of a\n      this.setState({\n        MoveState: MoveState.CLAIMING_TOKEN\n      });\n    }\n  }\n\n  handlePlayerCardPressed = (player, index)  =>  {\n    if (player !== this.gameState.getActivePlayerIndex()) {\n      console.log('card from wrong player clicked')\n      return;\n    }\n    switch (this.state.MoveState) {\n      case MoveState.CARD_DRAWN:\n        this.ReplaceCard(index);\n        this.setDiscardChosenState(ActionType.REPLACE_CARD);\n        return\n      case MoveState.TURN_FACE_UP_CHOSEN:\n      case MoveState.TURN_FACE_UP_IN_PROGRESS:\n        this.TurnCardFaceUp(index);\n        break\n      case MoveState.SWAP_CHOSEN:\n      case MoveState.SWAP_IN_PROGRESS:\n        this.SwapCards(index)\n        break\n      case MoveState.CLAIMING_TOKEN:\n        this.ClaimTokenCardPress(index);\n        break;\n      default:\n        console.log('No action for this status', this.state.MoveState)\n    }\n  }\n  // TODO SHOW ACTIVE PLAYER\n  // TODO ADD AI\n  // TODO state service instead of this.state -- this is on wip-stateService but doesn't work because to update the UI you need to update the state\n\n  render = () => {\n    const closeModal = () => {\n      this.setState({MoveState: MoveState.START_STATE})\n    }\n\n    return (\n      <React.Fragment>\n  <div className={classNames('CardTable', {'CardTableGame': this.state.AppMode === AppMode.GAME})}>\n\n    <HeaderSection configService={this.configService}></HeaderSection>\n    {this.state.AppMode === AppMode.START_STATE &&\n    <React.Fragment>\n      <StartSection startNewGameCallback={this.StartNewGame} configService={this.configService}/>\n    </React.Fragment>}\n\n    {this.state.AppMode  === AppMode.GAME &&\n    <React.Fragment>\n      <Hand gameService={this.gameService} configService={this.configService} moveState={this.state.MoveState} playerService={this.playerService} id={0} cardPressedCallback={this.handlePlayerCardPressed} />\n      <DeckAndDiscardSection gameService={this.gameService} drawCallback={this.deckAndDiscardPressed} moveState={this.state.MoveState}/>\n      <Hand gameService={this.gameService} configService={this.configService} moveState={this.state.MoveState} playerService={this.playerService} id={1} cardPressedCallback={this.handlePlayerCardPressed} />\n    </React.Fragment>}\n\n    {this.state.AppMode === AppMode.PLAYER_WIN &&\n    <React.Fragment>\n        <div className=\"mb-4\" data-testid=\"win-header\">\n        Congratulations to Player {this.gameState.getActivePlayerIndex() + 1}\n        <StartSection startNewGameCallback={this.StartNewGame} configService={this.configService}/>\n        </div>\n    </React.Fragment>}\n  </div>\n  {this.state.AppMode === AppMode.GAME &&\n  <React.Fragment>\n    {this.state.AppMode  === AppMode.GAME && <NewstickerSection gameState={this.gameState} moveState={this.state.MoveState}/>}\n    {this.state.AppMode  === AppMode.GAME && <FooterSection gameService={this.gameService} moveState={this.state.MoveState} tokenService={this.tokenService} buttonPressedCallback={this.handleActionButtonPressed} />}\n  </React.Fragment>}\n  <Modal\n          isOpen={this.state.MoveState === MoveState.CHANGE_TURN_STATE}\n          onRequestClose={closeModal}\n          style={changeTurnStyles}\n          ariaHideApp={false}>\n          <h1 className=\"change-turn-modal-title\" data-testid=\"change-turn-modal-title\"> Player {this.gameState.getActivePlayerIndex() + 1} Turn\n          </h1>\n          <button data-testid=\"change-turn-modal-title-button\" hidden onClick={closeModal}>Hide</button>\n        </Modal>\n  </React.Fragment>\n  )}\n}\n\nexport default Straight5;\n","import React from 'react';\nimport './App.css';\nimport Straight5 from './components/Straight5.js';\nconst { GameState } = require('./model/GameState.js')\nconst { GameService } = require('./service/GameService.js')\nconst { PlayerService } = require('./service/PlayerService.js')\nconst { ConfigService } = require('./service/ConfigService.js')\nconst { TokenService } = require('./service/TokenService.js')\n\nfunction App() {\n  const configService = new ConfigService();\n  configService.reset();\n  const playerService = new PlayerService(configService)\n  const tokenService = new TokenService();\n  const gameState = new GameState();\n  const gameService = new GameService(playerService, tokenService, configService, gameState);\n  return (\n    <div className=\"App\">\n      <header>\n      <div className=\"Container\">\n\n        <Straight5 playerService={playerService} gameService={gameService} configService={configService} tokenService={tokenService} gameState={gameState}></Straight5>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
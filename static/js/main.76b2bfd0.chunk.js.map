{"version":3,"sources":["model/Enums.js","Utils.js","model/GameState.js","service/GameService.js","service/PlayerService.js","model/Player.js","service/ConfigService.js","service/TokenService.js","components/game/Hand.js","components/game/DeckAndDiscardSection.js","components/game/FooterSection.js","components/RulesSection.js","components/RulesSectionWrapper.js","components/HeaderSection.js","components/generic/Slider.js","components/game/start/GameConfigurationSection.js","components/game/start/StartSection.js","components/game/NewstickerSection.js","components/Straight5.js","App.js","reportWebVitals.js","index.js"],"names":["ActionType","PASS","SWAP","CHANGE_TURN","TURN_FACE_UP","CLAIM_TOKEN","REPLACE_CARD","AppMode","START_STATE","GAME","PLAYER_WIN","DrawType","DECK","DISCARD","MoveState","CARD_DRAWN","DISCARD_CHOSEN","TURN_FACE_UP_CHOSEN","TURN_FACE_UP_IN_PROGRESS","SWAP_CHOSEN","SWAP_IN_PROGRESS","PRE_END_STATE","CLAIMING_TOKEN","TokenType","THREE_IN_A_ROW","FOUR_IN_A_ROW","FIVE_IN_A_ROW","THREE_OF_A_KIND","FULL_HOUSE","CardValues","WILD","require","shuffleArray","array","i","length","j","Math","floor","random","getPlayerTextForMoveState","moveState","cardIndex","GameState","this","deck","discard","swapCardIndex","activeCard","activePlayerIndex","tokenToClaim","GameService","playerService","tokenService","configService","gameState","repeats","getRepeatsPerNumber","max","getMaxNumberInDeck","jokers","getNumberOfJokers","getGameState","setDeck","getDeck","push","value","seen","getDiscard","splice","card","pop","setActiveCard","getTopCardFromDeck","index","console","error","getNumberOfDiscards","setDiscard","getSwapCardIndex","playerCards","getActivePlayersDeck","temp","setSwapCardIndex","getActiveCard","discardIndex","createDeck","dealCardsToPlayers","initializeDiscard","setActivePlayerIndex","setTokenToClaim","getActivePlayerIndex","getNumberOfPlayers","hand","getTokenToClaim","indeces","getAllIndecesForSets","getActivePlayersTokens","playerDeck","getPlayers","getTokens","Player","PlayerService","players","resetPlayers","tokens","ConfigService","maxNumberInDeck","repeatsPerNumber","numberOfPlayers","numberOfDiscards","numberOfJokers","numberOfTokensNeededToWin","setMaxNumberInDeck","setRepeatsPerNumber","setNumberOfPlayers","setNumberOfDiscards","setNumberOfJokers","setNumberOfTokensNeededToWin","TokenService","player","canClaimToken","token","existing_tokens","includes","getAllIndecesForStraight","isFullHouse","possibleIndeces","straight_length","count_options_to_make_straight_length","possible_combinations","prev_value","set_length","returnArray","map","wildMap","Object","keys","key","concat","numFirstDigit","numSecondDigit","classNames","Hand","props","render","className","name","id","getNumberOfTokensNeededToWin","cardCanBePressed","onClick","cardPressedCallback","xmlns","width","height","viewBox","d","TableCanvas","React","createRef","bind","gameService","Component","DeckAndDiscardSection","highlightDiscard","drawCallback","getTopDiscardValue","highlightDeck","FooterSection","ShowCardActionsSection","showActiveCard","showCardActionButtons","ShowTurnUpAction","activePlayerHasAllCardsFaceUp","ShowEndActions","ShowToken","showPassActions","Fragment","buttonPressedCallback","RulesSection","maxTokens","RulesSectionWrapper","customStyles","content","top","left","right","bottom","marginRight","transform","maxWidth","maxHeight","state","closeModal","setState","isOpen","modelIsOpen","onRequestClose","style","ariaHideApp","HeaderSection","PrettySlider","withStyles","root","color","thumb","backgroundColor","border","marginTop","marginLeft","boxShadow","active","valueLabel","markLabel","track","borderRadius","rail","Slider","Straight5Slider","valueLabelDisplay","min","step","marks","onChange","disabled","GameConfigurationSection","marks1","label","marks2","Typography","gutterBottom","onCardRangeChanged","onRepeatChanged","onPlayerNumberChanged","onDiscardNumberChanged","onJokerNumberChanged","onNumberOfTokensNeededToWinChanged","reset","event","forceUpdate","StartSection","showConfiguration","startNewGameCallback","NewstickerSection","Straight5","StartNewGame","startNewGame","deckAndDiscardPressed","type","drawCardFromDeck","drawCardFromDiscard","handleDiscard","ReplaceCard","replaceCard","TurnCardFaceUp","turnCardFaceUp","setDiscardChosenState","SwapCards","swapIsValid","swapCards","EndMove","playerCanClaimToken","ChangeTurn","ClaimTokenCardPress","isValidIndexForToken","claimToken","checkIfWinner","nextPlayer","handleActionButtonPressed","action","getAllIndecesForToken","handlePlayerCardPressed","log","discardCard","discardPileHas0Cards","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.76b2bfd0.chunk.js","sourcesContent":["export const ActionType = {\n  PASS: 'PASS',\n  SWAP: 'SWAP',\n  CHANGE_TURN: 'CHANGE_TURN',\n  TURN_FACE_UP: 'TURN_FACE_UP',\n  CLAIM_TOKEN: 'CLAIM_TOKEN',\n  REPLACE_CARD: 'REPLACE_CARD'\n}\n\nexport const AppMode = {\n  START_STATE: 'START_STATE',\n  GAME: 'GAME',\n  PLAYER_WIN: 'PLAYER_WIN'\n}\n\nexport const DrawType = {\n  DECK: 'DECK',\n  DISCARD: 'DISCARD'\n}\n\nexport const MoveState = {\n  START_STATE:  'START_STATE',\n  CARD_DRAWN: 'CARD_DRAWN',\n  DISCARD_CHOSEN: 'DISCARD_CHOSEN',\n  TURN_FACE_UP_CHOSEN: 'TURN_FACE_UP_CHOSEN',\n  TURN_FACE_UP_IN_PROGRESS: 'TURN_FACE_UP_IN_PROGRESS',\n  SWAP_CHOSEN: 'SWAP_CHOSEN',\n  SWAP_IN_PROGRESS: 'SWAP_IN_PROGRESS',\n  PRE_END_STATE: 'PRE_END_STATE',\n  CLAIMING_TOKEN: 'CLAIMING_TOKEN'\n}\n\nexport const TokenType = {\n  THREE_IN_A_ROW: 'THREE_IN_A_ROW',\n  FOUR_IN_A_ROW: 'FOUR_IN_A_ROW',\n  FIVE_IN_A_ROW: 'FIVE_IN_A_ROW',\n  THREE_OF_A_KIND: 'THREE_OF_A_KIND',\n  FULL_HOUSE: 'FULL_HOUSE'\n}\n\nexport const CardValues = {\n  WILD: 'WILD'\n}\n","const {MoveState} = require('./model/Enums.js')\n\nfunction shuffleArray(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n}\n\nfunction getPlayerTextForMoveState(moveState, cardIndex) {\n  switch (moveState) {\n    case MoveState.START_STATE:\n      return 'Please draw a card from Deck or Discard'\n    case MoveState.CARD_DRAWN:\n      return 'Replace card in your hand or choose a discard option';\n    case MoveState.TURN_FACE_UP_CHOSEN:\n      return 'Select the first card to turn face up'\n    case MoveState.TURN_FACE_UP_IN_PROGRESS:\n      return 'Select the second card to turn face up or pass'\n    case MoveState.SWAP_CHOSEN:\n      return 'Select the first card you\\'d like  to swap'\n    case MoveState.SWAP_IN_PROGRESS:\n      return 'Selected ' + cardIndex + '. Please select a second card to swap'\n    case MoveState.PRE_END_STATE:\n      return 'Please select a token to claim or pass'\n    case MoveState.CLAIMING_TOKEN:\n      return 'Please select the first card of your run';\n    case MoveState.DISCARD_CHOSEN:\n      return 'Please select the discard pile you would like to discard the card to';\n    default:\n      return 'UNKONWN STATE DETECTED'\n  }\n}\n\nexport {shuffleArray, getPlayerTextForMoveState};\n","class GameState {\n\n  constructor() {\n    this.deck = [];\n    this.discard = [[]];\n    this.swapCardIndex = -1;\n    this.activeCard = {};\n    this.activePlayerIndex = 0;\n    this.tokenToClaim = '';\n  }\n\n  getDeck() {\n    return this.deck;\n  }\n\n  getDiscard() {\n    return this.discard;\n  }\n\n  getSwapCardIndex() {\n    return this.swapCardIndex;\n  }\n\n  getActiveCard() {\n    return this.activeCard;\n  }\n\n  getActivePlayerIndex() {\n    return this.activePlayerIndex;\n  }\n\n  getTokenToClaim() {\n    return this.tokenToClaim;\n  }\n\n  setDeck(deck) {\n    this.deck = deck;\n  }\n\n  setDiscard(discard) {\n    this.discard = discard;\n  }\n\n  setSwapCardIndex(swapCardIndex) {\n    this.swapCardIndex = swapCardIndex;\n  }\n\n  setActiveCard(activeCard) {\n    this.activeCard = activeCard;\n  }\n\n  setActivePlayerIndex(activePlayerIndex) {\n    this.activePlayerIndex = activePlayerIndex;\n  }\n\n  setTokenToClaim(tokenToClaim) {\n    this.tokenToClaim = tokenToClaim;\n  }\n}\n\nexport {GameState};\n","const { shuffleArray } = require('../Utils.js')\nconst { CardValues, TokenType } = require('../model/Enums.js')\nclass GameService {\n\n  constructor(playerService, tokenService, configService, gameState) {\n      this.playerService = playerService;\n      this.tokenService = tokenService;\n      this.configService = configService;\n      this.gameState =  gameState;\n  }\n\n  createDeck() {\n    const repeats = this.configService.getRepeatsPerNumber();\n    const max = this.configService.getMaxNumberInDeck();\n    const jokers = this.configService.getNumberOfJokers();\n    this.getGameState().setDeck([]);\n    for (let i = 0; i < repeats; i++) {\n      for (let j = 0; j < max; j++) {\n        this.getGameState().getDeck().push({value: j+1, seen: false})\n      }\n    }\n    for (let i = 0; i < jokers; i++) {\n      this.getGameState().getDeck().push({value: CardValues.WILD, seen:false})\n    }\n    shuffleArray(this.getGameState().getDeck());\n  }\n\n  getTopCardFromDeck() {\n    if (this.getGameState().getDeck().length === 0) {\n      this.getGameState().setDeck([]);\n      for(let i = 0; i < this.getGameState().getDiscard().length; i ++) {\n        this.getGameState().getDeck().push(...this.getGameState().getDiscard()[i].splice(0, this.getGameState().getDiscard()[i].length - 1));\n      }\n      shuffleArray(this.getGameState().getDeck());\n    }\n    const card = this.getGameState().getDeck().pop();\n    card.seen = false;\n    return card;\n  }\n\n  drawCardFromDeck() {\n    this.getGameState().setActiveCard(this.getTopCardFromDeck());\n  }\n\n  drawCardFromDiscard(index) {\n    if (this.getGameState().getDiscard()[index].length === 0) {\n      console.error('SOMETHING went wrong, discard length = 0')\n    }\n    this.getGameState().setActiveCard(this.getGameState().getDiscard()[index].pop());\n  }\n\n  discardPileHas0Cards() {\n    for (let i = 0; i < this.configService.getNumberOfDiscards(); i ++) {\n      if (this.getGameState().getDiscard()[i].length === 0) {\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  initializeDiscard() {\n    this.getGameState().setDiscard([]);\n    for (let i = 0; i < this.configService.getNumberOfDiscards(); i ++) {\n      this.getGameState().getDiscard().push([]);\n      this.getGameState().getDiscard()[i].push(this.getGameState().getDeck().pop());\n    }\n  }\n\n  swapIsValid(index) {\n    return this.getGameState().getSwapCardIndex() > 0 && this.getGameState().getSwapCardIndex() !== index;\n  }\n\n  swapCards(index) {\n    const playerCards = this.getActivePlayersDeck();\n    const temp = playerCards[index];\n    playerCards[index] = playerCards[this.getGameState().getSwapCardIndex()];\n    playerCards[this.getGameState().getSwapCardIndex()] = temp;\n    this.getGameState().setSwapCardIndex(-1);\n  }\n\n  replaceCard(index) {\n    const temp = this.getActivePlayersDeck()[index];\n    this.getGameState().getActiveCard().seen = true;\n    this.getActivePlayersDeck()[index] = this.getGameState().getActiveCard();\n    this.getGameState().setActiveCard(temp);\n  }\n\n  discardCard(discardIndex) {\n    this.getGameState().getDiscard()[discardIndex].push(this.getGameState().getActiveCard());\n    this.getGameState().setActiveCard({});\n  }\n\n  turnCardFaceUp(index) {\n    const card = this.getActivePlayersDeck()[index];\n    if (this.getActivePlayersDeck()[index].seen === true) {\n      return false;\n    }\n    card.seen = true;\n    return true;\n  }\n\n  startNewGame() {\n    this.createDeck();\n    this.playerService.dealCardsToPlayers(this.getGameState().getDeck());\n    this.initializeDiscard();\n    this.getGameState().setSwapCardIndex(-1);\n    this.getGameState().setActiveCard({});\n    this.getGameState().setActivePlayerIndex(0);\n    this.getGameState().setTokenToClaim('');\n  }\n\n  nextPlayer() {\n    const activePlayerIndex = this.getGameState().getActivePlayerIndex();\n    this.getGameState().setActivePlayerIndex(activePlayerIndex + 1 === this.configService.getNumberOfPlayers() ? 0 : activePlayerIndex + 1);\n  }\n\n//TODO call token token service directly from above?\n  claimToken(index) {\n    //TODO come back to this to pick discard\n    //TODO come back to this to pick top card that goes to discard\n    const hand = this.getActivePlayersDeck();\n    switch (this.getGameState().getTokenToClaim()) {\n      case TokenType.FIVE_IN_A_ROW:\n      case TokenType.FULL_HOUSE:\n        for (let i = 0; i < hand.length; i ++) {\n          this.getGameState().getDiscard()[0].push(hand[i]);\n          hand[i] = this.getTopCardFromDeck();\n        }\n        break;\n      case TokenType.THREE_OF_A_KIND:\n        let indeces = this.tokenService.getAllIndecesForSets(hand, 3)[0];\n        for (let i = 0; i < 3; i++) {\n            this.getGameState().getDiscard()[0].push(hand[indeces[i]]);\n            hand[indeces[i]] = this.getTopCardFromDeck();\n          }\n        break;\n      case TokenType.THREE_IN_A_ROW:\n      for (let i = index; i < index + 3; i++) {\n        this.getGameState().getDiscard()[0].push(hand[i]);\n        hand[i] = this.getTopCardFromDeck();\n        hand[i].seen = false;\n      }\n        break;\n      case TokenType.FOUR_IN_A_ROW:\n      for (let i = index; i < index + 4; i++) {\n        this.getGameState().getDiscard()[0].push(hand[i]);\n        hand[i] = this.getTopCardFromDeck();\n      }\n        break;\n      default:\n        console.error('something went wrong');\n        return\n    }\n    this.getActivePlayersTokens().push(this.getGameState().getTokenToClaim());\n    this.getGameState().setTokenToClaim('');\n  }\n\n  activePlayerHasAllCardsFaceUp() {\n    const playerDeck = this.getActivePlayersDeck()\n    for (let i = 0; i < playerDeck.length; i++) {\n      if (!playerDeck[i].seen) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  getGameState()  {\n    return this.gameState;\n  }\n\n  setGameState(gameState) {\n    this.gameState = gameState;\n  }\n\n  getActivePlayersTokens() {\n    return this.playerService.getPlayers()[this.getGameState().getActivePlayerIndex()].getTokens();\n  }\n\n  getActivePlayersDeck() {\n    return this.playerService.getPlayers()[this.getGameState().getActivePlayerIndex()].getDeck();\n  }\n}\n\nexport {GameService};\n","const {Player} = require('../model/Player.js');\n\nclass PlayerService {\n\n  constructor(configService) {\n    this.configService = configService;\n    this.players = [];\n    this.resetPlayers();\n  }\n\n  resetPlayers() {\n    this.players = [];\n    for (let i = 0; i < this.configService.getNumberOfPlayers(); i ++) {\n      this.players.push(new Player([], []));\n    }\n  }\n\n  dealCardsToPlayers(deck) {\n    for (let j = 0; j < 5; j++) {\n      for (let i = 0; i < this.getPlayers().length; i ++) {\n        this.players[i].getDeck().push(deck.pop());\n      }\n    }\n  }\n\n  getPlayers() {\n    return this.players;\n  }\n\n  setPlayers(players) {\n    this.players = players;\n  }\n\n}\n\nexport {PlayerService};\n","class Player {\n\n  constructor(deck, tokens) {\n      this.deck = deck;\n      this.tokens = tokens;\n  }\n\n  getDeck() {\n    return this.deck;\n  }\n\n  getTokens() {\n    return this.tokens;\n  }\n\n  setDeck(deck) {\n    this.deck = deck;\n  }\n\n  setTokens(tokens) {\n    this.tokens = tokens;\n  }\n}\n\nexport {Player};\n","class ConfigService {\n\n  constructor(maxNumberInDeck, repeatsPerNumber, numberOfPlayers, numberOfDiscards, numberOfJokers, numberOfTokensNeededToWin) {\n    this.maxNumberInDeck = maxNumberInDeck;\n    this.repeatsPerNumber = repeatsPerNumber;\n    this.numberOfPlayers = numberOfPlayers;\n    this.numberOfDiscards = numberOfDiscards;\n    this.numberOfJokers = numberOfJokers;\n    this.numberOfTokensNeededToWin = numberOfTokensNeededToWin;\n  }\n\n  getMaxNumberInDeck() {\n    return this.maxNumberInDeck;\n  }\n\n  getRepeatsPerNumber() {\n    return this.repeatsPerNumber;\n  }\n\n  getNumberOfPlayers() {\n    return this.numberOfPlayers;\n  }\n\n  getNumberOfDiscards() {\n    return this.numberOfDiscards;\n  }\n\n  getNumberOfJokers() {\n    return this.numberOfJokers;\n  }\n\n  getNumberOfTokensNeededToWin() {\n    return this.numberOfTokensNeededToWin;\n  }\n\n  setMaxNumberInDeck(maxNumberInDeck) {\n    this.maxNumberInDeck = maxNumberInDeck;\n  }\n\n  setRepeatsPerNumber(repeatsPerNumber) {\n    this.repeatsPerNumber = repeatsPerNumber;\n  }\n\n  setNumberOfPlayers(numberOfPlayers) {\n    this.numberOfPlayers = numberOfPlayers;\n  }\n\n  setNumberOfDiscards(numberOfDiscards) {\n    this.numberOfDiscards = numberOfDiscards;\n  }\n\n  setNumberOfJokers(numberOfJokers) {\n    this.numberOfJokers = numberOfJokers;\n  }\n\n  setNumberOfTokensNeededToWin(numberOfTokensNeededToWin) {\n    this.numberOfTokensNeededToWin = numberOfTokensNeededToWin;\n  }\n\n  reset() {\n    this.setMaxNumberInDeck(9);\n    this.setRepeatsPerNumber(6);\n    this.setNumberOfPlayers(2);\n    this.setNumberOfDiscards(3);\n    this.setNumberOfJokers(2);\n    this.setNumberOfTokensNeededToWin(4);\n  }\n\n}\n\nexport {ConfigService};\n","const { TokenType,CardValues } = require('../model/Enums.js')\n\nclass TokenService {\n\n  playerCanClaimToken(player) {\n    return this.canClaimToken(TokenType.THREE_IN_A_ROW, player.getDeck(), player.getTokens()) ||\n    this.canClaimToken(TokenType.FOUR_IN_A_ROW, player.getDeck(), player.getTokens()) ||\n    this.canClaimToken(TokenType.FIVE_IN_A_ROW, player.getDeck(), player.getTokens()) ||\n    this.canClaimToken(TokenType.THREE_OF_A_KIND, player.getDeck(), player.getTokens()) ||\n    this.canClaimToken(TokenType.FULL_HOUSE, player.getDeck(), player.getTokens());\n  }\n\n  canClaimToken(token, deck, existing_tokens) {\n    //TODO does this logic belong here?\n    if (existing_tokens.includes(token)) {\n      return false;\n    }\n\n    switch (token) {\n      case TokenType.THREE_IN_A_ROW:\n        return this.getAllIndecesForStraight(deck, 3).length > 0\n      case TokenType.FOUR_IN_A_ROW:\n        return this.getAllIndecesForStraight(deck, 4).length > 0\n      case TokenType.FIVE_IN_A_ROW:\n        return this.getAllIndecesForStraight(deck, 5).length > 0\n      case TokenType.THREE_OF_A_KIND:\n        return this.getAllIndecesForSets(deck, 3).length > 0\n      case TokenType.FULL_HOUSE:\n        return this.isFullHouse(deck)\n      default:\n        return false;\n   }\n  }\n\n  //TODO Refactor away?\n  //TODO refactor for three/four/five in a row can be simpler. Maybe change on ENUM side\n  isValidIndexForToken(token, deck, index) {\n    let possibleIndeces = [];\n    switch (token) {\n      case TokenType.THREE_IN_A_ROW:\n        possibleIndeces = this.getAllIndecesForStraight(deck, 3);\n        for (let i = 0; i < possibleIndeces.length; i++) {\n          if(index === possibleIndeces[i][0]) {\n            return true\n          }\n        }\n        return false\n      case TokenType.FOUR_IN_A_ROW:\n        possibleIndeces = this.getAllIndecesForStraight(deck, 4);\n        for (let i = 0; i < possibleIndeces.length; i++) {\n          if(index === possibleIndeces[i][0]) {\n            return true\n          }\n        }\n        return false\n      case TokenType.FIVE_IN_A_ROW:\n        possibleIndeces = this.getAllIndecesForStraight(deck, 5);\n        for (let i = 0; i < possibleIndeces.length; i++) {\n          if(index === possibleIndeces[i][0]) {\n            return true\n          }\n        }\n        return false\n      case TokenType.THREE_OF_A_KIND:\n        possibleIndeces = this.getAllIndecesForSets(deck, 3);\n        for (let i = 0; i < possibleIndeces.length; i++) {\n          if(possibleIndeces[i].includes(index)) {\n            return true\n          }\n        }\n        return false\n      case TokenType.FULL_HOUSE:\n        return this.isFullHouse(deck)\n      default:\n        return false;\n   }\n  }\n\n  getAllIndecesForToken(deck, token) {\n    if (token === TokenType.THREE_IN_A_ROW) {\n      return this.getAllIndecesForStraight(deck, 3);\n    }\n    if (token === TokenType.FOUR_IN_A_ROW) {\n      return this.getAllIndecesForStraight(deck, 4);\n    }\n    if (token === TokenType.FIVE_IN_A_ROW) {\n      return this.getAllIndecesForStraight(deck, 5);\n    }\n    if (token === TokenType.THREE_OF_A_KIND) {\n      return this.getAllIndecesForSets(deck, 3);\n    }\n    if (token === TokenType.FULL_HOUSE) {\n      if (this.isFullHouse(deck))  {\n        return [[0,1,2,3,4]];\n      }\n    }\n    return []\n  }\n\n  getAllIndecesForStraight(deck, straight_length) {\n    //assumes hand size of 5. If 4 in a row 6 - 4 = 2, 1234 or 2345 so ✅\n    const count_options_to_make_straight_length = 6 - straight_length;\n    let possible_combinations = []\n    for (let i = 0; i < count_options_to_make_straight_length; i ++) {\n      let indeces = []\n      if (!deck[i].seen) {\n        continue\n      }\n      indeces.push(i)\n      let prev_value = deck[i].value;\n      if (deck[i].value === CardValues.WILD) {\n        prev_value = deck[i+1].value - 1\n      }\n\n      for (let j = i + 1; j < straight_length + i; j ++) {\n        if (!deck[j].seen) {\n          break;\n        }\n        if (deck[j].value === prev_value + 1 || deck[j].value === CardValues.WILD) {\n          indeces.push(j)\n          prev_value++;\n        }\n      }\n      if (indeces.length === straight_length) {\n        possible_combinations.push(indeces)\n      }\n    }\n    return possible_combinations;\n  }\n\n  getAllIndecesForSets(deck, set_length) {\n    let returnArray = []\n    let map = {};\n    for (let i = 0; i < 5; i++) {\n      if (!deck[i].seen) {\n        continue;\n      }\n      if (!map[deck[i].value]) {\n        map[deck[i].value] = []\n      }\n      map[deck[i].value].push(i)\n    }\n    let wildMap = [];\n    if (!!map[CardValues.WILD]) {\n      wildMap = map[CardValues.WILD];\n    }\n    for (let key of Object.keys(map)) {\n      if (key === CardValues.WILD) {\n        if (map[key].length>= set_length) {\n          returnArray.push(map[key]);\n        }\n      } else {\n        if (map[key].length + wildMap.length >= set_length) {\n          returnArray.push(map[key].concat(wildMap));\n        }\n      }\n    }\n    return returnArray\n  }\n\n  isFullHouse(deck) {\n    let map = {};\n    for (let i = 0; i < 5; i++) {\n      // with hand size 5, all cards need to be seen\n      if (!deck[i].seen) {\n        return false;\n      }\n      if (!map[deck[i].value]) {\n        map[deck[i].value] = []\n      }\n      // Full House has to be 2 cards + WILDS possible\n      if ((Object.keys(map).length > 3) || (Object.keys(map).length === 3 && !Object.keys(map).includes(CardValues.WILD))) {\n        return false;\n      }\n      map[deck[i].value].push(i)\n    }\n    // at this point only 3 cards, 2 values + wild.\n    if (!!map[CardValues.WILD]) {\n      // if two wilds, its FH no matter what (e.g. W W 1 1 2, or W W 1 1 1)\n      if (map[CardValues.WILD].length >= 2) {\n        return true;\n      }\n      // if one wilds, and two other numbers its FH no matter what (e.g. W 2 1 1 2, or W 2 1 1 1)\n      if (map[CardValues.WILD].length === 1 && Object.keys(map).length === 3) {\n        return true;\n      }\n      // case where there one wild but then four of another value e.g. W 1 1 1 1 ->\n      return false;\n    }\n    const numFirstDigit = map[Object.keys(map)[0]].length;\n    const numSecondDigit = map[Object.keys(map)[1]].length;\n    return (numFirstDigit === 3 && numSecondDigit === 2)  ||\n              (numFirstDigit === 2 && numSecondDigit === 3);\n  }\n}\n\nexport {TokenService};\n","import React, { Component } from 'react';\nimport './Hand.css';\nconst classNames = require('classnames');\nconst {MoveState} = require('../../model/Enums.js')\n\nclass Hand extends Component {\n  constructor(props) {\n    super(props);\n    this.TableCanvas = React.createRef();\n    this.render.bind(this);\n    this.deck = this.props.playerService.getPlayers()[this.props.id].getDeck();\n    this.tokens = this.props.playerService.getPlayers()[this.props.id].getTokens();\n  }\n\n   // TODO testing lol!\n  cardCanBePressed(card, index) {\n    return this.props.id === this.props.gameService.getGameState().getActivePlayerIndex()\n     && (\n       ([MoveState.TURN_FACE_UP_CHOSEN, MoveState.TURN_FACE_UP_IN_PROGRESS].includes(this.props.moveState) && !card.seen)\n           ||\n       (MoveState.SWAP_IN_PROGRESS === this.props.moveState && this.props.gameService.getGameState().getSwapCardIndex() !== index)\n           ||\n       [MoveState.CARD_DRAWN, MoveState.SWAP_CHOSEN,  MoveState.CLAIMING_TOKEN].includes(this.props.moveState));\n  }\n\n  render = () => {\n    return (\n      <div className=\"PlayerHand\" data-testid=\"hand\">\n        <div data-testid=\"player-header\" className=\"PlayerHeader\" name=\"Player1\">\n          <p className=\"playerTag\">Player {this.props.id+1}</p>\n        </div>\n        <div className=\"PlayerTokenHeader\">\n          <p className=\"playerTag\" data-testid='hand-player-tokens'>Tokens [{this.tokens.length}/{this.props.configService.getNumberOfTokensNeededToWin()}]</p>\n        </div>\n        {this.deck.map((card, index) => (\n          <div className=\"PlayerCardWrapper\" key={index}>\n          <div className={classNames('PlayerCard', {'PlayerCardBack': !card.seen}, {'PlayerCardFront': card.seen}, {\"PlayerCardIsActive\" : this.cardCanBePressed(card, index)})} data-testid='player-card' onClick={() => this.props.cardPressedCallback(this.props.id, index)}>\n            {card.seen ? card.value : <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M12 2c5.514 0 10 4.486 10 10s-4.486 10-10 10-10-4.486-10-10 4.486-10 10-10zm0-2c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm1.25 17c0 .69-.559 1.25-1.25 1.25-.689 0-1.25-.56-1.25-1.25s.561-1.25 1.25-1.25c.691 0 1.25.56 1.25 1.25zm1.393-9.998c-.608-.616-1.515-.955-2.551-.955-2.18 0-3.59 1.55-3.59 3.95h2.011c0-1.486.829-2.013 1.538-2.013.634 0 1.307.421 1.364 1.226.062.847-.39 1.277-.962 1.821-1.412 1.343-1.438 1.993-1.432 3.468h2.005c-.013-.664.03-1.203.935-2.178.677-.73 1.519-1.638 1.536-3.022.011-.924-.284-1.719-.854-2.297z\"/></svg> }\n          </div>\n          </div>\n        ))}\n        <div className='PlayerTokens'>\n        {this.tokens.map((token, index) => (\n          <div className='PlayerToken' data-testid='player-token' key={index}>\n            {token}\n          </div>\n        ))}\n        </div>\n      </div>\n  )}\n}\n\nexport default Hand;\n","import React, { Component } from 'react';\nimport './DeckAndDiscardSection.css';\nconst {DrawType, MoveState} = require('../../model/Enums.js')\nconst classNames = require('classnames');\n\nclass DeckAndDiscardSection extends Component {\n  constructor(props) {\n    super(props);\n    this.TableCanvas = React.createRef();\n    this.render.bind(this);\n    this.gameService = props.gameService;\n  }\n\n  getTopDiscardValue(index) {\n    const discard = this.gameService.getGameState().getDiscard()[index];\n    return discard.length > 0 ? discard[discard.length-1].value : '';\n  }\n\n  highlightDeck() {\n    return this.props.moveState === MoveState.START_STATE;\n  }\n\n  highlightDiscard() {\n    return [MoveState.START_STATE, MoveState.DISCARD_CHOSEN].includes(this.props.moveState);\n  }\n\n  // TODO Now MOVE STATE IS HERE DO WE WANT TO MOVE THE DRAW LOGIC DOWN OR KEEP IT HIGHER?\n  // TODO mobile playable\n  render = () => {\n     return (\n      <div className=\"DeckAndDiscardSection\" data-testid=\"middle-section\">\n      {this.gameService.getGameState().getDiscard().map((discard, index) => (\n        <div className=\"DiscardSection\" key={index}>\n          <div className=\"FullWidth\" data-testid=\"discard-header\">\n            Discard {index + 1}\n          </div>\n          <div className=\"PlayerCardWrapper\">\n            <div className={classNames('PlayerCard', 'PlayerCardFront', {\"PlayerCardIsActive\" : this.highlightDiscard()})} data-testid={'discard-pile-' + index} onClick={() => {this.props.drawCallback(DrawType.DISCARD, index)}}>\n              {this.getTopDiscardValue(index)}\n            </div>\n          </div>\n        </div>\n      ))}\n        <div className=\"DeckSection\">\n          <div className=\"FullWidth\" data-testid=\"deck-header\">\n            Deck\n          </div>\n          <div className={classNames('PlayerCard', 'PlayerCardBack', {\"PlayerCardIsActive\" : this.highlightDeck()})} data-testid=\"deck-pile-0\" onClick={() => {this.props.drawCallback(DrawType.DECK)}}>\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M12 2c5.514 0 10 4.486 10 10s-4.486 10-10 10-10-4.486-10-10 4.486-10 10-10zm0-2c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm1.25 17c0 .69-.559 1.25-1.25 1.25-.689 0-1.25-.56-1.25-1.25s.561-1.25 1.25-1.25c.691 0 1.25.56 1.25 1.25zm1.393-9.998c-.608-.616-1.515-.955-2.551-.955-2.18 0-3.59 1.55-3.59 3.95h2.011c0-1.486.829-2.013 1.538-2.013.634 0 1.307.421 1.364 1.226.062.847-.39 1.277-.962 1.821-1.412 1.343-1.438 1.993-1.432 3.468h2.005c-.013-.664.03-1.203.935-2.178.677-.73 1.519-1.638 1.536-3.022.011-.924-.284-1.719-.854-2.297z\"/></svg>\n              </div>\n            </div>\n      </div>\n  )}\n}\n\nexport default DeckAndDiscardSection;\n","import React, { Component } from 'react';\nimport './FooterSection.css';\nconst { ActionType, MoveState, TokenType } = require('../../model/Enums.js')\n\nclass FooterSection extends Component {\n  constructor(props) {\n    super(props);\n    this.gameService = props.gameService;\n    this.tokenService = props.tokenService;\n    this.TableCanvas = React.createRef();\n    this.render.bind(this);\n  }\n\n  ShowCardActionsSection = () => {\n    return [MoveState.CARD_DRAWN, MoveState.TURN_FACE_UP_CHOSEN, MoveState.TURN_FACE_UP_IN_PROGRESS, MoveState.SWAP_CHOSEN, MoveState.SWAP_IN_PROGRESS, MoveState.DISCARD_CHOSEN].includes(this.props.moveState)\n  }\n\n  showActiveCard = () => {\n    return !!this.gameService.getGameState().getActiveCard() && !!this.gameService.getGameState().getActiveCard().value\n  }\n\n  showCardActionButtons = () => {\n    return this.props.moveState === MoveState.CARD_DRAWN;\n  }\n\n  ShowTurnUpAction = () => {\n    return !this.gameService.activePlayerHasAllCardsFaceUp();\n  }\n\n  ShowEndActions = () => {\n    return this.props.moveState === MoveState.PRE_END_STATE;\n  }\n\n  ShowToken = token => {\n    return this.tokenService.canClaimToken(token, this.gameService.getActivePlayersDeck(), this.gameService.getActivePlayersTokens());\n  }\n\n  showPassActions = () => {\n    return this.props.moveState !== MoveState.DISCARD_CHOSEN;\n  }\n\n  render = () => {\n    return (\n      <React.Fragment>\n      <div className=\"CardTableFooter\" data-testid=\"footer-section\">\n      {this.ShowCardActionsSection() &&\n        <React.Fragment>\n        {this.showActiveCard() &&\n          <div className=\"PlayerCard PlayerCardFront\" data-testid=\"footer-active-card\">\n            {this.gameService.getGameState().getActiveCard().value}\n          </div>\n        }\n        {this.showCardActionButtons() &&\n          <div>\n            <button className=\"swapButton\" onClick={() => {this.props.buttonPressedCallback(ActionType.SWAP)}}> Discard to swap two </button>\n            {this.ShowTurnUpAction() && <button className=\"turnFaceUpButton\" data-testid='turn-face-up-button' onClick={() => {this.props.buttonPressedCallback(ActionType.TURN_FACE_UP)}}> Discard to turn two face up </button>}\n          </div>\n        }\n        {this.showPassActions() &&  <div className=\"FullWidth\"><button className=\"mb-2 FullWidth\" onClick={() => {this.props.buttonPressedCallback(ActionType.PASS)}}> Pass </button></div>}\n        </React.Fragment>\n      }\n\n      {this.ShowEndActions() &&\n        <React.Fragment>\n        {this.ShowToken(TokenType.THREE_IN_A_ROW) && <div><button onClick={() => this.props.buttonPressedCallback(ActionType.CLAIM_TOKEN, TokenType.THREE_IN_A_ROW)}> THREE IN A ROW </button></div>}\n        {this.ShowToken(TokenType.FOUR_IN_A_ROW) && <div><button onClick={() => this.props.buttonPressedCallback(ActionType.CLAIM_TOKEN, TokenType.FOUR_IN_A_ROW)}> FOUR IN A ROW </button></div>}\n        {this.ShowToken(TokenType.FIVE_IN_A_ROW) && <div><button onClick={() => this.props.buttonPressedCallback(ActionType.CLAIM_TOKEN, TokenType.FIVE_IN_A_ROW)}> FIVE IN A ROW </button></div>}\n        {this.ShowToken(TokenType.THREE_OF_A_KIND) && <div><button onClick={() => this.props.buttonPressedCallback(ActionType.CLAIM_TOKEN, TokenType.THREE_OF_A_KIND)}> THREE OF A KIND </button></div>}\n        {this.ShowToken(TokenType.FULL_HOUSE) && <div><button onClick={() => this.props.buttonPressedCallback(ActionType.CLAIM_TOKEN, TokenType.FULL_HOUSE)}> FULL HOUSE </button></div>}\n        <div className=\"FullWidth\"><button className=\"mb-2 FullWidth\" onClick={() => {this.props.buttonPressedCallback(ActionType.CHANGE_TURN)}}> Pass </button></div>\n        </React.Fragment>}\n        </div>\n        </React.Fragment>\n      )\n    }\n}\n\n          export default FooterSection;\n","import React, { Component } from 'react';\nimport './RulesSection.css';\n\nclass RulesSection extends Component {\n  constructor(props) {\n    super(props);\n    this.render.bind(this);\n    this.numberOfTokensNeededToWin = this.props.numberOfTokensNeededToWin;\n    this.maxTokens = this.props.maxTokens;\n  }\n  render () {\n    return (\n  <div>\n    <div className=\"scroll-component\">\n      <div className=\"scroll-content\">\n\n      <div className=\"rulesSection\" data-testid=\"rules-section\">\n        <div className=\"secondary-background rulesSectionContent\">\n          <h3 className=\"rules-header\">Rules</h3>\n        </div>\n        <div className=\"secondary-background rulesSectionContent\">\n          <h4 className=\"rules-header\">Introduction</h4>\n          <p className=\"rules-p\">Welcome to Straight 5, a rummy-like, yahtzee-like card game! This is the (work-in-progress) digitial version of the (hopefully future) Straight 5 game. </p>\n        </div>\n\n        <div className=\"primary-background rulesSectionContent\">\n          <h4 className=\"rules-header\">Winning</h4>\n          <p className=\"rules-p\" data-testid=\"tokens-to-win\">\n            The first player to claim {this.numberOfTokensNeededToWin} out of {this.maxTokens} tokens below wins.</p>\n          <ul>\n            <li>Three in a row</li>\n            <li>Four in a row</li>\n            <li>Five in a row</li>\n            <li>Three of a kind</li>\n            <li>Full House</li>\n          </ul>\n        </div>\n        <div className=\"secondary-background rulesSectionContent\">\n          <h4 className=\"rules-header\">Set up</h4>\n          <p className=\"rules-p\">Each player begins with 5 cards face-down in front of them.\n          The top card of the deck will be turned over as a discard</p>\n        </div>\n        <div className=\"primary-background rulesSectionContent\">\n          <h4 className=\"rules-header\">Turn Order</h4>\n          <p className=\"rules-p\">Each consists of four phases:</p>\n          <ol>\n            <li><h4 className=\"phaseHeader\">Draw Phase:</h4> draw the top card of the deck or discard piles</li>\n            <li><h4 className=\"phaseHeader\">Play Phase:</h4>\n              <ul>\n                <li> Place card in front of you or; </li>\n                <li> Take one of the following actions:  </li>\n                <ul>\n                  <li> Turn up to two cards face-up</li>\n                  <li> Swap any two cards </li>\n                </ul>\n              </ul>\n            </li>\n            <li><h4 className=\"phaseHeader\">Discard Phase:</h4> discard active card to one of the discard piles (your choice)</li>\n            <li><h4 className=\"phaseHeader\">Claim Token Phase</h4>: Claim a token by discarding the required cards (e.g. 1 2 3 4 for Four In a Row).</li>\n          </ol>\n        </div>\n        <div className=\"secondary-background rulesSectionContent\">\n          <h4 className=\"rules-header\">Rule Clarifications</h4>\n          <p className=\"rules-p\">Here are some clarifications on rules above:</p>\n          <ol>\n            <li>When you place the drawn card in front of you, you do not get to take another action</li>\n            <li>When you discard a card, you get to choose which discard pile it goes into <b>UNLESS</b> a discard pile has 0 cards, in which case you must discard it there (and the app will do this automatically)</li>\n            <li>If you have only one card face-up and choose to take the \"turn up to two cards face up\" action. You only get to turn one card face up. </li>\n            <li>You can only claim each token once</li>\n            <li>You can only claim one token per turn</li>\n            <li>The cards to claim the tokens for the straights (3/4/5 in a row) must be adjacent and in ascending order (e.g. 1 2 3 not 3 2 1 or 1 3 2)</li>\n            <li>The cards to claim the tokens for three of a kind and full house can be anywhere</li>\n          </ol>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n  )}\n}\n\nexport default RulesSection;\n","import React, { Component } from 'react';\nimport './RulesSectionWrapper.css';\nimport RulesSection from './RulesSection.js';\nimport Modal from 'react-modal';\n\nclass RulesSectionWrapper extends Component {\n  constructor(props) {\n    super(props);\n    this.maxTokens = 5; //TODO tokens to select and count should be a config\n    this.state = {\n      'modelIsOpen': false\n    }\n    this.render.bind(this);\n  }\n\n  customStyles = {\n    content: {\n      top: '50%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      marginRight: '-50%',\n      transform: 'translate(-50%, -50%)',\n      maxWidth: '400px',\n      maxHeight: '80vh'\n    },\n  };\n\n  render () {\n    const openModal = () => {\n      this.setState({'modelIsOpen': true})\n    }\n\n    const closeModal = () => {\n      this.setState({'modelIsOpen': false})\n    }\n    return (\n      <div>\n        <div className=\"open-modal-container\" id=\"modal-div\">\n          <div className=\"open-modal-content\">\n            <button className=\"small-width-button\" data-testid=\"open-modal-button\" onClick={openModal}>Rules</button>\n          </div>\n        </div>\n        <Modal\n          isOpen={this.state.modelIsOpen}\n          onRequestClose={closeModal}\n          style={this.customStyles}\n          ariaHideApp={false}\n          >\n          <RulesSection numberOfTokensNeededToWin={this.props.configService.getNumberOfTokensNeededToWin()} maxTokens={this.maxTokens}></RulesSection>\n          <div className=\"close-modal-container\">\n            <div className=\"close-modal-content\">\n              <button className=\"open-modal-button\" data-testid=\"close-modal-button\" onClick={closeModal}>close</button>\n            </div>\n          </div>\n        </Modal>\n      </div>\n    )}\n  }\n\n  export default RulesSectionWrapper;\n","import React, { Component } from 'react';\nimport './HeaderSection.css';\nimport RulesSectionWrapper from './RulesSectionWrapper.js';\n\nclass HeaderSection extends Component {\n  constructor(props) {\n    super(props);\n    this.render.bind(this);\n  }\n\n  render () {\n    return (\n  <div className=\"straight5-header-container\" data-testid=\"header-section\">\n    <div className=\"straight5-header-header\">\n      <h2 className=\"startHeader\" data-testid=\"start-header\">\n        Straight 5\n      </h2>\n    </div>\n    <div className=\"straight5-header-rulesSection\">\n      <RulesSectionWrapper configService={this.props.configService}></RulesSectionWrapper>\n    </div>\n  </div>\n  )}\n}\n\nexport default HeaderSection;\n","import React, { Component } from 'react';\nimport { Slider } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\n\nexport const PrettySlider = withStyles({\nroot: {\n  color: '#52af77',\n  height: 8,\n},\nthumb: {\n  height: 24,\n  width: 24,\n  backgroundColor: '#fff',\n  border: '2px solid currentColor',\n  marginTop: -8,\n  marginLeft: -12,\n  '&:focus, &:hover, &$active': {\n    boxShadow: 'inherit',\n  },\n},\nactive: {},\nvalueLabel: {\n  left: 'calc(-50% + 4px)',\n},\nmarkLabel: {\n  color: 'white'\n},\ntrack: {\n  height: 8,\n  borderRadius: 4,\n},\nrail: {\n  height: 8,\n  borderRadius: 4\n},\n})(Slider);\n\nexport class Straight5Slider extends Component {\n  constructor(props) {\n    super(props);\n    this.TableCanvas = React.createRef();\n    this.render.bind(this);\n  }\n  render = () => {\n    return (\n\n      <PrettySlider valueLabelDisplay=\"on\" aria-label=\"pretty slider\"\n        min={this.props.min} step={this.props.step} max={this.props.max} value={this.props.value}\n        marks={this.props.marks}\n        onChange={this.props.onChange}\n        disabled={this.props.disabled}\n        />\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport './GameConfigurationSection.css';\nimport Typography from '@material-ui/core/Typography';\nimport {Straight5Slider} from '../../generic/Slider.js'\n\n// TODO figure out a way to test\nclass GameConfigurationSection extends Component {\n  constructor(props) {\n    super(props);\n    this.TableCanvas = React.createRef();\n    this.render.bind(this);\n    this.configService = this.props.configService;\n    this.onCardRangeChanged = this.onCardRangeChanged.bind(this);\n    this.onRepeatChanged = this.onRepeatChanged.bind(this);\n    this.onPlayerNumberChanged = this.onPlayerNumberChanged.bind(this);\n    this.onDiscardNumberChanged = this.onDiscardNumberChanged.bind(this);\n    this.onJokerNumberChanged = this.onJokerNumberChanged.bind(this);\n    this.onNumberOfTokensNeededToWinChanged = this.onNumberOfTokensNeededToWinChanged.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n\n  marks1 = [\n    {\n      value: 5,\n      label: '5',\n    },\n    {\n      value: 6,\n      label: '',\n    },\n    {\n      value: 7,\n      label: '',\n    },\n    {\n      value: 8,\n      label: '',\n    },\n    {\n      value: 9,\n      label: '9',\n    },\n    {\n      value: 10,\n      label: '',\n    },\n    {\n      value: 11,\n      label: '',\n    },\n    {\n      value: 12,\n      label: '',\n    },\n    {\n      value: 13,\n      label: '13',\n    },\n  ];\n\n  marks2 = [\n    {\n      value: 3,\n      label: '3',\n    },\n    {\n      value: 4,\n      label: '',\n    },\n    {\n      value: 5,\n      label: '',\n    },\n    {\n      value: 6,\n      label: '6',\n    },\n    {\n      value: 7,\n      label: '',\n    },\n    {\n      value: 8,\n      label: '',\n    },\n    {\n      value: 9,\n      label: '9',\n    }\n  ];\n\n  onCardRangeChanged(event, value)  {\n    this.configService.setMaxNumberInDeck(value);\n    this.forceUpdate();\n  }\n\n  onRepeatChanged(event, value)  {\n    this.configService.setRepeatsPerNumber(value);\n    this.forceUpdate();\n  }\n\n  onPlayerNumberChanged(event, value)  {\n    this.configService.setNumberOfPlayers(value);\n    this.forceUpdate();\n  }\n\n  onDiscardNumberChanged(event, value)  {\n    this.configService.setNumberOfDiscards(value);\n    this.forceUpdate();\n  }\n\n  onJokerNumberChanged(event, value)  {\n    this.configService.setNumberOfJokers(value);\n    this.forceUpdate();\n  }\n  onNumberOfTokensNeededToWinChanged(event, value)  {\n    this.configService.setNumberOfTokensNeededToWin(value);\n    this.forceUpdate();\n  }\n\n  reset() {\n    this.configService.reset();\n    this.forceUpdate()\n  }\n// TODO I think this would be cool as a modal\n  render = () => {\n    return (\n      <div className=\"configuration-container\">\n\n        <Typography id=\"discrete-card-range\" gutterBottom>\n          Card Range\n        </Typography>\n        <Straight5Slider min={5} step={1} max={13} value={this.configService.getMaxNumberInDeck()}\n        marks={this.marks1}\n        onChange={this.onCardRangeChanged}/>\n\n        <Typography id=\"discrete-repeats\" gutterBottom>\n          Number of repeats\n        </Typography>\n        <Straight5Slider min={3} step={1} max={9} value={this.configService.getRepeatsPerNumber()}\n          marks={this.marks2}\n          onChange={this.onRepeatChanged}\n          />\n\n        <Typography id=\"discrete-num-players\" gutterBottom>\n          Number of Players\n        </Typography>\n        <Straight5Slider min={2} step={1} max={5} value={this.configService.getNumberOfPlayers()}\n          disabled={true}\n          marks\n          onChange={this.onPlayerNumberChanged}\n          />\n\n        <Typography id=\"discrete-num-discard-piles\" gutterBottom>\n          Number of Discard Piles\n        </Typography>\n        <Straight5Slider min={1} step={1} max={4} value={this.configService.getNumberOfDiscards()}\n          marks\n          onChange={this.onDiscardNumberChanged}\n          />\n\n        <Typography id=\"discrete-num-jokers\" gutterBottom>\n          Number of Jokers\n        </Typography>\n        <Straight5Slider min={0} step={1} max={9} value={this.configService.getNumberOfJokers()}\n          marks\n          onChange={this.onJokerNumberChanged}\n          />\n\n        <Typography id=\"discrete-num-tokens-to-win\" gutterBottom>\n          Number of Tokens Needed to win\n        </Typography>\n        <Straight5Slider min={1} step={1} max={5} value={this.configService.getNumberOfTokensNeededToWin()}\n          marks\n          onChange={this.onNumberOfTokensNeededToWinChanged}\n          />\n\n        <button onClick={this.reset}>Reset</button>\n      </div>\n    )\n  }\n}\n\nexport default GameConfigurationSection;\n","import React, { Component } from 'react';\nimport './StartSection.css';\nimport GameConfigurationSection from './GameConfigurationSection.js';\n\nclass StartSection extends Component {\n  constructor(props) {\n    super(props);\n    this.TableCanvas = React.createRef();\n    this.render.bind(this);\n    this.state = {\n      showConfiguration: false\n    }\n  }\n  render = () => {\n    return (\n      <div className=\"start-section-container\">\n        <div>\n          <button data-testid=\"start-section-hide-show-configuration-button\" onClick={() => {this.setState({showConfiguration: !this.state.showConfiguration})}}>{this.state.showConfiguration ? 'Hide Configuration' : 'Show Configuration'}</button>\n        </div>\n        {this.state.showConfiguration &&\n          <div className=\"start-section-slider-container\" data-testid=\"start-section-slider-container\">\n             <GameConfigurationSection configService={this.props.configService}/>\n          </div>}\n        <div className=\"mb-4 mt-2\">\n          <button className=\"small-width-button\" data-testid=\"startButton\" onClick={this.props.startNewGameCallback}>Start New Game</button>\n        </div>\n      </div>\n      )\n    }\n}\n\nexport default StartSection;\n","import React, { Component } from 'react';\nimport './NewstickerSection.css';\nconst { getPlayerTextForMoveState } = require('../../Utils.js')\n\nclass NewstickerSection extends Component {\n  constructor(props) {\n    super(props);\n    this.TableCanvas = React.createRef();\n    this.render.bind(this);\n  }\n\n  render = () => {\n    return (\n      <React.Fragment>\n      <div className=\"newsTicker\" data-testid=\"newsticker\">\n        <div className=\"newsTickerTriangleLeft\"/>\n        <div className=\"newsTickerMain\">\n          {getPlayerTextForMoveState(this.props.moveState, this.props.gameState.getSwapCardIndex() + 1)}\n        </div>\n        <div className=\"newsTickerTriangleRight\"/>\n      </div>\n      </React.Fragment>\n  )}\n}\n\nexport default NewstickerSection;\n","import React, { Component } from 'react';\nimport Hand from './game/Hand.js';\nimport DeckAndDiscardSection from './game/DeckAndDiscardSection.js';\nimport FooterSection from './game/FooterSection.js';\nimport HeaderSection from './HeaderSection.js';\nimport StartSection from './game/start/StartSection.js';\nimport NewstickerSection from './game/NewstickerSection.js';\nimport './Straight5.css';\nconst {ActionType, AppMode, DrawType, MoveState, TokenType} = require('../model/Enums.js')\nconst classNames = require('classnames');\n\n// TODO maybe pop-up when turn changes\n// TODO only highlight options that can be clicked when claiming a token\nclass Straight5 extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      AppMode: AppMode.START_STATE,\n      MoveState: MoveState.START_STATE,\n    };\n    this.playerService = props.playerService;\n    this.gameService = props.gameService;\n    this.gameState = props.gameState;\n    this.configService = props.configService;\n    this.tokenService = props.tokenService;\n  }\n\n  StartNewGame = () => {\n    this.playerService.resetPlayers();\n    this.gameService.startNewGame();\n    this.setState({\n      MoveState: MoveState.START_STATE,\n      AppMode: AppMode.GAME\n    });\n  }\n\n\n  handleDiscard(index, action) {\n    this.gameService.discardCard(index);\n    this.EndMove();\n  }\n  //TODO animation\n  deckAndDiscardPressed = (type, index) => {\n    if (this.state.MoveState !== MoveState.START_STATE) {\n      if (this.state.MoveState === MoveState.DISCARD_CHOSEN &&\n           type === DrawType.DISCARD) {\n             this.handleDiscard(index);\n      }\n      return;\n    }\n    if (type === DrawType.DECK) {\n      this.gameService.drawCardFromDeck();\n    } else if (type === DrawType.DISCARD) {\n\n      this.gameService.drawCardFromDiscard(index);\n    } else {\n      console.error('draw card failed', type);\n    }\n    this.setState({\n      MoveState: MoveState.CARD_DRAWN\n    });\n\n  }\n\n  ReplaceCard = index => {\n    this.gameService.replaceCard(index);\n  }\n\n  TurnCardFaceUp = index => {\n    if (!this.gameService.turnCardFaceUp(index)) {\n      return;\n    }\n    if (this.state.MoveState === MoveState.TURN_FACE_UP_IN_PROGRESS || this.gameService.activePlayerHasAllCardsFaceUp()) {\n      return this.setDiscardChosenState();\n    }\n    this.setState({\n      MoveState: MoveState.TURN_FACE_UP_IN_PROGRESS,\n    });\n  }\n\n  SwapCards = index => {\n    if (this.gameService.swapIsValid(index)) {\n      this.gameService.swapCards(index);\n      return this.setDiscardChosenState();\n    }\n    this.gameState.setSwapCardIndex(index);\n    this.setState({\n      MoveState: MoveState.SWAP_IN_PROGRESS\n    })\n  }\n\n  EndMove = () => {\n    if (this.tokenService.playerCanClaimToken(this.playerService.getPlayers()[this.gameState.getActivePlayerIndex()])) {\n      this.setState({MoveState: MoveState.PRE_END_STATE});\n      return;\n    }\n  this.ChangeTurn();\n\n  }\n\n  checkIfWinner() {\n    if (this.gameService.getActivePlayersTokens().length >= this.configService.getNumberOfTokensNeededToWin()) {\n      this.setState({\n        AppMode: AppMode.PLAYER_WIN\n      });\n      return true;\n    }\n    return false;\n  }\n\n  ClaimTokenCardPress = index => {\n    if (this.tokenService.isValidIndexForToken(this.gameState.getTokenToClaim(), this.gameService.getActivePlayersDeck(), index)) {\n      this.gameService.claimToken(index);\n      if (!this.checkIfWinner()) {\n      return this.ChangeTurn();\n      }\n    } else {\n      console.error('invalid index :(')\n    }\n  }\n\n  ChangeTurn = () => {\n    this.gameService.nextPlayer();\n    return this.setState({\n      MoveState: MoveState.START_STATE\n    });\n  }\n\n  setDiscardChosenState() {\n    const index = this.gameService.discardPileHas0Cards();\n    if (index >= 0) {\n      this.handleDiscard(index);\n      return\n    }\n    this.setState({MoveState: MoveState.DISCARD_CHOSEN});\n  }\n\n  handleActionButtonPressed = (action, token) => {\n    if (action === ActionType.PASS) {\n      if (this.state.MoveState === MoveState.CARD_DRAWN) {\n        return this.setDiscardChosenState();\n      }\n      return this.EndMove();\n    } else if (action === ActionType.SWAP) {\n      return this.setState({MoveState: MoveState.SWAP_CHOSEN});\n    } else if (action ===  ActionType.TURN_FACE_UP) {\n      return this.setState({MoveState: MoveState.TURN_FACE_UP_CHOSEN});\n    }\n    if (action === ActionType.CHANGE_TURN) {\n      return this.ChangeTurn()\n    }\n    if (action === ActionType.CLAIM_TOKEN) {\n      this.gameState.setTokenToClaim(token);\n\n      const indeces = this.tokenService.getAllIndecesForToken(this.gameService.getActivePlayersDeck(), token);\n      if (indeces.length === 1 || token === TokenType.FULL_HOUSE || token === TokenType.THREE_OF_A_KIND) {\n        this.gameService.claimToken(indeces[0][0]); //TODO TEST\n        if (!this.checkIfWinner()) {\n          return this.ChangeTurn();\n        }\n      }\n      // TODO Less autoclaim if multiple options for three of a\n      this.setState({\n        MoveState: MoveState.CLAIMING_TOKEN\n      });\n    }\n  }\n\n  handlePlayerCardPressed = (player, index)  =>  {\n    if (player !== this.gameState.getActivePlayerIndex()) {\n      console.log('card from wrong player clicked')\n      return;\n    }\n    switch (this.state.MoveState) {\n      case MoveState.CARD_DRAWN:\n        this.ReplaceCard(index);\n        this.setDiscardChosenState(ActionType.REPLACE_CARD);\n        return\n      case MoveState.TURN_FACE_UP_CHOSEN:\n      case MoveState.TURN_FACE_UP_IN_PROGRESS:\n        this.TurnCardFaceUp(index);\n        break\n      case MoveState.SWAP_CHOSEN:\n      case MoveState.SWAP_IN_PROGRESS:\n        this.SwapCards(index)\n        break\n      case MoveState.CLAIMING_TOKEN:\n        this.ClaimTokenCardPress(index);\n        break;\n      default:\n        console.log('No action for this status', this.state.MoveState)\n    }\n  }\n  // TODO SHOW ACTIVE PLAYER\n  // TODO ADD AI\n  // TODO state service instead of this.state -- this is on wip-stateService but doesn't work because to update the UI you need to update the state\n\n  render = () => {\n    return (\n      <React.Fragment>\n  <div className={classNames('CardTable', {'CardTableGame': this.state.AppMode === AppMode.GAME})}>\n\n    <HeaderSection configService={this.configService}></HeaderSection>\n    {this.state.AppMode === AppMode.START_STATE &&\n    <React.Fragment>\n      <StartSection startNewGameCallback={this.StartNewGame} configService={this.configService}/>\n    </React.Fragment>}\n\n    {this.state.AppMode  === AppMode.GAME &&\n    <React.Fragment>\n      <Hand gameService={this.gameService} configService={this.configService} moveState={this.state.MoveState} playerService={this.playerService} id={0} cardPressedCallback={this.handlePlayerCardPressed} />\n      <DeckAndDiscardSection gameService={this.gameService} drawCallback={this.deckAndDiscardPressed} moveState={this.state.MoveState}/>\n      <Hand gameService={this.gameService} configService={this.configService} moveState={this.state.MoveState} playerService={this.playerService} id={1} cardPressedCallback={this.handlePlayerCardPressed} />\n    </React.Fragment>}\n\n    {this.state.AppMode === AppMode.PLAYER_WIN &&\n    <React.Fragment>\n        <div className=\"mb-4\" data-testid=\"win-header\">\n        Congratulations to Player {this.gameState.getActivePlayerIndex() + 1}\n        <StartSection startNewGameCallback={this.StartNewGame} configService={this.configService}/>\n        </div>\n    </React.Fragment>}\n  </div>\n  {this.state.AppMode  === AppMode.GAME &&\n  <React.Fragment>\n    {this.state.AppMode  === AppMode.GAME && <NewstickerSection gameState={this.gameState} moveState={this.state.MoveState}/>}\n    {this.state.AppMode  === AppMode.GAME && <FooterSection gameService={this.gameService} moveState={this.state.MoveState} tokenService={this.tokenService} buttonPressedCallback={this.handleActionButtonPressed} />}\n  </React.Fragment>}\n  </React.Fragment>\n  )}\n}\n\nexport default Straight5;\n","import React from 'react';\nimport './App.css';\nimport Straight5 from './components/Straight5.js';\nconst { GameState } = require('./model/GameState.js')\nconst { GameService } = require('./service/GameService.js')\nconst { PlayerService } = require('./service/PlayerService.js')\nconst { ConfigService } = require('./service/ConfigService.js')\nconst { TokenService } = require('./service/TokenService.js')\n\nfunction App() {\n  const configService = new ConfigService();\n  configService.reset();\n  const playerService = new PlayerService(configService)\n  const tokenService = new TokenService();\n  const gameState = new GameState();\n  const gameService = new GameService(playerService, tokenService, configService, gameState);\n  return (\n    <div className=\"App\">\n      <header>\n      <div className=\"Container\">\n\n        <Straight5 playerService={playerService} gameService={gameService} configService={configService} tokenService={tokenService} gameState={gameState}></Straight5>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}